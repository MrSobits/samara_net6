<#@ template debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core.dll" #>
<#@ Assembly Name="System.Xml.dll" #>
<#@ Assembly Name="System.Xml.Linq.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
namespace Bars.GkhGji.Regions.Perm
{
    using Bars.B4;

    /// <summary>
    /// Манифест ресурсов.
    /// Используется для регистрации ресурсов модуля в общем контейере ресурсов.
    /// </summary>
    public partial class ResourceManifest : ResourceManifestBase
    {
        protected override void BaseInit(IResourceManifestContainer container)
        {

<#          this.GenereateAllResources("Views");#>
<#          this.GenereateAllResources("libs");#>
<#          this.GenereateAllResources("content");#>
<#          this.GenereateAllResources("scripts");#>
<#          this.GenereateAllResources("css");#>
<#          this.GenereateAllResources("js");#>

        }
    }
}
<#+
    void GenereateAllResources(string localFolder)
    {
        var folders = new[]{localFolder, Path.Combine(Path.GetDirectoryName(Host.TemplateFile), localFolder)};
        var directoryName = folders.FirstOrDefault(Directory.Exists);
        if (string.IsNullOrEmpty(directoryName)) return;

        foreach(var file in Directory.GetFiles(directoryName, "*.*", SearchOption.AllDirectories))
        {
            var resourcePath = string.Format("{0}{1}", localFolder, file.Replace(directoryName, string.Empty).Replace("\\","/"));
#>
            this.RegisterResource(container, "<#= resourcePath #>");
<#+
        }
    }
#>