//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bars.GisIntegration.Smev.SmevExchangeService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://sz.service.bars-open.ru/smev3.0/v1.1", ConfigurationName="SmevExchangeService.ServiceConsumer")]
    public interface ServiceConsumer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sz.service.bars-open.ru/smev3.0/v1.1/ServiceConsumer/SendRequest", ReplyAction="http://sz.service.bars-open.ru/smev3.0/v1.1/ServiceConsumer/SendRequestResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Bars.GisIntegration.Smev.SmevExchangeService.ServiceResponseType SendRequest(Bars.GisIntegration.Smev.SmevExchangeService.ServiceRequestType request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sz.service.bars-open.ru/smev3.0/v1.1/ServiceConsumer/SendRequest", ReplyAction="http://sz.service.bars-open.ru/smev3.0/v1.1/ServiceConsumer/SendRequestResponse")]
        System.Threading.Tasks.Task<Bars.GisIntegration.Smev.SmevExchangeService.ServiceResponseType> SendRequestAsync(Bars.GisIntegration.Smev.SmevExchangeService.ServiceRequestType request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sz.service.bars-open.ru/smev3.0/v1.1/ServiceConsumer/SendDataRequest", ReplyAction="http://sz.service.bars-open.ru/smev3.0/v1.1/ServiceConsumer/SendDataRequestRespon" +
            "se")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Bars.GisIntegration.Smev.SmevExchangeService.ServiceResponseType SendDataRequest(Bars.GisIntegration.Smev.SmevExchangeService.ServiceDataRequestType request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sz.service.bars-open.ru/smev3.0/v1.1/ServiceConsumer/SendDataRequest", ReplyAction="http://sz.service.bars-open.ru/smev3.0/v1.1/ServiceConsumer/SendDataRequestRespon" +
            "se")]
        System.Threading.Tasks.Task<Bars.GisIntegration.Smev.SmevExchangeService.ServiceResponseType> SendDataRequestAsync(Bars.GisIntegration.Smev.SmevExchangeService.ServiceDataRequestType request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sz.service.bars-open.ru/smev3.0/v1.1/ServiceConsumer/AckRequest", ReplyAction="http://sz.service.bars-open.ru/smev3.0/v1.1/ServiceConsumer/AckRequestResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Bars.GisIntegration.Smev.SmevExchangeService.ServiceResponseType AckRequest(string message_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sz.service.bars-open.ru/smev3.0/v1.1/ServiceConsumer/AckRequest", ReplyAction="http://sz.service.bars-open.ru/smev3.0/v1.1/ServiceConsumer/AckRequestResponse")]
        System.Threading.Tasks.Task<Bars.GisIntegration.Smev.SmevExchangeService.ServiceResponseType> AckRequestAsync(string message_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sz.service.bars-open.ru/smev3.0/v1.1/ServiceConsumer/GetResponseRequest", ReplyAction="http://sz.service.bars-open.ru/smev3.0/v1.1/ServiceConsumer/GetResponseRequestRes" +
            "ponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Bars.GisIntegration.Smev.SmevExchangeService.ServiceResponseType GetResponseRequest(string message_id, string rootElement, string namespaceUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sz.service.bars-open.ru/smev3.0/v1.1/ServiceConsumer/GetResponseRequest", ReplyAction="http://sz.service.bars-open.ru/smev3.0/v1.1/ServiceConsumer/GetResponseRequestRes" +
            "ponse")]
        System.Threading.Tasks.Task<Bars.GisIntegration.Smev.SmevExchangeService.ServiceResponseType> GetResponseRequestAsync(string message_id, string rootElement, string namespaceUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sz.service.bars-open.ru/smev3.0/v1.1/ServiceConsumer/GetRequestRequest", ReplyAction="http://sz.service.bars-open.ru/smev3.0/v1.1/ServiceConsumer/GetRequestRequestResp" +
            "onse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Bars.GisIntegration.Smev.SmevExchangeService.ServiceResponseType GetRequestRequest(string message_id, string rootElement, string namespaceUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sz.service.bars-open.ru/smev3.0/v1.1/ServiceConsumer/GetRequestRequest", ReplyAction="http://sz.service.bars-open.ru/smev3.0/v1.1/ServiceConsumer/GetRequestRequestResp" +
            "onse")]
        System.Threading.Tasks.Task<Bars.GisIntegration.Smev.SmevExchangeService.ServiceResponseType> GetRequestRequestAsync(string message_id, string rootElement, string namespaceUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sz.service.bars-open.ru/smev3.0/v1.1/ServiceConsumer/GetResponseRequestByI" +
            "d", ReplyAction="http://sz.service.bars-open.ru/smev3.0/v1.1/ServiceConsumer/GetResponseRequestByI" +
            "dResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Bars.GisIntegration.Smev.SmevExchangeService.ServiceResponseType GetResponseRequestById(string message_id, bool isManualAck);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sz.service.bars-open.ru/smev3.0/v1.1/ServiceConsumer/GetResponseRequestByI" +
            "d", ReplyAction="http://sz.service.bars-open.ru/smev3.0/v1.1/ServiceConsumer/GetResponseRequestByI" +
            "dResponse")]
        System.Threading.Tasks.Task<Bars.GisIntegration.Smev.SmevExchangeService.ServiceResponseType> GetResponseRequestByIdAsync(string message_id, bool isManualAck);
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ServiceDataRequestType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sz.service.bars-open.ru/smev3.0/v1.1")]
    public partial class ServiceRequestType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string base64RequestField;
        
        private bool isTestMessageField;
        
        private System.Nullable<bool> isOnlySignField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string base64Request {
            get {
                return this.base64RequestField;
            }
            set {
                this.base64RequestField = value;
                this.RaisePropertyChanged("base64Request");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool isTestMessage {
            get {
                return this.isTestMessageField;
            }
            set {
                this.isTestMessageField = value;
                this.RaisePropertyChanged("isTestMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public System.Nullable<bool> isOnlySign {
            get {
                return this.isOnlySignField;
            }
            set {
                this.isOnlySignField = value;
                this.RaisePropertyChanged("isOnlySign");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.1")]
    public partial class SenderProvidedResponseDataRequestRejected : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string rejectionReasonCodeField;
        
        private string rejectionReasonField;
        
        private string rejectionReasonDescriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string RejectionReasonCode {
            get {
                return this.rejectionReasonCodeField;
            }
            set {
                this.rejectionReasonCodeField = value;
                this.RaisePropertyChanged("RejectionReasonCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string RejectionReason {
            get {
                return this.rejectionReasonField;
            }
            set {
                this.rejectionReasonField = value;
                this.RaisePropertyChanged("RejectionReason");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string RejectionReasonDescription {
            get {
                return this.rejectionReasonDescriptionField;
            }
            set {
                this.rejectionReasonDescriptionField = value;
                this.RaisePropertyChanged("RejectionReasonDescription");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sz.service.bars-open.ru/smev3.0/v1.1")]
    public partial class ServiceResponseType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int resultCodeField;
        
        private string resultMessageField;
        
        private string messageIdField;
        
        private object itemField;
        
        private ItemChoiceType itemElementNameField;
        
        private System.Nullable<System.DateTime> deliveryTimestampField;
        
        private bool deliveryTimestampFieldSpecified;
        
        private System.Nullable<int> ackResultCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("resultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string resultMessage {
            get {
                return this.resultMessageField;
            }
            set {
                this.resultMessageField = value;
                this.RaisePropertyChanged("resultMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string messageId {
            get {
                return this.messageIdField;
            }
            set {
                this.messageIdField = value;
                this.RaisePropertyChanged("messageId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FaultResponse", typeof(System.Xml.XmlElement), Order=3)]
        [System.Xml.Serialization.XmlElementAttribute("None", typeof(object), Order=3)]
        [System.Xml.Serialization.XmlElementAttribute("RequestRejected", typeof(SenderProvidedResponseDataRequestRejected), Order=3)]
        [System.Xml.Serialization.XmlElementAttribute("SignedRequest", typeof(System.Xml.XmlElement), Order=3)]
        [System.Xml.Serialization.XmlElementAttribute("MessagePrimaryContent", typeof(System.Xml.XmlElement), Namespace="urn://x-artefacts-smev-gov-ru/services/message-exchange/types/basic/1.1", Order=3)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
                this.RaisePropertyChanged("Item");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType ItemElementName {
            get {
                return this.itemElementNameField;
            }
            set {
                this.itemElementNameField = value;
                this.RaisePropertyChanged("ItemElementName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public System.Nullable<System.DateTime> DeliveryTimestamp {
            get {
                return this.deliveryTimestampField;
            }
            set {
                this.deliveryTimestampField = value;
                this.RaisePropertyChanged("DeliveryTimestamp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeliveryTimestampSpecified {
            get {
                return this.deliveryTimestampFieldSpecified;
            }
            set {
                this.deliveryTimestampFieldSpecified = value;
                this.RaisePropertyChanged("DeliveryTimestampSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public System.Nullable<int> ackResultCode {
            get {
                return this.ackResultCodeField;
            }
            set {
                this.ackResultCodeField = value;
                this.RaisePropertyChanged("ackResultCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sz.service.bars-open.ru/smev3.0/v1.1", IncludeInSchema=false)]
    public enum ItemChoiceType {
        
        /// <remarks/>
        FaultResponse,
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        RequestRejected,
        
        /// <remarks/>
        SignedRequest,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("urn://x-artefacts-smev-gov-ru/services/message-exchange/types/basic/1.1:MessagePr" +
            "imaryContent")]
        MessagePrimaryContent,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sz.service.bars-open.ru/smev3.0/v1.1")]
    public partial class ServiceDataRequestType : ServiceRequestType {
        
        private string base64AttachmentHeadersField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string base64AttachmentHeaders {
            get {
                return this.base64AttachmentHeadersField;
            }
            set {
                this.base64AttachmentHeadersField = value;
                this.RaisePropertyChanged("base64AttachmentHeaders");
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceConsumerChannel : Bars.GisIntegration.Smev.SmevExchangeService.ServiceConsumer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceConsumerClient : System.ServiceModel.ClientBase<Bars.GisIntegration.Smev.SmevExchangeService.ServiceConsumer>, Bars.GisIntegration.Smev.SmevExchangeService.ServiceConsumer {
        
        public ServiceConsumerClient() {
        }
        
        public ServiceConsumerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceConsumerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceConsumerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceConsumerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Bars.GisIntegration.Smev.SmevExchangeService.ServiceResponseType SendRequest(Bars.GisIntegration.Smev.SmevExchangeService.ServiceRequestType request) {
            return base.Channel.SendRequest(request);
        }
        
        public System.Threading.Tasks.Task<Bars.GisIntegration.Smev.SmevExchangeService.ServiceResponseType> SendRequestAsync(Bars.GisIntegration.Smev.SmevExchangeService.ServiceRequestType request) {
            return base.Channel.SendRequestAsync(request);
        }
        
        public Bars.GisIntegration.Smev.SmevExchangeService.ServiceResponseType SendDataRequest(Bars.GisIntegration.Smev.SmevExchangeService.ServiceDataRequestType request) {
            return base.Channel.SendDataRequest(request);
        }
        
        public System.Threading.Tasks.Task<Bars.GisIntegration.Smev.SmevExchangeService.ServiceResponseType> SendDataRequestAsync(Bars.GisIntegration.Smev.SmevExchangeService.ServiceDataRequestType request) {
            return base.Channel.SendDataRequestAsync(request);
        }
        
        public Bars.GisIntegration.Smev.SmevExchangeService.ServiceResponseType AckRequest(string message_id) {
            return base.Channel.AckRequest(message_id);
        }
        
        public System.Threading.Tasks.Task<Bars.GisIntegration.Smev.SmevExchangeService.ServiceResponseType> AckRequestAsync(string message_id) {
            return base.Channel.AckRequestAsync(message_id);
        }
        
        public Bars.GisIntegration.Smev.SmevExchangeService.ServiceResponseType GetResponseRequest(string message_id, string rootElement, string namespaceUri) {
            return base.Channel.GetResponseRequest(message_id, rootElement, namespaceUri);
        }
        
        public System.Threading.Tasks.Task<Bars.GisIntegration.Smev.SmevExchangeService.ServiceResponseType> GetResponseRequestAsync(string message_id, string rootElement, string namespaceUri) {
            return base.Channel.GetResponseRequestAsync(message_id, rootElement, namespaceUri);
        }
        
        public Bars.GisIntegration.Smev.SmevExchangeService.ServiceResponseType GetRequestRequest(string message_id, string rootElement, string namespaceUri) {
            return base.Channel.GetRequestRequest(message_id, rootElement, namespaceUri);
        }
        
        public System.Threading.Tasks.Task<Bars.GisIntegration.Smev.SmevExchangeService.ServiceResponseType> GetRequestRequestAsync(string message_id, string rootElement, string namespaceUri) {
            return base.Channel.GetRequestRequestAsync(message_id, rootElement, namespaceUri);
        }
        
        public Bars.GisIntegration.Smev.SmevExchangeService.ServiceResponseType GetResponseRequestById(string message_id, bool isManualAck) {
            return base.Channel.GetResponseRequestById(message_id, isManualAck);
        }
        
        public System.Threading.Tasks.Task<Bars.GisIntegration.Smev.SmevExchangeService.ServiceResponseType> GetResponseRequestByIdAsync(string message_id, bool isManualAck) {
            return base.Channel.GetResponseRequestByIdAsync(message_id, isManualAck);
        }
    }
}
