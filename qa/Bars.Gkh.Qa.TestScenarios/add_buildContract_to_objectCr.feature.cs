// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Bars.Gkh.Qa.TestScenarios
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("тесткейсы для добавления договора подряда к объекту капитального ремонта в раздел" +
        "е \"Объекты капитального ремонта\"")]
    [NUnit.Framework.CategoryAttribute("ScenarioInTransaction")]
    public partial class ТесткейсыДляДобавленияДоговораПодрядаКОбъектуКапитальногоРемонтаВРазделеОбъектыКапитальногоРемонтаFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "add_buildContract_to_objectCr.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "тесткейсы для добавления договора подряда к объекту капитального ремонта в раздел" +
                    "е \"Объекты капитального ремонта\"", "Капитальный ремонт - Программы капитального ремонта - Объекты капитального ремонт" +
                    "а", ProgrammingLanguage.CSharp, new string[] {
                        "ScenarioInTransaction"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "region",
                        "houseType",
                        "city",
                        "street",
                        "houseNumber"});
            table1.AddRow(new string[] {
                        "testregion",
                        "Многоквартирный",
                        "Камчатский край, Алеутский р-н, с. Никольское",
                        "ул. 50 лет Октября",
                        "д. test"});
#line 6
testRunner.Given("в реестр жилых домов добавлен новый дом", ((string)(null)), table1, "Дано ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "DateStart"});
            table2.AddRow(new string[] {
                        "период программы тестовый",
                        "01.01.2015"});
#line 10
testRunner.And("добавлен период программ", ((string)(null)), table2, "И ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Period"});
            table3.AddRow(new string[] {
                        "программа капитального ремонта тестовая",
                        "период программы тестовый"});
#line 14
testRunner.And("добавлена программа капитального ремонта", ((string)(null)), table3, "И ");
#line 18
testRunner.And("добавлен новый объект капитального ремонта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Code",
                        "OkopfCode"});
            table4.AddRow(new string[] {
                        "тест",
                        "тест",
                        "тест"});
#line 20
testRunner.And("добавлена организационно-правовая форма", ((string)(null)), table4, "И ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table5.AddRow(new string[] {
                        "111"});
#line 24
testRunner.And("добавлен контрагент c текущей организационно-правовой формой", ((string)(null)), table5, "И ");
#line 28
testRunner.And("добавлена подрядная организация c текущим контрагентом", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 30
testRunner.Given("пользователь добавляет новый договор подряда в текущий объект КР", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 31
testRunner.And("пользователь у этого договора подряда заполняет поле Документ \"договор подряда те" +
                    "ст\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 32
testRunner.And("пользователь у этого договора подряда заполняет поле Подрядчик", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное добавление договора подряда")]
        public virtual void УспешноеДобавлениеДоговораПодряда()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное добавление договора подряда", ((string[])(null)));
#line 35
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 36
testRunner.Given("пользователь добавляет новый договор подряда в текущий объект КР", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 37
testRunner.When("пользователь сохраняет этот договор подряда", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 38
testRunner.Then("запись по этому договору подряда присутствует у этого объекта капитального ремонт" +
                    "а", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное удаление договора подряда")]
        public virtual void УспешноеУдалениеДоговораПодряда()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное удаление договора подряда", ((string[])(null)));
#line 40
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 41
testRunner.Given("пользователь добавляет новый договор подряда в текущий объект КР", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 42
testRunner.When("пользователь сохраняет этот договор подряда", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 43
testRunner.And("пользователь удаляет этот договор подряда", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 44
testRunner.Then("запись по этому договору подряда отсутствует у этого объекта капитального ремонта" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
