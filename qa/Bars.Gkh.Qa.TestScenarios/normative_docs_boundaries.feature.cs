// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Bars.Gkh.Qa.TestScenarios
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("тесткейсы граничных значений для справочника \"Нормативные документы\"")]
    [NUnit.Framework.CategoryAttribute("ScenarioInTransaction")]
    public partial class ТесткейсыГраничныхЗначенийДляСправочникаНормативныеДокументыFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "normative_docs_boundaries.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "тесткейсы граничных значений для справочника \"Нормативные документы\"", "Справочники - Общие - Нормативные документы", ProgrammingLanguage.CSharp, new string[] {
                        "ScenarioInTransaction"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление нормативно-правового документа при незаполненных обязательны" +
            "х полях :Полное наименование")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void НеудачноеДобавлениеНормативно_ПравовогоДокументаПриНезаполненныхОбязательныхПоляхПолноеНаименование()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление нормативно-правового документа при незаполненных обязательны" +
                    "х полях :Полное наименование", new string[] {
                        "ignore"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
testRunner.Given("пользователь добавляет новый нормативно-правовой документ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 9
testRunner.And("пользователь у этого нормативно-правового документа заполняет поле Наименование \"" +
                    "тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 10
testRunner.And("пользователь у этого нормативно-правового документа заполняет поле Код \"121\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 11
testRunner.When("пользователь сохраняет этот нормативно-правовой документ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 12
testRunner.Then("запись по этому нормативно-правовому документу отсутствует в справочнике норматив" +
                    "но-правовых документов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 13
testRunner.And("падает ошибка с текстом \"Не заполнены обязательные поля: Полное наименование\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление нормативно-правового документа при незаполненных обязательны" +
            "х полях :Наименование")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void НеудачноеДобавлениеНормативно_ПравовогоДокументаПриНезаполненныхОбязательныхПоляхНаименование()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление нормативно-правового документа при незаполненных обязательны" +
                    "х полях :Наименование", new string[] {
                        "ignore"});
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
testRunner.Given("пользователь добавляет новый нормативно-правовой документ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 19
testRunner.And("пользователь у этого нормативно-правового документа заполняет поле Полное наимено" +
                    "вание \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 20
testRunner.And("пользователь у этого нормативно-правового документа заполняет поле Код \"121\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 21
testRunner.When("пользователь сохраняет этот нормативно-правовой документ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 22
testRunner.Then("запись по этому нормативно-правовому документу отсутствует в справочнике норматив" +
                    "но-правовых документов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 23
testRunner.And("падает ошибка с текстом \"Не заполнены обязательные поля: Наименование\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление нормативно-правового документа при незаполненных обязательны" +
            "х полях :Код")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void НеудачноеДобавлениеНормативно_ПравовогоДокументаПриНезаполненныхОбязательныхПоляхКод()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление нормативно-правового документа при незаполненных обязательны" +
                    "х полях :Код", new string[] {
                        "ignore"});
#line 27
this.ScenarioSetup(scenarioInfo);
#line 28
testRunner.Given("пользователь добавляет новый нормативно-правовой документ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 29
testRunner.And("пользователь у этого нормативно-правового документа заполняет поле Полное наимено" +
                    "вание 1000 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 30
testRunner.And("пользователь у этого нормативно-правового документа заполняет поле Наименование \"" +
                    "тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 31
testRunner.When("пользователь сохраняет этот нормативно-правовой документ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 32
testRunner.Then("запись по этому нормативно-правовому документу отсутствует в справочнике норматив" +
                    "но-правовых документов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 33
testRunner.And("падает ошибка с текстом \"Не заполнены обязательные поля: Полное наименование Код\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удачное добавление нормативно-правового документа при вводе граничных условий в 1" +
            "000 знаков, Полное наименование")]
        public virtual void УдачноеДобавлениеНормативно_ПравовогоДокументаПриВводеГраничныхУсловийВ1000ЗнаковПолноеНаименование()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удачное добавление нормативно-правового документа при вводе граничных условий в 1" +
                    "000 знаков, Полное наименование", ((string[])(null)));
#line 35
this.ScenarioSetup(scenarioInfo);
#line 36
testRunner.Given("пользователь добавляет новый нормативно-правовой документ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 37
testRunner.And("пользователь у этого нормативно-правового документа заполняет поле Полное наимено" +
                    "вание 1000 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 38
testRunner.And("пользователь у этого нормативно-правового документа заполняет поле Наименование \"" +
                    "тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 39
testRunner.And("пользователь у этого нормативно-правового документа заполняет поле Код \"121\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 40
testRunner.When("пользователь сохраняет этот нормативно-правовой документ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 41
testRunner.Then("запись по этому нормативно-правовому документу присутствует в справочнике нормати" +
                    "вно-правовых документов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление нормативно-правового документа при вводе граничных условий в" +
            " 1001 знаков, Полное наименование")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void НеудачноеДобавлениеНормативно_ПравовогоДокументаПриВводеГраничныхУсловийВ1001ЗнаковПолноеНаименование()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление нормативно-правового документа при вводе граничных условий в" +
                    " 1001 знаков, Полное наименование", new string[] {
                        "ignore"});
#line 45
this.ScenarioSetup(scenarioInfo);
#line 46
testRunner.Given("пользователь добавляет новый нормативно-правовой документ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 47
testRunner.And("пользователь у этого нормативно-правового документа заполняет поле Полное наимено" +
                    "вание 1001 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 48
testRunner.And("пользователь у этого нормативно-правового документа заполняет поле Наименование \"" +
                    "тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 49
testRunner.And("пользователь у этого нормативно-правового документа заполняет поле Код \"121\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 50
testRunner.When("пользователь сохраняет этот нормативно-правовой документ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 52
testRunner.Then("падает ошибка с текстом \"Количество знаков в поле Полное наименование не должно п" +
                    "ревышать 300 символов\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удачное добавление нормативно-правового документа при вводе граничных условий в 3" +
            "00 знаков, Наименование")]
        public virtual void УдачноеДобавлениеНормативно_ПравовогоДокументаПриВводеГраничныхУсловийВ300ЗнаковНаименование()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удачное добавление нормативно-правового документа при вводе граничных условий в 3" +
                    "00 знаков, Наименование", ((string[])(null)));
#line 54
this.ScenarioSetup(scenarioInfo);
#line 55
testRunner.Given("пользователь добавляет новый нормативно-правовой документ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 56
testRunner.And("пользователь у этого нормативно-правового документа заполняет поле Полное наимено" +
                    "вание \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 57
testRunner.And("пользователь у этого нормативно-правового документа заполняет поле Наименование 3" +
                    "00 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 58
testRunner.And("пользователь у этого нормативно-правового документа заполняет поле Код \"121\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 59
testRunner.When("пользователь сохраняет этот нормативно-правовой документ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 60
testRunner.Then("запись по этому нормативно-правовому документу присутствует в справочнике нормати" +
                    "вно-правовых документов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление нормативно-правового документа при вводе граничных условий в" +
            " 301 знаков, Наименование")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void НеудачноеДобавлениеНормативно_ПравовогоДокументаПриВводеГраничныхУсловийВ301ЗнаковНаименование()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление нормативно-правового документа при вводе граничных условий в" +
                    " 301 знаков, Наименование", new string[] {
                        "ignore"});
#line 64
this.ScenarioSetup(scenarioInfo);
#line 65
testRunner.Given("пользователь добавляет новый нормативно-правовой документ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 66
testRunner.And("пользователь у этого нормативно-правового документа заполняет поле Полное наимено" +
                    "вание \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 67
testRunner.And("пользователь у этого нормативно-правового документа заполняет поле Наименование 3" +
                    "01 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 68
testRunner.And("пользователь у этого нормативно-правового документа заполняет поле Код \"121\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 69
testRunner.When("пользователь сохраняет этот нормативно-правовой документ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 71
testRunner.Then("падает ошибка с текстом \"Количество знаков в поле Наименование не должно превышат" +
                    "ь 300 символов\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное удаление нормативно-правового документа из справочника нормативно-право" +
            "вых документов")]
        public virtual void НеудачноеУдалениеНормативно_ПравовогоДокументаИзСправочникаНормативно_ПравовыхДокументов()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное удаление нормативно-правового документа из справочника нормативно-право" +
                    "вых документов", ((string[])(null)));
#line 73
this.ScenarioSetup(scenarioInfo);
#line 74
testRunner.Given("пользователь добавляет новый нормативно-правовой документ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 75
testRunner.And("пользователь у этого нормативно-правового документа заполняет поле Полное наимено" +
                    "вание \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 76
testRunner.And("пользователь у этого нормативно-правового документа заполняет поле Наименование \"" +
                    "тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 77
testRunner.And("пользователь у этого нормативно-правового документа заполняет поле Код \"121\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 78
testRunner.When("пользователь сохраняет этот нормативно-правовой документ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 79
testRunner.And("пользователь добавляет новый пункт в нормативно-правовой документ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 80
testRunner.And("пользователь у этого пункта нормативно-правового документа заполняет поле Номер \"" +
                    "тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 81
testRunner.And("пользователь у этого пункта нормативно-правового документа заполняет поле Текст \"" +
                    "тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 82
testRunner.And("пользователь сохраняет пункт нормативно-правового документа", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 83
testRunner.And("пользователь удаляет этот нормативно-правовой документ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 84
testRunner.Then("падает ошибка с текстом \"Данный нормативно - правовой документ содержит пункты \"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
