// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Bars.Gkh.Qa.TestScenarios
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("тесткейсы граничных значений для раздела \"Группы капитальности\"")]
    [NUnit.Framework.CategoryAttribute("ScenarioInTransaction")]
    public partial class ТесткейсыГраничныхЗначенийДляРазделаГруппыКапитальностиFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "capital_groups_boundaries.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "тесткейсы граничных значений для раздела \"Группы капитальности\"", "Справочники - Жилищно-коммунальное хозяйство - Группы капитальности", ProgrammingLanguage.CSharp, new string[] {
                        "ScenarioInTransaction"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("создание новой группы капитальности с пустыми полями")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void СозданиеНовойГруппыКапитальностиСПустымиПолями()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("создание новой группы капитальности с пустыми полями", new string[] {
                        "ignore"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
testRunner.Given("пользователь добавляет новую группу капитальности", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 10
testRunner.When("пользователь сохраняет эту группу капитальности", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 11
testRunner.Then("запись по этой группе капитальности присутствует в справочнике групп капитальност" +
                    "и", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удачное создание новой группы капитальности при вводе граничных условий в 300 зна" +
            "ков, Наименование")]
        public virtual void УдачноеСозданиеНовойГруппыКапитальностиПриВводеГраничныхУсловийВ300ЗнаковНаименование()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удачное создание новой группы капитальности при вводе граничных условий в 300 зна" +
                    "ков, Наименование", ((string[])(null)));
#line 13
this.ScenarioSetup(scenarioInfo);
#line 14
testRunner.Given("пользователь добавляет новую группу капитальности", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 15
testRunner.And("пользователь у этой группы капитальности заполняет поле Наименование 300 символов" +
                    " \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 16
testRunner.When("пользователь сохраняет эту группу капитальности", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 17
testRunner.Then("запись по этой группе капитальности присутствует в справочнике групп капитальност" +
                    "и", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное создание новой группы капитальности при вводе граничных условий в 301 з" +
            "наков, Наименование")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void НеудачноеСозданиеНовойГруппыКапитальностиПриВводеГраничныхУсловийВ301ЗнаковНаименование()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное создание новой группы капитальности при вводе граничных условий в 301 з" +
                    "наков, Наименование", new string[] {
                        "ignore"});
#line 21
this.ScenarioSetup(scenarioInfo);
#line 22
testRunner.Given("пользователь добавляет новую группу капитальности", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 23
testRunner.And("пользователь у этой группы капитальности заполняет поле Наименование 301 символов" +
                    " \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 24
testRunner.When("пользователь сохраняет эту группу капитальности", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 25
testRunner.Then("запись по этой группе капитальности отсутствует в справочнике групп капитальности" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 26
testRunner.And("падает ошибка с текстом \"Количество знаков в поле Наименование не должно превышат" +
                    "ь 300 символов\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удачное создание новой группы капитальности при вводе граничных условий в 300 зна" +
            "ков, Код")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void УдачноеСозданиеНовойГруппыКапитальностиПриВводеГраничныхУсловийВ300ЗнаковКод()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удачное создание новой группы капитальности при вводе граничных условий в 300 зна" +
                    "ков, Код", new string[] {
                        "ignore"});
#line 32
this.ScenarioSetup(scenarioInfo);
#line 33
testRunner.Given("пользователь добавляет новую группу капитальности", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 34
testRunner.And("пользователь у этой группы капитальности заполняет поле Код 300 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 35
testRunner.When("пользователь сохраняет эту группу капитальности", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 36
testRunner.Then("запись по этой группе капитальности присутствует в справочнике групп капитальност" +
                    "и", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное создание новой группы капитальности при вводе граничных условий в 301 з" +
            "наков, Код")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void НеудачноеСозданиеНовойГруппыКапитальностиПриВводеГраничныхУсловийВ301ЗнаковКод()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное создание новой группы капитальности при вводе граничных условий в 301 з" +
                    "наков, Код", new string[] {
                        "ignore"});
#line 40
this.ScenarioSetup(scenarioInfo);
#line 41
testRunner.Given("пользователь добавляет новую группу капитальности", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 42
testRunner.And("пользователь у этой группы капитальности заполняет поле Код 301 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 43
testRunner.When("пользователь сохраняет эту группу капитальности", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 44
testRunner.Then("запись по этой группе капитальности присутствует в справочнике групп капитальност" +
                    "и", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удачное создание новой группы капитальности при вводе граничных условий в 300 зна" +
            "ков, Описание")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void УдачноеСозданиеНовойГруппыКапитальностиПриВводеГраничныхУсловийВ300ЗнаковОписание()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удачное создание новой группы капитальности при вводе граничных условий в 300 зна" +
                    "ков, Описание", new string[] {
                        "ignore"});
#line 50
this.ScenarioSetup(scenarioInfo);
#line 51
testRunner.Given("пользователь добавляет новую группу капитальности", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 52
testRunner.And("пользователь у этой группы капитальности заполняет поле Описание 300 символов \"1\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 53
testRunner.When("пользователь сохраняет эту группу капитальности", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 54
testRunner.Then("запись по этой группе капитальности присутствует в справочнике групп капитальност" +
                    "и", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное создание новой группы капитальности при вводе граничных условий в 301 з" +
            "наков, Описание")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void НеудачноеСозданиеНовойГруппыКапитальностиПриВводеГраничныхУсловийВ301ЗнаковОписание()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное создание новой группы капитальности при вводе граничных условий в 301 з" +
                    "наков, Описание", new string[] {
                        "ignore"});
#line 58
this.ScenarioSetup(scenarioInfo);
#line 59
testRunner.Given("пользователь добавляет новую группу капитальности", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 60
testRunner.And("пользователь у этой группы капитальности заполняет поле Описание 301 символов \"1\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 61
testRunner.When("пользователь сохраняет эту группу капитальности", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 62
testRunner.Then("запись по этой группе капитальности присутствует в справочнике групп капитальност" +
                    "и", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
