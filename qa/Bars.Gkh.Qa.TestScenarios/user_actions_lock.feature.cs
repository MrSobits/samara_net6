// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Bars.Gkh.Qa.TestScenarios
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Блокировка действий пользователей при выполнении операций")]
    [NUnit.Framework.CategoryAttribute("ClearTableLock")]
    public partial class БлокировкаДействийПользователейПриВыполненииОперацийFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "user_actions_lock.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "Блокировка действий пользователей при выполнении операций", "", ProgrammingLanguage.CSharp, new string[] {
                        "ClearTableLock"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при смене доли собственности")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриСменеДолиСобственности()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при смене доли собственности", ((string[])(null)));
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 7
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 8
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 9
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 10
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133077\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 11
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 12
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 13
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 14
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 15
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 16
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 17
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 18
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 19
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 20
testRunner.Given("пользователь у этого ЛС вызывает реадактирование Доли собственности", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 21
testRunner.And("в смене доли собственности заполняет поле Дата вступления значения в силу \"текуща" +
                    "я дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 22
testRunner.And("в смене доли собственности заполняет поле Новое значение \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 23
testRunner.When("пользователь в смене доли собственности сохраняет изменения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 24
testRunner.Then("у этого ЛС в карточке заполнено поле Доля собственности \"0,2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 25
testRunner.Then(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при смене общей площади помещения")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриСменеОбщейПлощадиПомещения()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при смене общей площади помещения", ((string[])(null)));
#line 28
this.ScenarioSetup(scenarioInfo);
#line 29
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 30
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 31
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 32
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 33
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133077\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 34
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 35
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 36
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 37
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 38
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 39
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 40
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 41
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 42
testRunner.Given("пользователь выбирает помещение текущего лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 43
testRunner.And("пользователь у этого помещения вызывает смену общей доли собственности", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 44
testRunner.And("пользователь в смене общей площади комнаты заполняет поле Дата вступления значени" +
                    "я в силу \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 45
testRunner.And("пользователь в смене общей площади комнаты заполняет поле Новое значение \"111\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 46
testRunner.When("пользователь в смене общей площади комнаты сохраняет изменения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 47
testRunner.Then("у этого помещения заполнено поле Общая площадь \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 48
testRunner.And(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при добавлении записи в размеры взносов" +
            " на кр")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриДобавленииЗаписиВРазмерыВзносовНаКр()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при добавлении записи в размеры взносов" +
                    " на кр", ((string[])(null)));
#line 51
this.ScenarioSetup(scenarioInfo);
#line 52
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 53
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 54
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 55
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 56
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133077\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 57
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 58
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 59
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 60
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 61
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 62
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 63
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 64
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 65
testRunner.Given("пользователь добавляет новый Размер взносов на КР", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 66
testRunner.And("пользователь у этого размера взносов на КР заполняет поле С \"01.01.2014\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 67
testRunner.And("пользователь у этого размера взносов на КР заполняет поле По \"01.05.2014\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 68
testRunner.When("пользователь сохраняет этот Размер взносов на КР", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 69
testRunner.Then("эта запись отсутствует в реестре Размеры взносов на КР", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 70
testRunner.And(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при изменении записи в размерах взносов" +
            " на кр")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриИзмененииЗаписиВРазмерахВзносовНаКр()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при изменении записи в размерах взносов" +
                    " на кр", ((string[])(null)));
#line 73
this.ScenarioSetup(scenarioInfo);
#line 74
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 75
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 76
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 77
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 78
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133077\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 79
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 80
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 81
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 82
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 83
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 84
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 85
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 86
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 87
testRunner.Given("пользователь в Размерах взносов на КР выбирает запись у которой поле Окончание пе" +
                    "риода \"28.08.2015\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 88
testRunner.And("пользователь у этого размера взносов на КР заполняет поле По \"29.08.2015\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 89
testRunner.When("пользователь сохраняет этот Размер взносов на КР", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 90
testRunner.Then("эта запись присутствует в реестре Размеры взносов на КР", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 91
testRunner.And("у этого размера взносов на КР поле Окончание периода \"28.08.2015\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 92
testRunner.And(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при удалении записи из размеров взносов" +
            " на кр")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриУдаленииЗаписиИзРазмеровВзносовНаКр()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при удалении записи из размеров взносов" +
                    " на кр", ((string[])(null)));
#line 95
this.ScenarioSetup(scenarioInfo);
#line 96
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 97
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 98
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 99
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 100
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133077\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 101
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 102
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 103
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 104
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 105
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 106
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 107
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 108
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 109
testRunner.Given("пользователь в Размерах взносов на КР выбирает запись у которой поле Окончание пе" +
                    "риода \"28.08.2015\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 110
testRunner.When("пользователь удаляет этот Размер взносов на КР", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 111
testRunner.Then("эта запись присутствует в реестре Размеры взносов на КР", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 112
testRunner.And("у этого размера взносов на КР поле Окончание периода \"28.08.2015\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 113
testRunner.And(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при смене состояния дома")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриСменеСостоянияДома()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при смене состояния дома", ((string[])(null)));
#line 116
this.ScenarioSetup(scenarioInfo);
#line 117
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 118
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 119
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 120
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 121
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133077\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 122
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 123
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 124
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 125
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 126
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 127
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 128
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 129
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 130
testRunner.Given("пользователь выбирает дом по адресу \"с. Никольское, ул. Ленинская, д. 1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 131
testRunner.And("пользователь у текущего дома редактирует поле Состояние дома", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 132
testRunner.And("пользователь в редактировании Состояния дома заполняет поле Дата вступления значе" +
                    "ния в силу \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 133
testRunner.And("пользователь в редактировании Состояния дома заполняет поле Новое значение \"Ветхи" +
                    "й\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 134
testRunner.When("пользователь сохраняет это Состояние дома", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 135
testRunner.Then("у этого дома заполнено поле Состояние дома \"Исправный\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 136
testRunner.And(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при сохранении общих настроек регфонда")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриСохраненииОбщихНастроекРегфонда()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при сохранении общих настроек регфонда", ((string[])(null)));
#line 139
this.ScenarioSetup(scenarioInfo);
#line 140
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 141
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 142
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 143
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 144
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133077\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 145
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 146
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 147
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 148
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 149
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 150
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 151
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 152
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 153
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"f" +
                    "alse\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 154
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 155
testRunner.Then("в единых настройках приложения заполнено поле Включить блокировку \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 156
testRunner.And(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при сохранении общих настроек печати кв" +
            "итанций")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриСохраненииОбщихНастроекПечатиКвитанций()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при сохранении общих настроек печати кв" +
                    "итанций", ((string[])(null)));
#line 159
this.ScenarioSetup(scenarioInfo);
#line 160
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 161
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 162
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 163
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 164
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133077\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 165
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 166
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 167
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 168
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 169
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 170
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 171
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 172
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 173
testRunner.Given("пользователь в единых настройках приложения заполняет поле Формат документов на о" +
                    "плату \"xps\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 174
testRunner.And("пользователь в единых настройках приложения заполняет поле Размер документа \"A5\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 175
testRunner.And("пользователь в единых настройках приложения заполняет поле Метод сжатия изображен" +
                    "ия \"Flate\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 176
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 177
testRunner.Then("в единых настройках приложения заполнено поле Формат документов на оплату \"pdf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 178
testRunner.And("в единых настройках приложения заполнено поле Размер документа \"A4\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 179
testRunner.And("в единых настройках приложения заполнено поле Метод сжатия изображения \"Jpeg\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 180
testRunner.And(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при сохранении настроек печати квитанци" +
            "й физлиц")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриСохраненииНастроекПечатиКвитанцийФизлиц()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при сохранении настроек печати квитанци" +
                    "й физлиц", ((string[])(null)));
#line 183
this.ScenarioSetup(scenarioInfo);
#line 184
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 185
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 186
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 187
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 188
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133077\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 189
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 190
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 191
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 192
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 193
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 194
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 195
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 196
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 197
testRunner.Given("пользователь в единых настройках приложения заполняет поле Вид документов на опла" +
                    "ту \"Обезличено (без ФИО)\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 198
testRunner.And("пользователь в единых настройках приложения заполняет поле Количество лицевых сче" +
                    "тов в квитанции для физических лиц \"1000\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 199
testRunner.And("пользователь в единых настройках приложения заполняет поле Расположение 2 докумен" +
                    "тов на 1 листе \"По порядку на половине листа\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 200
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 201
testRunner.Then("в единых настройках приложения заполнено поле Вид документов на оплату \"В стандар" +
                    "тном виде (с ФИО)\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 202
testRunner.And("в единых настройках приложения заполнено поле Количество лицевых счетов в квитанц" +
                    "ии для физических лиц \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 203
testRunner.And("в единых настройках приложения заполнено поле Расположение 2 документов на 1 лист" +
                    "е \"По порядку\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 204
testRunner.And(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при сохранении настроек печати квитанци" +
            "й юрлиц")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриСохраненииНастроекПечатиКвитанцийЮрлиц()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при сохранении настроек печати квитанци" +
                    "й юрлиц", ((string[])(null)));
#line 207
this.ScenarioSetup(scenarioInfo);
#line 208
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 209
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 210
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 211
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 212
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133077\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 213
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 214
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 215
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 216
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 217
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 218
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 219
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 220
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 221
testRunner.Given("пользователь в единых настройках приложения заполняет поле Группировка по организ" +
                    "ационно-правовой форме \"Группировка выбранных форм в отдельной папке\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 222
testRunner.And("пользователь в единых настройках приложения в настройках печати квитанции(юр.лица" +
                    ") добавляет запись \"Унитарные предприятия, основанные на праве оперативного упра" +
                    "вления\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 223
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 224
testRunner.Then("в единых настройках приложения заполнено поле Группировка по организационно-право" +
                    "вой форме \"Не используется\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 225
testRunner.And("в единых настройках приложения в настройках печати квитанции(юр.лица) отсутствует" +
                    " запись \"Унитарные предприятия, основанные на праве оперативного управления\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 226
testRunner.And(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при сохранении параметров начисления пе" +
            "ни")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриСохраненииПараметровНачисленияПени()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при сохранении параметров начисления пе" +
                    "ни", ((string[])(null)));
#line 229
this.ScenarioSetup(scenarioInfo);
#line 230
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 231
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 232
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 233
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 234
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133077\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 235
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 236
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 237
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 238
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 239
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 240
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 241
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 242
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 243
testRunner.Given("пользователь в единых настройках приложения заполняет поле Расчитывать пени \"fals" +
                    "e\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 244
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 245
testRunner.Then("в единых настройках приложения заполнено поле Расчитывать пени \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 246
testRunner.And(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при подтверждении начислений")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void УспешнаяБлокировкаДействийПользователяПриПодтвержденииНачислений()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при подтверждении начислений", new string[] {
                        "ignore"});
#line 280
this.ScenarioSetup(scenarioInfo);
#line 281
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 282
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 283
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 284
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 285
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133077\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 286
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 287
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 288
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 289
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 290
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 291
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 292
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 293
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 294
testRunner.When("в Реестре неподтвержденных начислений появляется запись начислений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 295
testRunner.Then("у этой записи неподтверждённых начислений Состояние \"Ожидание\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 296
testRunner.When("пользователь подтверждает эту запись начислений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 297
testRunner.Then(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 298
testRunner.And("у этой записи неподтверждённых начислений Состояние \"Ожидание\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при создании лс")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриСозданииЛс()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при создании лс", ((string[])(null)));
#line 301
this.ScenarioSetup(scenarioInfo);
#line 302
testRunner.Given("пользователь выбирает дом по адресу \"с. Никольское, ул. Ленинская, д. 1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 303
testRunner.And("пользователь у этого дома выбирает помещение под № \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 304
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 305
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 306
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 307
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 308
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133077\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 309
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 310
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 311
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 312
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 313
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 314
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 315
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 316
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 317
testRunner.Given("пользователь в реестре абонентов открывает карточку абонента с ФИО \"Тестовый абон" +
                    "ент3 Ленинская 1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 318
testRunner.And("пользователь добавляет запись по сведению о помещении абоненту типа Счет физ.лица" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 319
testRunner.And("пользователь у этой записи по сведению о помещении заполняет поле Дата открытия Л" +
                    "С \"текущая дата\" абоненту типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 320
testRunner.And("пользователь у этой записи по сведению о помещении заполняет поле Жилой дом абоне" +
                    "нту типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 321
testRunner.And("пользователь у этой записи по сведению о помещении заполняет поле № квартиры/поме" +
                    "щения абоненту типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 322
testRunner.And("у этого № квартиры/помещения заполняет поле Доля собственности \"0,5\" абоненту тип" +
                    "а Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 323
testRunner.When("пользователь сохраняет эту запись по сведению о помещении абоненту типа Счет физ." +
                    "лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 324
testRunner.Then("ЛС с текущими абонентом и помещением отсутствует в реестре ЛС", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 325
testRunner.And(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при импорте абонентов")]
        [NUnit.Framework.TestCaseAttribute("true", null)]
        [NUnit.Framework.TestCaseAttribute("false", null)]
        public virtual void УспешнаяБлокировкаДействийПользователяПриИмпортеАбонентов(string заменаДанных, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при импорте абонентов", exampleTags);
#line 328
this.ScenarioSetup(scenarioInfo);
#line 329
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 330
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 331
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 332
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 333
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133077\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 334
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 335
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 336
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 337
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 338
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 339
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 340
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 341
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 342
testRunner.Given("пользователь в Импорте абонентов прикрепил файл импорта \"импортабонентоврабочий.x" +
                    "lsx\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 343
testRunner.And(string.Format("пользователь в Импорте абонентов заполняет поле Заменять существующие сведения \"{" +
                        "0}\"", заменаДанных), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 344
testRunner.When("пользователь запускает импорт абонентов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 345
testRunner.Then(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при импорте собственников")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриИмпортеСобственников()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при импорте собственников", ((string[])(null)));
#line 353
this.ScenarioSetup(scenarioInfo);
#line 354
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 355
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 356
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 357
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 358
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133077\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 359
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 360
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 361
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 362
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 363
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 364
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 365
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 366
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 367
testRunner.Given("пользователь в импорте собственников заполняет поле Дата открытия лицевого счета " +
                    "\"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 368
testRunner.And("пользователь в импорте собственников прикрепляет файл импорта \"импортабонентовраб" +
                    "очий.xls\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 369
testRunner.When("пользователь запускает импорт собственников", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 370
testRunner.Then(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при импорте лицевых счетов")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриИмпортеЛицевыхСчетов()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при импорте лицевых счетов", ((string[])(null)));
#line 373
this.ScenarioSetup(scenarioInfo);
#line 374
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 375
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 376
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 377
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 378
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133077\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 379
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 380
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 381
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 382
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 383
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 384
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 385
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 386
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 387
testRunner.Given("пользователь в реестре ЛС вызывает Импорт - Импорт лицевых счетов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 388
testRunner.And("пользователь в реестре ЛС в форме импорта ЛС выбирает файл \"1410.log.csv\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 389
testRunner.When("пользователь в реестре ЛС запускает импорт ЛС", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 390
testRunner.Then(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при добавлении протокола решения собств" +
            "енников")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриДобавленииПротоколаРешенияСобственников()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при добавлении протокола решения собств" +
                    "енников", ((string[])(null)));
#line 393
this.ScenarioSetup(scenarioInfo);
#line 394
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 395
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 396
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 397
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 398
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133077\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 399
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 400
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 401
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 402
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 403
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 404
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 405
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 406
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 407
testRunner.Given("пользователь выбирает дом по адресу \"с. Никольское, ул. Ленинская, д. 1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 408
testRunner.And("пользователь у этого дома добавляет протокол решения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 409
testRunner.And("пользователь у этого протокола заполняет поле Тип протокола \"Протокол решения соб" +
                    "ственников жилых помещений\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 410
testRunner.And("пользователь у этого протокола заполняет поле Номер \"2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 411
testRunner.And("пользователь у этого протокола заполняет поле Дата протокола \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 412
testRunner.And("пользователь у этого протокола заполняет поле Дата вступления в силу \"текущая дат" +
                    "а\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 413
testRunner.And("пользователь у этого протокола заполняет поле Уполномоченное лицо \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 414
testRunner.And("пользователь у этого протокола заполняет поле Телефон уполномоченного лица \"111\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 415
testRunner.And("пользователь у этого протокола заполняет поле Протокол файлом \"1.pdf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 416
testRunner.And("пользователь у этого протокола заполняет поле Способ формирования фонда КР \"Специ" +
                    "альный счет\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 417
testRunner.And("пользователь у этого протокола заполняет поле Владелец специального счета \"Регион" +
                    "альный оператор\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 418
testRunner.And("пользователь у этого протокола заполняет поле Кредитная организация \"ОАО \"Россель" +
                    "хозбанк\"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 419
testRunner.When("пользователь сохраняет этот протокол", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 421
testRunner.Then(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при добавлении протокола решения органо" +
            "в госвласти")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриДобавленииПротоколаРешенияОргановГосвласти()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при добавлении протокола решения органо" +
                    "в госвласти", ((string[])(null)));
#line 424
this.ScenarioSetup(scenarioInfo);
#line 425
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 426
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 427
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 428
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 429
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133077\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 430
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 431
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 432
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 433
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 434
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 435
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 436
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 437
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 438
testRunner.Given("пользователь выбирает дом по адресу \"с. Никольское, ул. Ленинская, д. 1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 439
testRunner.And("пользователь у этого дома добавляет протокол решения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 440
testRunner.And("пользователь у этого протокола заполняет поле Тип протокола \"Протокол решения орг" +
                    "ана государственной власти\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 441
testRunner.And("пользователь у этого протокола заполняет поле Номер \"2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 442
testRunner.And("пользователь у этого протокола заполняет поле Дата протокола \"12.01.2015\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 443
testRunner.And("пользователь у этого протокола заполняет поле Дата вступления в силу \"12.01.2015\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 444
testRunner.And("пользователь у этого протокола заполняет поле Управление домом \"215\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 445
testRunner.And("пользователь у этого протокола заполняет поле Уполномоченное лицо \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 446
testRunner.And("пользователь у этого протокола заполняет поле Телефон уполномоченного лица \"111\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 447
testRunner.And("пользователь у этого протокола заполняет поле Протокол файлом \"1.pdf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 448
testRunner.And("пользователь у этого протокола заполняет чекбокс Способ формирования фонда на сче" +
                    "ту регионального оператора", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 449
testRunner.When("пользователь сохраняет этот протокол", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 450
testRunner.Then("запись по этому протоколу решения отсутствует в списке протоколов решений этого д" +
                    "ома", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 451
testRunner.And(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при изменении протокола решения")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриИзмененииПротоколаРешения()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при изменении протокола решения", ((string[])(null)));
#line 454
this.ScenarioSetup(scenarioInfo);
#line 455
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 456
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 457
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 458
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 459
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133077\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 460
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 461
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 462
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 463
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 464
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 465
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 466
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 467
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 468
testRunner.Given("пользователь выбирает дом по адресу \"с. Никольское, ул. Ленинская, д. 1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 469
testRunner.And("пользователь у этого дома редактирует протокол с номером \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 470
testRunner.And("пользователь у этого протокола заполняет поле Номер \"111112222223333333333\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 471
testRunner.When("пользователь сохраняет этот протокол", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 472
testRunner.Then("у этого протокола решения заполнено поле Номер \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 473
testRunner.And(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при изменении статуса протокола решения" +
            "")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриИзмененииСтатусаПротоколаРешения()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при изменении статуса протокола решения" +
                    "", ((string[])(null)));
#line 476
this.ScenarioSetup(scenarioInfo);
#line 477
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 478
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 479
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 480
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 481
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133077\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 482
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 483
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 484
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 485
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 486
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 487
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 488
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 489
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 490
testRunner.Given("пользователь выбирает дом по адресу \"с. Никольское, ул. Ленинская, д. 1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 491
testRunner.And("пользователь у этого дома редактирует протокол с номером \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 492
testRunner.When("пользователь этот протокол переводит в Статус \"Черновик\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 493
testRunner.Then("у этого протокола решения заполнено поле Статус \"Утверждено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 494
testRunner.And(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при смене абонента")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриСменеАбонента()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при смене абонента", ((string[])(null)));
#line 497
this.ScenarioSetup(scenarioInfo);
#line 498
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 499
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 500
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 501
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 502
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133077\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 503
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 504
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 505
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 506
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 507
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 508
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 509
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 510
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 511
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133077\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 512
testRunner.And("Пользователь в реестре ЛС выбирает действие Смена абонента", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 513
testRunner.And("пользователь в форме смены абонента у ЛС заполняет поле Новый владелец \"Танцерев " +
                    "Евгений Витальевич\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 514
testRunner.And("пользователь в форме смены абонента у ЛС заполняет поле Дата начала действия \"тек" +
                    "ущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 515
testRunner.And("пользователь в форме смены абонента у ЛС заполняет поле Причина \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 516
testRunner.And("пользователь в форме смены абонента у ЛС заполняет поле Документ-основание \"1.pdf" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 517
testRunner.When("пользователь сохраняет смену абонента", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 518
testRunner.Then("у этого ЛС в карточке заполнено поле ФИО/Наименование абонента \"Тестовый абонент1" +
                    " Ленинская 1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 519
testRunner.And(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при установке и изменении пени")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриУстановкеИИзмененииПени()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при установке и изменении пени", ((string[])(null)));
#line 522
this.ScenarioSetup(scenarioInfo);
#line 523
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 524
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 525
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 526
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 527
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133077\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 528
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 529
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 530
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 531
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 532
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 533
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 534
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 535
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 536
testRunner.Given("пользователь для текущего ЛС вызывает операцию Установка и изменение пени", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 537
testRunner.And("пользователь в форме установка и изменение пени заполняет поле Новое пени \"1000\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 538
testRunner.And("пользователь в форме установка и изменение пени заполняет поле Причина изменения " +
                    "пени \"тест пени\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 539
testRunner.When("пользователь сохраняет изменения в форме установка и изменение пени", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 540
testRunner.Then("у этого ЛС в карточке заполнено поле Начислено пени всего \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 541
testRunner.And("у этого ЛС в карточке заполнено поле Уплачено пени всего \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 542
testRunner.And("у этого ЛС в карточке заполнено поле Задолженность пени всего \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 543
testRunner.And(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при установке и изменении сальдо")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриУстановкеИИзмененииСальдо()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при установке и изменении сальдо", ((string[])(null)));
#line 546
this.ScenarioSetup(scenarioInfo);
#line 547
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 548
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 549
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 550
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 551
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133077\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 552
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 553
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 554
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 555
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 556
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 557
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 558
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 559
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 560
testRunner.Given("пользователь для текущего ЛС вызывает операцию Установка и изменение сальдо", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 561
testRunner.And("пользователь в форме установка и изменение сальдо заполняет поле Новое значение \"" +
                    "1000\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 562
testRunner.And("пользователь в форме установка и изменение сальдо заполняет поле Причина установк" +
                    "и/изменения сальдо \"тест сальдо\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 563
testRunner.When("пользователь сохраняет изменения в форме установка и изменение сальдо", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 564
testRunner.Then("у этого ЛС в карточке заполнено поле Начислено взносов по минимальному тарифу все" +
                    "го \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 565
testRunner.And("у этого ЛС в карточке заполнено поле Уплачено взносов по минимальному тарифу всег" +
                    "о \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 566
testRunner.And("у этого ЛС в карточке заполнено поле Задолженность по взносам всего \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 567
testRunner.And(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при закрытии лс")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриЗакрытииЛс()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при закрытии лс", ((string[])(null)));
#line 570
this.ScenarioSetup(scenarioInfo);
#line 571
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 572
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 573
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 574
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 575
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133077\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 576
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 577
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 578
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 579
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 580
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 581
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 582
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 583
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 584
testRunner.When("пользователь для текщего ЛС вызывает операцию Закрытие", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 585
testRunner.Given("пользователь в закрытии ЛС заполняет поле Причина \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 586
testRunner.And("пользователь в закрытии ЛС заполняет поле Документ-основание \"1.pdf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 587
testRunner.And("пользователь в закрытии ЛС заполняет поле Дата закрытия \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 588
testRunner.When("пользователь в закрытии ЛС сохраняет изменения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 589
testRunner.Then(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 590
testRunner.And("у этого ЛС в карточке заполнено поле Статус \"Открыт\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при слиянии лс")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриСлиянииЛс()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при слиянии лс", ((string[])(null)));
#line 593
this.ScenarioSetup(scenarioInfo);
#line 594
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 595
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 596
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 597
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 598
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133029\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 599
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 600
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 601
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 602
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 603
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 604
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 605
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 606
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 607
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133037\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 608
testRunner.When("пользователь для выбранных ЛС вызывает операцию Слияние", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 609
testRunner.Given("пользователь в слиянии ЛС заполняет заполняет поле Причина \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 610
testRunner.And("пользователь в слиянии ЛС прикрепляет файл Документ-основание \"1.pdf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 611
testRunner.And("пользователь в слиянии ЛС для ЛС \"140133029\" заполняет поле Новая доля собственно" +
                    "сти \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 612
testRunner.And("пользователь в слиянии ЛС для ЛС \"140133037\" заполняет поле Новая доля собственно" +
                    "сти \"0,5\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 613
testRunner.When("пользователь в слиянии ЛС сохраняет изменения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 614
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133029\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 615
testRunner.Then("у этого ЛС в карточке заполнено поле Статус \"Открыт\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 616
testRunner.And("у этого ЛС в карточке заполнено поле Доля собственности \"0,25\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 617
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133029\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 618
testRunner.Then("у этого ЛС в карточке заполнено поле Статус \"Открыт\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 619
testRunner.And("у этого ЛС в карточке заполнено поле Доля собственности \"0,25\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при отмене начислений")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриОтменеНачислений()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при отмене начислений", ((string[])(null)));
#line 622
this.ScenarioSetup(scenarioInfo);
#line 623
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 624
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 625
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 626
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 627
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"100000855\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 628
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 629
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 630
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 631
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 632
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 633
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 634
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 635
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 636
testRunner.Given("пользователь выбирает Период \"2014 Ноябрь\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 637
testRunner.And("пользователь в реестре ЛС выбирает лицевой счет \"100000855\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 638
testRunner.When("пользователь для текущего ЛС вызывает операцию Отмена начислений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 639
testRunner.And("пользователь в отмене начислений заполняет поле Период \"2014 Ноябрь\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 640
testRunner.And("пользователь в отмене начислений заполняет поле Причина \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 641
testRunner.And("пользователь в отмене начислений заполняет поле Документ-основание \"1.pdf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 642
testRunner.And("пользователь сохраняет изменения в форме отмена начислений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 643
testRunner.Then(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 644
testRunner.And("у этого лицевого счета в истории изменений отсутствует запись с наименованием пар" +
                    "аметра \"Изменения сальдо в связи со слиянием\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при отмене начислений пени")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void УспешнаяБлокировкаДействийПользователяПриОтменеНачисленийПени()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при отмене начислений пени", new string[] {
                        "ignore"});
#line 649
this.ScenarioSetup(scenarioInfo);
#line 650
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 651
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 652
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 653
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 654
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 655
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 656
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 657
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 658
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 659
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 660
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 661
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 662
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 663
testRunner.Given("пользователь выбирает Период \"2014 Ноябрь\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 664
testRunner.And("пользователь в реестре ЛС выбирает лицевой счет \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 665
testRunner.When("пользователь для выбранных ЛС вызывает операцию Отмена начисления пени", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 666
testRunner.And("пользователь в отмене начислений пени прикрепляет файл Документ-основание \"1.pdf\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 667
testRunner.And("пользователь в отмене начислений пени заполняет заполняет поле Причина \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 668
testRunner.And("пользователь в отмене начислений пени сохраняет изменения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 669
testRunner.Then("у этого лицевого счета в истории изменений отсутствует запись с наименованием пар" +
                    "аметра \"Отмена начислений пени\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 670
testRunner.And(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при добавлении нового объекта в ркц")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриДобавленииНовогоОбъектаВРкц()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при добавлении нового объекта в ркц", ((string[])(null)));
#line 674
this.ScenarioSetup(scenarioInfo);
#line 675
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 676
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 677
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 678
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 679
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133029\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 680
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 681
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 682
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 683
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 684
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 685
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 686
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 687
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 688
testRunner.Given("пользователь выбирает РКЦ у которого контрагент \"Администрация Алеутского муницип" +
                    "ального района\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 689
testRunner.And("пользователь в объектах РКЦ добавляет новый объект", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 690
testRunner.And("пользователь у этого объекта РКЦ заполняет поле Дата начала действия договора \"те" +
                    "кущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 691
testRunner.And("пользователь у этого объекта РКЦ добавляет лицевой счет \"140014146\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 692
testRunner.When("пользователь сохраняет этот объект РКЦ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 693
testRunner.Then("у этого РКЦ отсутствует запись по объекту с ЛС \"140133037\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 694
testRunner.And(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при удалении объекта из ркц")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриУдаленииОбъектаИзРкц()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при удалении объекта из ркц", ((string[])(null)));
#line 698
this.ScenarioSetup(scenarioInfo);
#line 699
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 700
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 701
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 702
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 703
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133029\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 704
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 705
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 706
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 707
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 708
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 709
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 710
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 711
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 712
testRunner.Given("пользователь выбирает РКЦ у которого контрагент \"Администрация Алеутского муницип" +
                    "ального района\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 713
testRunner.When("пользователь у этого РКЦ удаляет объект с лс \"100000004\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 714
testRunner.Then(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 715
testRunner.And("у этого РКЦ присутствует запись по объекту с ЛС \"100000004\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при редактировании объекта в ркц")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриРедактированииОбъектаВРкц()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при редактировании объекта в ркц", ((string[])(null)));
#line 718
this.ScenarioSetup(scenarioInfo);
#line 719
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 720
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 721
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 722
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 723
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133029\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 724
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 725
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 726
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 727
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 728
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 729
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 730
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 731
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 732
testRunner.Given("пользователь выбирает РКЦ у которого контрагент \"Администрация Алеутского муницип" +
                    "ального района\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 733
testRunner.And("пользователь у этого РКЦ выбирает объект с номером ЛС \"100000004\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 734
testRunner.And("пользователь у этого объекта РКЦ заполняет поле Дата окончания действия договора " +
                    "\"01.01.9999\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 735
testRunner.When("пользователь сохраняет этот объект РКЦ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 736
testRunner.Then("у этого объекта РКЦ заполнено поле Дата окончания действия договора \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 737
testRunner.And(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при смене значения у чекбокса Дом не уч" +
            "аствует в программе КР")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриСменеЗначенияУЧекбоксаДомНеУчаствуетВПрограммеКР()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при смене значения у чекбокса Дом не уч" +
                    "аствует в программе КР", ((string[])(null)));
#line 740
this.ScenarioSetup(scenarioInfo);
#line 741
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 742
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 743
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 744
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 745
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133029\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 746
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 747
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 748
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 749
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 750
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 751
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 752
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 753
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 754
testRunner.Given("пользователь выбирает дом по адресу \"г. Вилючинск, мкр. Северный, д. 14\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 755
testRunner.And("пользователь у этого жилого дома заполняет поле Дом не участвует в программе КР \"" +
                    "true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 756
testRunner.When("пользователь сохраняет этот жилой дом", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 757
testRunner.Then("у этого жилого дома заполнено поле Дом не участвует в программе КР \"false\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 758
testRunner.And(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 759
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 760
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"f" +
                    "alse\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 761
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"false\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 762
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при отмене распределения")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриОтменеРаспределения()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при отмене распределения", ((string[])(null)));
#line 765
this.ScenarioSetup(scenarioInfo);
#line 766
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 767
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 768
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 769
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 770
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133029\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 771
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 772
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 773
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 774
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 775
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 776
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 777
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 778
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 779
testRunner.When("пользователь отменяет распределение по оплате, у которой номер \"973\", дата докуме" +
                    "нта \"30.10.2014\", тип \"Приход\" и статус \"Распределена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 780
testRunner.Then("у этой банковской операции статус \"Распределена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 781
testRunner.And(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при распределении оплаты")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриРаспределенииОплаты()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при распределении оплаты", ((string[])(null)));
#line 784
this.ScenarioSetup(scenarioInfo);
#line 785
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 786
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 787
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 788
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 789
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133029\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 790
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 791
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 792
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 793
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 794
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 795
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 796
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 797
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 798
testRunner.Given("пользователь выбирает банковскую операцию, у которой номер \"131313\", дата докумен" +
                    "та \"30.10.2014\", тип \"Приход\" и статус \"Не распределена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 799
testRunner.When("пользователь у этой банковской операции для распределения Тип распределения \"Плат" +
                    "еж КР\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 800
testRunner.And("пользователь выбирает этот лицевой счет", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 801
testRunner.And("пользователь применяет распределение", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 802
testRunner.Then("у этой банковской операции статус \"Не распределена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 803
testRunner.And(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при распределении оплаты на нвс")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриРаспределенииОплатыНаНвс()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при распределении оплаты на нвс", ((string[])(null)));
#line 806
this.ScenarioSetup(scenarioInfo);
#line 807
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 808
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 809
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 810
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 811
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133029\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 812
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 813
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 814
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 815
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 816
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 817
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 818
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 819
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 820
testRunner.Given("пользователь выбирает счёт НВС с типом \"Приход\" и Назначением платежа \"131313\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 821
testRunner.And("пользователь в реестре счетов НВС нажимает кнопку Зачислить", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 822
testRunner.And("пользователь у этой операции для распределения выбирает Тип распределения \"Платеж" +
                    " КР\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 823
testRunner.And("пользователь в этом распределении выбирает ЛС \"140133029\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 824
testRunner.When("пользователь применяет это распределение", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 825
testRunner.Then("у этого счёта НВС заполнено поле Статус \"Не распределена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 826
testRunner.And(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при импорте протоколов решений")]
        public virtual void УспешнаяБлокировкаДействийПользователяПриИмпортеПротоколовРешений()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при импорте протоколов решений", ((string[])(null)));
#line 829
this.ScenarioSetup(scenarioInfo);
#line 830
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 831
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 832
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 833
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 834
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133029\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 835
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 836
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 837
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 838
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 839
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 840
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 841
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 842
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 843
testRunner.Given("пользователь в импорте протоколов решений прикрепил файл импорта \"тестовый.xlsx\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 844
testRunner.When("пользователь запускает импорт протоколов решений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 845
testRunner.Then(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка действий пользователя при импорте протоколов собственников")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void УспешнаяБлокировкаДействийПользователяПриИмпортеПротоколовСобственников()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка действий пользователя при импорте протоколов собственников", new string[] {
                        "ignore"});
#line 850
this.ScenarioSetup(scenarioInfo);
#line 851
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 852
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 853
testRunner.And("пользователь в единых настройках приложения заполняет поле Запрещать выполнение о" +
                    "пераций с лицевыми счетами после расчета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 854
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 855
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133029\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 856
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 857
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 858
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 859
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 860
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 861
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 862
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 863
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 864
testRunner.Given("пользователь в Импорте протоколов собственников прикрепил файл импорта \"тестовый." +
                    "xlsx\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 865
testRunner.When("пользователь запускает импорт протоколов собственников", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 866
testRunner.Then(@"падает ошибка с текстом ""Выполнение действия невозможно, так как таблица заблокирована. Повторите попытку после снятия блокировки. В зависимости от настроек приложения, блокировка будет автоматически выключена либо после завершения расчета, либо после успешного завершения закрытия периода.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка расчета начислений при импорте начислений dbf")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void УспешнаяБлокировкаРасчетаНачисленийПриИмпортеНачисленийDbf()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка расчета начислений при импорте начислений dbf", new string[] {
                        "ignore"});
#line 875
this.ScenarioSetup(scenarioInfo);
#line 876
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 877
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 878
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 879
testRunner.Given("пользователь в Реестре ЛС вызывает импорт начислений dbf", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 880
testRunner.And("пользователь в импорте начислений dbf прикрепил файл импорта \"1410.dbf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 881
testRunner.When("пользователь запускает импорт начислений dbf", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 882
testRunner.Then("в реестре задач появилась задача с Наименованием \"Импорт начислений dbf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 883
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 884
testRunner.And("в течении 2 мин статус задачи стал \"Выполняется\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 885
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 886
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 887
testRunner.Then("падает ошибка с текстом \"Операция не может быть выполнена пока не завершиться имп" +
                    "орт начислений dbf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка закрытия периода при импорте начислений dbf")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void УспешнаяБлокировкаЗакрытияПериодаПриИмпортеНачисленийDbf()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка закрытия периода при импорте начислений dbf", new string[] {
                        "ignore"});
#line 892
this.ScenarioSetup(scenarioInfo);
#line 893
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 894
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 895
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 896
testRunner.Given("пользователь в Реестре ЛС вызывает импорт начислений dbf", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 897
testRunner.And("пользователь в импорте начислений dbf прикрепил файл импорта \"1410.dbf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 898
testRunner.When("пользователь запускает импорт начислений dbf", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 899
testRunner.Then("в реестре задач появилась задача с Наименованием \"Импорт начислений dbf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 900
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 901
testRunner.And("в течении 2 мин статус задачи стал \"Выполняется\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 902
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 903
testRunner.When("пользователь закрывает текущий период", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 904
testRunner.Then("падает ошибка с текстом \"Операция не может быть выполнена пока не завершиться имп" +
                    "орт начислений dbf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка расчета начислений при импорте начислений dbf2")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void УспешнаяБлокировкаРасчетаНачисленийПриИмпортеНачисленийDbf2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка расчета начислений при импорте начислений dbf2", new string[] {
                        "ignore"});
#line 909
this.ScenarioSetup(scenarioInfo);
#line 910
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 911
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 912
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 913
testRunner.Given("пользователь в Реестре ЛС вызывает импорт начислений dbf 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 914
testRunner.And("пользователь в импорте начислений dbf 2 прикрепил файл импорта \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 915
testRunner.When("пользователь запускает импорт начислений dbf 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 916
testRunner.Then("в реестре задач появилась задача с Наименованием \"Импорт начислений dbf 2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 917
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 918
testRunner.And("в течении 2 мин статус задачи стал \"Выполняется\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 919
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 920
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 921
testRunner.Then("падает ошибка с текстом \"Операция не может быть выполнена пока не завершиться имп" +
                    "орт начислений dbf2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка закрытия периода при импорте начислений dbf2")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void УспешнаяБлокировкаЗакрытияПериодаПриИмпортеНачисленийDbf2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка закрытия периода при импорте начислений dbf2", new string[] {
                        "ignore"});
#line 926
this.ScenarioSetup(scenarioInfo);
#line 927
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 928
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 929
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 930
testRunner.Given("пользователь в Реестре ЛС вызывает импорт начислений dbf 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 931
testRunner.And("пользователь в импорте начислений dbf 2 прикрепил файл импорта \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 932
testRunner.When("пользователь запускает импорт начислений dbf 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 933
testRunner.Then("в реестре задач появилась задача с Наименованием \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 934
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 935
testRunner.And("в течении 2 мин статус задачи стал \"Выполняется\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 936
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 937
testRunner.When("пользователь закрывает текущий период", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 938
testRunner.Then("падает ошибка с текстом \"Операция не может быть выполнена пока не завершиться имп" +
                    "орт начислений dbf2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка расчета начислений при импорте лицевых счетов")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void УспешнаяБлокировкаРасчетаНачисленийПриИмпортеЛицевыхСчетов()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка расчета начислений при импорте лицевых счетов", new string[] {
                        "ignore"});
#line 943
this.ScenarioSetup(scenarioInfo);
#line 944
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 945
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 946
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 947
testRunner.Given("пользователь в реестре ЛС вызывает Импорт - Импорт лицевых счетов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 948
testRunner.And("пользователь в реестре ЛС в форме импорта ЛС выбирает файл \"ИмпортЛСрабочий.csv\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 949
testRunner.When("пользователь в реестре ЛС запускает импорт ЛС", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 950
testRunner.Then("в реестре задач появилась задача с Наименованием \"Импорт лицевых счетов\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 951
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 952
testRunner.And("в течении 2 мин статус задачи стал \"Выполняется\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 953
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 954
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 955
testRunner.Then("падает ошибка с текстом \"Операция не может быть выполнена пока не завершиться Имп" +
                    "орт лицевых счетов\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка закрытия периода при импорте лицевых счетов")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void УспешнаяБлокировкаЗакрытияПериодаПриИмпортеЛицевыхСчетов()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка закрытия периода при импорте лицевых счетов", new string[] {
                        "ignore"});
#line 960
this.ScenarioSetup(scenarioInfo);
#line 961
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 962
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 963
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 964
testRunner.Given("пользователь в реестре ЛС вызывает Импорт - Импорт лицевых счетов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 965
testRunner.And("пользователь в реестре ЛС в форме импорта ЛС выбирает файл \"ИмпортЛСрабочий.csv\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 966
testRunner.When("пользователь в реестре ЛС запускает импорт ЛС", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 967
testRunner.Then("в реестре задач появилась задача с Наименованием \"Импорт лицевых счетов\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 968
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 969
testRunner.And("в течении 2 мин статус задачи стал \"Выполняется\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 970
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 971
testRunner.When("пользователь закрывает текущий период", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 972
testRunner.Then("падает ошибка с текстом \"Операция не может быть выполнена пока не завершиться Имп" +
                    "орт лицевых счетов\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка расчета начислений при импорте абонентов")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.TestCaseAttribute("true", null)]
        [NUnit.Framework.TestCaseAttribute("false", null)]
        public virtual void УспешнаяБлокировкаРасчетаНачисленийПриИмпортеАбонентов(string заменаДанных, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка расчета начислений при импорте абонентов", @__tags);
#line 977
this.ScenarioSetup(scenarioInfo);
#line 978
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 979
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 980
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 981
testRunner.Given("пользователь в Импорте абонентов прикрепил файл импорта \"импортабонентоврабочий.x" +
                    "lsx\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 982
testRunner.And(string.Format("пользователь в Импорте абонентов заполняет поле Заменять существующие сведения \"{" +
                        "0}\"", заменаДанных), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 983
testRunner.When("пользователь запускает импорт абонентов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 984
testRunner.Then("в реестре задач появилась задача с Наименованием \"Импорт абонентов\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 985
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 986
testRunner.And("в течении 2 мин статус задачи стал \"Выполняется\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 987
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 988
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 989
testRunner.Then("падает ошибка с текстом \"Операция не может быть выполнена пока не завершиться Имп" +
                    "орт абонентов\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка закрытия периода при импорте абонентов")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.TestCaseAttribute("true", null)]
        [NUnit.Framework.TestCaseAttribute("false", null)]
        public virtual void УспешнаяБлокировкаЗакрытияПериодаПриИмпортеАбонентов(string заменаДанных, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка закрытия периода при импорте абонентов", @__tags);
#line 999
this.ScenarioSetup(scenarioInfo);
#line 1000
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1001
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 1002
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1003
testRunner.Given("пользователь в Импорте абонентов прикрепил файл импорта \"импортабонентоврабочий.x" +
                    "lsx\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 1004
testRunner.And(string.Format("пользователь в Импорте абонентов заполняет поле Заменять существующие сведения \"{" +
                        "0}\"", заменаДанных), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1005
testRunner.When("пользователь запускает импорт абонентов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1006
testRunner.Then("в реестре задач появилась задача с Наименованием \"Импорт абонентов\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 1007
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1008
testRunner.And("в течении 2 мин статус задачи стал \"Выполняется\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1009
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1010
testRunner.When("пользователь закрывает текущий период", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1011
testRunner.Then("падает ошибка с текстом \"Операция не может быть выполнена пока не завершиться Имп" +
                    "орт абонентов\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка расчета начислений при импорте собственников")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void УспешнаяБлокировкаРасчетаНачисленийПриИмпортеСобственников()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка расчета начислений при импорте собственников", new string[] {
                        "ignore"});
#line 1021
this.ScenarioSetup(scenarioInfo);
#line 1022
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1023
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 1024
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1025
testRunner.Given("пользователь в импорте собственников заполняет поле Дата открытия лицевого счета " +
                    "\"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 1026
testRunner.And("пользователь в импорте собственников прикрепляет файл импорта \"импортабонентовраб" +
                    "очий.xls\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1027
testRunner.When("пользователь запускает импорт собственников", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1028
testRunner.Then("в реестре задач появилась задача с Наименованием \"Импорт собственников\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 1029
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1030
testRunner.And("в течении 2 мин статус задачи стал \"Выполняется\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1031
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1032
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1033
testRunner.Then("падает ошибка с текстом \"Операция не может быть выполнена пока не завершиться Имп" +
                    "орт собственников\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка закрытия периода при импорте собственников")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void УспешнаяБлокировкаЗакрытияПериодаПриИмпортеСобственников()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка закрытия периода при импорте собственников", new string[] {
                        "ignore"});
#line 1038
this.ScenarioSetup(scenarioInfo);
#line 1039
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1040
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 1041
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1042
testRunner.Given("пользователь в импорте собственников заполняет поле Дата открытия лицевого счета " +
                    "\"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 1043
testRunner.And("пользователь в импорте собственников прикрепляет файл импорта \"импортабонентовраб" +
                    "очий.xls\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1044
testRunner.When("пользователь запускает импорт собственников", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1045
testRunner.Then("в реестре задач появилась задача с Наименованием \"Импорт собственников\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 1046
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1047
testRunner.And("в течении 2 мин статус задачи стал \"Выполняется\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1048
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1049
testRunner.When("пользователь закрывает текущий период", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1050
testRunner.Then("падает ошибка с текстом \"Операция не может быть выполнена пока не завершиться Имп" +
                    "орт собственников\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка расчета начислений при импорте протоколов решений")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void УспешнаяБлокировкаРасчетаНачисленийПриИмпортеПротоколовРешений()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка расчета начислений при импорте протоколов решений", new string[] {
                        "ignore"});
#line 1055
this.ScenarioSetup(scenarioInfo);
#line 1056
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1057
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 1058
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1059
testRunner.Given("пользователь в импорте протоколов решений прикрепил файл импорта \"импортПротоколо" +
                    "вРешенийРабочйи.xlsx\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 1060
testRunner.When("пользователь запускает импорт протоколов решений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1061
testRunner.Then("в реестре задач появилась задача с Наименованием \"Импорт протоколов решений\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 1062
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1063
testRunner.And("в течении 2 мин статус задачи стал \"Выполняется\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1064
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1065
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1066
testRunner.Then("падает ошибка с текстом \"Операция не может быть выполнена пока не завершиться Имп" +
                    "орт протоколов решений\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка закрытия периода при импорте протоколов решений")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void УспешнаяБлокировкаЗакрытияПериодаПриИмпортеПротоколовРешений()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка закрытия периода при импорте протоколов решений", new string[] {
                        "ignore"});
#line 1071
this.ScenarioSetup(scenarioInfo);
#line 1072
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1073
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 1074
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1075
testRunner.Given("пользователь в импорте протоколов решений прикрепил файл импорта \"импортПротоколо" +
                    "вРешенийРабочйи.xlsx\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 1076
testRunner.When("пользователь запускает импорт протоколов решений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1077
testRunner.Then("в реестре задач появилась задача с Наименованием \"Импорт протоколов решений\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 1078
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1079
testRunner.And("в течении 2 мин статус задачи стал \"Выполняется\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1080
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1081
testRunner.When("пользователь закрывает текущий период", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1082
testRunner.Then("падает ошибка с текстом \"Операция не может быть выполнена пока не завершиться Имп" +
                    "орт протоколов решений\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка расчета начислений при импорте протоколов собственников")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void УспешнаяБлокировкаРасчетаНачисленийПриИмпортеПротоколовСобственников()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка расчета начислений при импорте протоколов собственников", new string[] {
                        "ignore"});
#line 1087
this.ScenarioSetup(scenarioInfo);
#line 1088
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1089
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 1090
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1091
testRunner.Given("пользователь в импорте протоколов собственников прикрепил файл импорта \"тестовый." +
                    "xlsx\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 1092
testRunner.When("пользователь запускает импорт протоколов собственников", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1093
testRunner.Then("в реестре задач появилась задача с Наименованием \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 1094
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1095
testRunner.And("в течении 2 мин статус задачи стал \"Выполняется\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1096
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1097
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1098
testRunner.Then("падает ошибка с текстом \"Операция не может быть выполнена пока не завершиться Имп" +
                    "орт протоколов собственников\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка закрытия периода при импорте протоколов собственников")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void УспешнаяБлокировкаЗакрытияПериодаПриИмпортеПротоколовСобственников()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка закрытия периода при импорте протоколов собственников", new string[] {
                        "ignore"});
#line 1103
this.ScenarioSetup(scenarioInfo);
#line 1104
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1105
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 1106
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1107
testRunner.Given("пользователь в импорте протоколов собственников прикрепил файл импорта \"тестовый." +
                    "xlsx\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 1108
testRunner.When("пользователь запускает импорт протоколов собственников", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1109
testRunner.Then("в реестре задач появилась задача с Наименованием \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 1110
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1111
testRunner.And("в течении 2 мин статус задачи стал \"Выполняется\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1112
testRunner.And("в реестре блокировок присутствуют записи по блокировкам", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1113
testRunner.When("пользователь закрывает текущий период", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1114
testRunner.Then("падает ошибка с текстом \"Операция не может быть выполнена пока не завершиться Имп" +
                    "орт протоколов собственников\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка расчета начислений при подтверждении начислений")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void УспешнаяБлокировкаРасчетаНачисленийПриПодтвержденииНачислений()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка расчета начислений при подтверждении начислений", new string[] {
                        "ignore"});
#line 1119
this.ScenarioSetup(scenarioInfo);
#line 1120
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1121
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 1122
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1123
testRunner.Given("пользователь в реестре ЛС выбирает лицевой счет \"140133077\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 1124
testRunner.And("пользователь выбирает Период \"текущий\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1125
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1126
testRunner.Then("в реестре задач появилась задача с Наименованием \"Расчет задолженности ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 1127
testRunner.And("у этой задачи заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1128
testRunner.And("в течении 2 мин статус задачи стал \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1129
testRunner.And("в течении 1 мин процент выполнения задачи стал \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1130
testRunner.And("в течении 1 мин ход выполнения задачи стал \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1131
testRunner.When("в Реестре неподтвержденных начислений появляется запись начислений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1132
testRunner.Then("у этой записи неподтверждённых начислений Состояние \"Ожидание\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 1133
testRunner.When("пользователь подтверждает эту запись начислений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1134
testRunner.Then("у этой записи неподтверждённых начислений Состояние \"Подтверждено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 1135
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1136
testRunner.Then("падает ошибка с текстом \"Операция не может быть выполнена пока не завершиться Под" +
                    "тверждение начислений\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка закрытия периода при подтверждении начислений")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void УспешнаяБлокировкаЗакрытияПериодаПриПодтвержденииНачислений()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка закрытия периода при подтверждении начислений", new string[] {
                        "ignore"});
#line 1141
this.ScenarioSetup(scenarioInfo);
#line 1142
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1143
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 1144
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1145
testRunner.And("в Реестре неподтвержденных начислений появляется запись начислений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1146
testRunner.And("у этой записи начислений Состояние \"Ожидание\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1147
testRunner.When("пользователь подтверждает эту запись начислений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1148
testRunner.Then("у этой записи начислений Состояние \"Ожидание\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 1149
testRunner.When("пользователь закрывает текущий период", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1150
testRunner.Then("падает ошибка с текстом \"Операция не может быть выполнена пока не завершиться Под" +
                    "тверждение начислений\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка расчета начислений при подтверждении оплат")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void УспешнаяБлокировкаРасчетаНачисленийПриПодтвержденииОплат()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка расчета начислений при подтверждении оплат", new string[] {
                        "ignore"});
#line 1155
this.ScenarioSetup(scenarioInfo);
#line 1156
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1157
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 1158
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1159
testRunner.And("в Реестре неподтвержденных оплат появляется запись оплат", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1160
testRunner.And("у этой записи оплат Состояние \"Ожидание\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1161
testRunner.When("пользователь подтверждает эту запись оплат", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1162
testRunner.Then("у этой записи оплат Состояние \"Ожидание\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 1163
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1164
testRunner.Then("падает ошибка с текстом \"Операция не может быть выполнена пока не завершиться Под" +
                    "тверждение оплат\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная блокировка закрытия периода при подтверждении оплат")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void УспешнаяБлокировкаЗакрытияПериодаПриПодтвержденииОплат()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная блокировка закрытия периода при подтверждении оплат", new string[] {
                        "ignore"});
#line 1169
this.ScenarioSetup(scenarioInfo);
#line 1170
testRunner.When("пользователь снимает блокировки в Реестре блокировки таблиц", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1171
testRunner.Given("пользователь в единых настройках приложения заполняет поле Включить блокировку \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 1172
testRunner.When("пользователь сохраняет настройки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1173
testRunner.And("в Реестре неподтвержденных оплат появляется запись оплат", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1174
testRunner.And("у этой записи оплат Состояние \"Ожидание\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 1175
testRunner.When("пользователь подтверждает эту запись оплат", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1176
testRunner.Then("у этой записи оплат Состояние \"Ожидание\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 1177
testRunner.When("пользователь закрывает текущий период", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 1178
testRunner.Then("падает ошибка с текстом \"Операция не может быть выполнена пока не завершиться Под" +
                    "тверждение оплат\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
