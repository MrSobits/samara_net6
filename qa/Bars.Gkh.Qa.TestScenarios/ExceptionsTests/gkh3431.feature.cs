// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Bars.Gkh.Qa.TestScenarios.ExceptionsTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("зачисление денег на счет с отображжением в поле \"Уплачено взносов по минимальному" +
        " тарифу\"")]
    [NUnit.Framework.CategoryAttribute("ScenarioInTransaction")]
    public partial class ЗачислениеДенегНаСчетСОтображжениемВПолеУплаченоВзносовПоМинимальномуТарифуFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "gkh3431.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "зачисление денег на счет с отображжением в поле \"Уплачено взносов по минимальному" +
                    " тарифу\"", "", ProgrammingLanguage.CSharp, new string[] {
                        "ScenarioInTransaction"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("отображение зачисленной суммы в поле \"Уплачено взносов по минимальному тарифу\"")]
        public virtual void ОтображениеЗачисленнойСуммыВПолеУплаченоВзносовПоМинимальномуТарифу()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("отображение зачисленной суммы в поле \"Уплачено взносов по минимальному тарифу\"", ((string[])(null)));
#line 4
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "region",
                        "houseType",
                        "city",
                        "street",
                        "houseNumber"});
            table1.AddRow(new string[] {
                        "testregion",
                        "Многоквартирный",
                        "Камчатский край, Алеутский р-н, с. Никольское",
                        "ул. 50 лет Октября",
                        "д. test"});
#line 5
testRunner.Given("в реестр жилых домов добавлен новый дом", ((string)(null)), table1, "Дано ");
#line 9
testRunner.And("выполненно действие \"Создание операций по счету начислений дома (если отсутствуют" +
                    ")\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoomNum",
                        "Area",
                        "LivingArea",
                        "Type",
                        "OwnershipType"});
            table2.AddRow(new string[] {
                        "fads",
                        "51",
                        "35",
                        "Жилое",
                        "Частная"});
#line 11
testRunner.And("у этого дома добавлено помещение", ((string)(null)), table2, "И ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Surname",
                        "FirstName",
                        "secondName",
                        "BirthDate",
                        "IdentityType",
                        "IdentitySerial",
                        "IdentityNumber"});
            table3.AddRow(new string[] {
                        "1",
                        "1",
                        "1",
                        "12.06.1961",
                        "10",
                        "9206",
                        "612345"});
#line 15
testRunner.And("добавлен абонент типа Счет физ.лица", ((string)(null)), table3, "И ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "region",
                        "OpenDate",
                        "RealityObjectAddress",
                        "RoomNum",
                        "AreaShare"});
            table4.AddRow(new string[] {
                        "testregion",
                        "01.01.2015",
                        "с. Никольское ул. 50 лет Октября д. test",
                        "fads",
                        "1"});
#line 19
testRunner.And("добавлено помещение абоненту типа Счет физ.лица", ((string)(null)), table4, "И ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateReceipt",
                        "Sum",
                        "MoneyDirection",
                        "DocumentNum"});
            table5.AddRow(new string[] {
                        "текущая дата",
                        "333",
                        "Приход",
                        "00100"});
#line 23
testRunner.Given("добавлена банковская операция", ((string)(null)), table5, "Дано ");
#line 27
testRunner.When("пользователь производит действие зачисления по кнопке Распределить для банковской" +
                    " операции с типом Приход", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 28
testRunner.And("пользователь у этой банковской операции для распределения Тип распределения \"Плат" +
                    "еж КР\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 30
testRunner.And("пользователь выбирает этот лицевой счет", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 32
testRunner.When("пользователь применяет распределение", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 33
testRunner.Then("в списке банковских операций у этой банковской операции статус = Распределена", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 34
testRunner.And("в карточке этого лицевого счета, в операциях за текущий период, присутствует запи" +
                    "сь \"Оплата по базовому тарифу\" с датой операции из этой банковской операции и Из" +
                    "менение сальдо = 333", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 35
testRunner.And("у этого лицевого счета присутствует детализация по Уплачено взносов по минимально" +
                    "му тарифу всего = 333", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 36
testRunner.And("у этой детализации присутствует запись оплаты", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 37
testRunner.And("у этой записи по оплате заполнено поле Период = открытый период", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 38
testRunner.And("у этой записи номера заполнено поле Сумма = сумме всех записей из детализации о э" +
                    "тому лс по Уплачено взносов по минимальному тарифу всего", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
