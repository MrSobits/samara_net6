// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Bars.Gkh.Qa.TestScenarios
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("тесткейсы для раздела \"Банковские операции\"")]
    [NUnit.Framework.CategoryAttribute("ScenarioInTransaction")]
    public partial class ТесткейсыДляРазделаБанковскиеОперацииFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "bank_account_statement.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "тесткейсы для раздела \"Банковские операции\"", "Региональный фонд - Счета - Банковские операции", ProgrammingLanguage.CSharp, new string[] {
                        "ScenarioInTransaction"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "region",
                        "houseType",
                        "city",
                        "street",
                        "houseNumber"});
            table1.AddRow(new string[] {
                        "testregion",
                        "Многоквартирный",
                        "Камчатский край, Алеутский р-н, с. Никольское",
                        "ул. 50 лет Октября",
                        "д. test"});
#line 6
testRunner.Given("в реестр жилых домов добавлен новый дом", ((string)(null)), table1, "Дано ");
#line 10
testRunner.And("выполненно действие \"Создание операций по счету начислений дома (если отсутствуют" +
                    ")\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoomNum",
                        "Area",
                        "LivingArea",
                        "Type",
                        "OwnershipType"});
            table2.AddRow(new string[] {
                        "1",
                        "51",
                        "35",
                        "Жилое",
                        "Частная"});
#line 12
testRunner.And("у этого дома добавлено помещение", ((string)(null)), table2, "И ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Surname",
                        "FirstName",
                        "secondName",
                        "BirthDate",
                        "IdentityType",
                        "IdentitySerial",
                        "IdentityNumber"});
            table3.AddRow(new string[] {
                        "1",
                        "1",
                        "1",
                        "12.06.1961",
                        "10",
                        "9206",
                        "612345"});
#line 16
testRunner.And("добавлен абонент типа Счет физ.лица", ((string)(null)), table3, "И ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "region",
                        "OpenDate",
                        "RealityObjectAddress",
                        "RoomNum",
                        "AreaShare"});
            table4.AddRow(new string[] {
                        "testregion",
                        "01.01.2015",
                        "с. Никольское, ул. 50 лет Октября, д. test",
                        "1",
                        "0.5"});
#line 21
testRunner.And("добавлено помещение абоненту типа Счет физ.лица", ((string)(null)), table4, "И ");
#line 25
testRunner.And("добавлен новый счёт оплат текущего дома", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 26
testRunner.And("пользователь добавляет новую банковскую операцию", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 27
testRunner.And("пользователь у этой банковской операции заполняет поле Дата документа \"текущая да" +
                    "та\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 28
testRunner.And("пользователь у этой банковской операции заполняет поле Сумма \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 30
testRunner.And("пользователь у этого дома добавляет протокол решения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 31
testRunner.And("пользователь у этого протокола заполняет поле Номер \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 32
testRunner.And("пользователь у этого протокола заполняет поле Дата вступления в силу \"11.07.2115\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 33
testRunner.And("пользователь у этого протокола заполняет поле Уполномоченное лицо \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 34
testRunner.When("пользователь сохраняет этот протокол", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное добавление счета нвс")]
        [NUnit.Framework.TestCaseAttribute("Приход", null)]
        [NUnit.Framework.TestCaseAttribute("Расход", null)]
        public virtual void УспешноеДобавлениеСчетаНвс(string приходРасход, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное добавление счета нвс", exampleTags);
#line 36
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 37
testRunner.Given(string.Format("пользователь у этой банковской операции заполняет поле Приход/расход \"{0}\"", приходРасход), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 38
testRunner.When("пользователь сохраняет эту банковскую операцию", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 39
testRunner.Then("запись по этой банковской операции присутствует в разделе банковских операций", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("формирование распределения по лицевому счету")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Целевая субсидия", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Платеж КР", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Ранее накопленные средства", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Поступление оплат аренды", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Оплата по мировому соглашению", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Целевая субсидия", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Платеж КР", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Ранее накопленные средства", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Поступление оплат аренды", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Оплата по мировому соглашению", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Целевая субсидия", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Платеж КР", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Ранее накопленные средства", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Поступление оплат аренды", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Оплата по мировому соглашению", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Целевая субсидия", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Платеж КР", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Ранее накопленные средства", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Поступление оплат аренды", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Оплата по мировому соглашению", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат субсидии фонда", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат региональной субсидии", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат целевой субсидии", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Оплата акта", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат средств", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат МСП", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат пени", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Комиссия за ведение счета кредитной организацией", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Распределение средств подрядчику", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат субсидии фонда", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат региональной субсидии", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат целевой субсидии", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Оплата акта", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат средств", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат МСП", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат пени", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Комиссия за ведение счета кредитной организацией", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Распределение средств подрядчику", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат субсидии фонда", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат региональной субсидии", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат целевой субсидии", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Оплата акта", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат средств", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат МСП", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат пени", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Комиссия за ведение счета кредитной организацией", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Распределение средств подрядчику", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат субсидии фонда", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат региональной субсидии", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат целевой субсидии", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Оплата акта", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат средств", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат МСП", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат пени", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Комиссия за ведение счета кредитной организацией", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Распределение средств подрядчику", "Пропорционально задолженности", null)]
        public virtual void ФормированиеРаспределенияПоЛицевомуСчету(string типПлатежа, string приходРасход, string типРаспределения, string видРаспределения, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("формирование распределения по лицевому счету", @__tags);
#line 47
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 49
testRunner.Given(string.Format("пользователь у этой банковской операции заполняет поле Приход/расход \"{0}\"", приходРасход), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 50
testRunner.When("пользователь сохраняет эту банковскую операцию", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 53
testRunner.And(string.Format("пользователь у этой банковской операции для распределения Тип распределения \"{0}\"" +
                        "", типРаспределения), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 55
testRunner.And("пользователь выбирает этот лицевой счет", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 57
testRunner.And("пользователь применяет распределение", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 58
testRunner.Then("в списке банковских операций у этой банковской операции статус = Распределена", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 60
testRunner.And(string.Format("в карточке этого лицевого счета, в операциях за текущий период, присутствует запи" +
                        "сь \"{0}\" с датой операции из этой банковской операции и Изменение сальдо = 1", типРаспределения), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("формирование распределения по счету оплат дома")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Субсидия фонда", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Региональная субсидия", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Стимулирующая субсидия", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Иные источники поступления", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Поступление процентов банка", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Средства за ранее выполненные работы", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Субсидия фонда", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Региональная субсидия", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Стимулирующая субсидия", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Иные источники поступления", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Поступление процентов банка", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Средства за ранее выполненные работы", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Субсидия фонда", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Региональная субсидия", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Стимулирующая субсидия", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Иные источники поступления", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Поступление процентов банка", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Средства за ранее выполненные работы", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Субсидия фонда", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Региональная субсидия", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Стимулирующая субсидия", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Иные источники поступления", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Поступление процентов банка", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Приход", "Средства за ранее выполненные работы", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат субсидии фонда", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат региональной субсидии", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат целевой субсидии", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Оплата акта", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат средств", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат МСП", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат пени", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Комиссия за ведение счета кредитной организацией", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Распределение средств подрядчику", "Равномерное", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат субсидии фонда", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат региональной субсидии", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат целевой субсидии", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Оплата акта", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат средств", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат МСП", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат пени", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Комиссия за ведение счета кредитной организацией", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Распределение средств подрядчику", "Пропорционально площадям", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат субсидии фонда", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат региональной субсидии", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат целевой субсидии", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Оплата акта", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат средств", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат МСП", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат пени", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Комиссия за ведение счета кредитной организацией", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Распределение средств подрядчику", "По лимитам", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат субсидии фонда", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат региональной субсидии", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат целевой субсидии", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Оплата акта", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат средств", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат МСП", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Возврат пени", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Комиссия за ведение счета кредитной организацией", "Пропорционально задолженности", null)]
        [NUnit.Framework.TestCaseAttribute("Платеж", "Расход", "Распределение средств подрядчику", "Пропорционально задолженности", null)]
        public virtual void ФормированиеРаспределенияПоСчетуОплатДома(string типПлатежа, string приходРасход, string типРаспределения, string видРаспределения, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("формирование распределения по счету оплат дома", @__tags);
#line 121
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 123
testRunner.Given(string.Format("пользователь у этой банковской операции заполняет поле Приход/расход \"{0}\"", приходРасход), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 124
testRunner.When("пользователь сохраняет эту банковскую операцию", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 127
testRunner.And(string.Format("пользователь у этой банковской операции для распределения Тип распределения \"{0}\"" +
                        "", типРаспределения), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 129
testRunner.And("пользователь выбирает этот лицевой счет", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 131
testRunner.And("пользователь применяет распределение", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 132
testRunner.Then("в списке банковских операций у этой банковской операции статус = Распределена", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 135
testRunner.And(string.Format("в карточке этого дома, в разделе счет оплат, в операциях за текущий период, прису" +
                        "тствует запись \"{0}\" с датой операции из этой банковской операции и Изменение са" +
                        "льдо = 1", типРаспределения), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
