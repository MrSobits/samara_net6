// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Bars.Gkh.Qa.TestScenarios
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("тесткейсы граничных значений для добавления абонента в раздел \"Реестр абонентов\"")]
    [NUnit.Framework.CategoryAttribute("ScenarioInTransaction")]
    public partial class ТесткейсыГраничныхЗначенийДляДобавленияАбонентаВРазделРеестрАбонентовFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "register_personal_acc_owner_boundaries.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "тесткейсы граничных значений для добавления абонента в раздел \"Реестр абонентов\"", "Региональный фонд - Абоненты - Реестр абонентов", ProgrammingLanguage.CSharp, new string[] {
                        "ScenarioInTransaction"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "region",
                        "houseType",
                        "city",
                        "street",
                        "houseNumber"});
            table1.AddRow(new string[] {
                        "testregion",
                        "Многоквартирный",
                        "Камчатский край, Алеутский р-н, с. Никольское",
                        "ул. 50 лет Октября",
                        "д. test"});
#line 7
testRunner.Given("в реестр жилых домов добавлен новый дом", ((string)(null)), table1, "Дано ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoomNum",
                        "Area",
                        "LivingArea",
                        "Type",
                        "OwnershipType"});
            table2.AddRow(new string[] {
                        "1",
                        "51",
                        "35",
                        "Жилое",
                        "Частная"});
#line 11
testRunner.And("у этого дома добавлено помещение", ((string)(null)), table2, "И ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Code",
                        "OkopfCode"});
            table3.AddRow(new string[] {
                        "тест",
                        "тест",
                        "тест"});
#line 15
testRunner.Given("добавлена организационно-правовая форма", ((string)(null)), table3, "Дано ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table4.AddRow(new string[] {
                        "тест"});
#line 19
testRunner.Given("добавлен контрагент с организационно правовой формой", ((string)(null)), table4, "Дано ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление абонента типа Счет физ лица при незаполненных обязательных п" +
            "олях Имя")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void НеудачноеДобавлениеАбонентаТипаСчетФизЛицаПриНезаполненныхОбязательныхПоляхИмя()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление абонента типа Счет физ лица при незаполненных обязательных п" +
                    "олях Имя", new string[] {
                        "ignore"});
#line 25
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 26
testRunner.Given("пользователь добавляет абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 27
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Фамилия \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 28
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Серия документа \"" +
                    "1111111\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 29
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Номер документа \"" +
                    "1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 30
testRunner.When("пользователь сохраняет этого абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 31
testRunner.Then("запись по этому абоненту отсутствует в разделе абонентов типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 32
testRunner.And("падает ошибка с текстом \"Не заполнены обязательные поля: Имя\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление абонента типа Счет физ лица при незаполненных обязательных п" +
            "олях Фамилия")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void НеудачноеДобавлениеАбонентаТипаСчетФизЛицаПриНезаполненныхОбязательныхПоляхФамилия()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление абонента типа Счет физ лица при незаполненных обязательных п" +
                    "олях Фамилия", new string[] {
                        "ignore"});
#line 36
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 37
testRunner.Given("пользователь добавляет абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 38
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Имя \"Сергей\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 39
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Серия документа \"" +
                    "1111111\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 40
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Номер документа \"" +
                    "1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 41
testRunner.When("пользователь сохраняет этого абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 42
testRunner.Then("запись по этому абоненту отсутствует в разделе абонентов типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 43
testRunner.And("падает ошибка с текстом \"Не заполнены обязательные поля: Фамилия\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удачное добавление абонента типа Счет физ лица при вводе граничных условий в 100 " +
            "знаков, Фамилия")]
        public virtual void УдачноеДобавлениеАбонентаТипаСчетФизЛицаПриВводеГраничныхУсловийВ100ЗнаковФамилия()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удачное добавление абонента типа Счет физ лица при вводе граничных условий в 100 " +
                    "знаков, Фамилия", ((string[])(null)));
#line 46
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 47
testRunner.Given("пользователь добавляет абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 48
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Фамилия 100 симво" +
                    "ло \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 49
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Серия документа \"" +
                    "1111111\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 50
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Номер документа \"" +
                    "1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 51
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Имя \"Сергей\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 52
testRunner.When("пользователь сохраняет этого абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 53
testRunner.Then("запись по этому абоненту присутствует в разделе абонентов типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление абонента типа Счет физ лица при вводе граничных условий в 10" +
            "1 знаков, Фамилия")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void НеудачноеДобавлениеАбонентаТипаСчетФизЛицаПриВводеГраничныхУсловийВ101ЗнаковФамилия()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление абонента типа Счет физ лица при вводе граничных условий в 10" +
                    "1 знаков, Фамилия", new string[] {
                        "ignore"});
#line 57
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 58
testRunner.Given("пользователь добавляет абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 59
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Имя \"Иван\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 60
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Серия документа \"" +
                    "1111111\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 61
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Номер документа \"" +
                    "1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 62
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Фамилия 101 симво" +
                    "ло \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 63
testRunner.When("пользователь сохраняет этого абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 64
testRunner.Then("запись по этому абоненту отсутствует в разделе абонентов типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 65
testRunner.And("падает ошибка с текстом \"Не заполнены обязательные поля: Фамилия\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удачное добавление абонента типа Счет физ лица при вводе граничных условий в 100 " +
            "знаков, Имя")]
        public virtual void УдачноеДобавлениеАбонентаТипаСчетФизЛицаПриВводеГраничныхУсловийВ100ЗнаковИмя()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удачное добавление абонента типа Счет физ лица при вводе граничных условий в 100 " +
                    "знаков, Имя", ((string[])(null)));
#line 67
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 68
testRunner.Given("пользователь добавляет абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 69
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Фамилия \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 70
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Серия документа \"" +
                    "1111111\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 71
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Номер документа \"" +
                    "1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 72
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Имя 100 символов " +
                    "\"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 73
testRunner.When("пользователь сохраняет этого абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 74
testRunner.Then("запись по этому абоненту присутствует в разделе абонентов типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление абонента при вводе граничных условий в 101 знаков, Имя")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void НеудачноеДобавлениеАбонентаПриВводеГраничныхУсловийВ101ЗнаковИмя()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление абонента при вводе граничных условий в 101 знаков, Имя", new string[] {
                        "ignore"});
#line 78
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 79
testRunner.Given("пользователь добавляет абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 80
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Фамилия \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 81
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Серия документа \"" +
                    "1111111\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 82
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Номер документа \"" +
                    "1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 83
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Имя 101 символов " +
                    "\"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 84
testRunner.When("пользователь сохраняет этого абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 85
testRunner.Then("запись по этому абоненту отсутствует в разделе абонентов типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 86
testRunner.And("падает ошибка с текстом \"Не заполнены обязательные поля: Имя\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удачное добавление абонента при вводе граничных условий в 100 знаков, Отчество")]
        public virtual void УдачноеДобавлениеАбонентаПриВводеГраничныхУсловийВ100ЗнаковОтчество()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удачное добавление абонента при вводе граничных условий в 100 знаков, Отчество", ((string[])(null)));
#line 88
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 89
testRunner.Given("пользователь добавляет абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 90
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Фамилия \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 91
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Имя \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 92
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Серия документа \"" +
                    "1111111\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 93
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Номер документа \"" +
                    "1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 94
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Отчество 100 знак" +
                    "ов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 95
testRunner.When("пользователь сохраняет этого абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 96
testRunner.Then("запись по этому абоненту присутствует в разделе абонентов типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление абонента при вводе граничных условий в 101 знаков, Отчество")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void НеудачноеДобавлениеАбонентаПриВводеГраничныхУсловийВ101ЗнаковОтчество()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление абонента при вводе граничных условий в 101 знаков, Отчество", new string[] {
                        "ignore"});
#line 100
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 101
testRunner.Given("пользователь добавляет абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 102
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Фамилия \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 103
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Имя \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 104
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Серия документа \"" +
                    "1111111\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 105
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Номер документа \"" +
                    "1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 106
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Отчество 101 знак" +
                    "ов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 107
testRunner.When("пользователь сохраняет этого абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 108
testRunner.Then("запись по этому абоненту отсутствует в разделе абонентов типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 109
testRunner.And("падает ошибка с текстом \"Не заполнены обязательные поля: Отчество\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удачное добавление абонента при вводе граничных условий в 200 знаков, Серия докум" +
            "ента")]
        [NUnit.Framework.TestCaseAttribute("Паспорт", null)]
        [NUnit.Framework.TestCaseAttribute("Свидетельство о рождении", null)]
        public virtual void УдачноеДобавлениеАбонентаПриВводеГраничныхУсловийВ200ЗнаковСерияДокумента(string типДокумента, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удачное добавление абонента при вводе граничных условий в 200 знаков, Серия докум" +
                    "ента", exampleTags);
#line 111
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 112
testRunner.Given("пользователь добавляет абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 113
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Фамилия \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 114
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Имя \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 115
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Отчество \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 116
testRunner.And(string.Format("пользователь у этого абонента типа Счет физ.лица заполняет поле Тип документа \"{0" +
                        "}\"", типДокумента), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 117
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Номер документа \"" +
                    "1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 118
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Серия документа 2" +
                    "00 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 119
testRunner.When("пользователь сохраняет этого абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 120
testRunner.Then("запись по этому абоненту присутствует в разделе абонентов типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление абонента при вводе граничных условий в 201 знаков, Серия док" +
            "умента")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.TestCaseAttribute("Паспорт", null)]
        [NUnit.Framework.TestCaseAttribute("Свидетельство о рождении", null)]
        public virtual void НеудачноеДобавлениеАбонентаПриВводеГраничныхУсловийВ201ЗнаковСерияДокумента(string типДокумента, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление абонента при вводе граничных условий в 201 знаков, Серия док" +
                    "умента", @__tags);
#line 129
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 130
testRunner.Given("пользователь добавляет абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 131
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Фамилия \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 132
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Имя \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 133
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Отчество \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 134
testRunner.And(string.Format("пользователь у этого абонента типа Счет физ.лица заполняет поле Тип документа \"{0" +
                        "}\"", типДокумента), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 135
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Номер документа \"" +
                    "1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 136
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Серия документа 2" +
                    "01 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 137
testRunner.When("пользователь сохраняет этого абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 138
testRunner.Then("запись по этому абоненту отсутствует в разделе абонентов типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 139
testRunner.And("падает ошибка с текстом \"Не заполнены обязательные поля: Серия документа\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удачное добавление абонента при вводе граничных условий в 200 знаков, Номер докум" +
            "ента")]
        [NUnit.Framework.TestCaseAttribute("Паспорт", null)]
        [NUnit.Framework.TestCaseAttribute("Свидетельство о рождении", null)]
        public virtual void УдачноеДобавлениеАбонентаПриВводеГраничныхУсловийВ200ЗнаковНомерДокумента(string типДокумента, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удачное добавление абонента при вводе граничных условий в 200 знаков, Номер докум" +
                    "ента", exampleTags);
#line 146
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 147
testRunner.Given("пользователь добавляет абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 148
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Фамилия \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 149
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Имя \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 150
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Отчество \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 151
testRunner.And(string.Format("пользователь у этого абонента типа Счет физ.лица заполняет поле Тип документа \"{0" +
                        "}\"", типДокумента), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 152
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Серия документа \"" +
                    "1111111\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 153
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Номер документа 2" +
                    "00 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 154
testRunner.When("пользователь сохраняет этого абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 155
testRunner.Then("запись по этому абоненту присутствует в разделе абонентов типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление абонента при вводе граничных условий в 201 знаков, Номер док" +
            "умента")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.TestCaseAttribute("Паспорт", null)]
        [NUnit.Framework.TestCaseAttribute("Свидетельство о рождении", null)]
        public virtual void НеудачноеДобавлениеАбонентаПриВводеГраничныхУсловийВ201ЗнаковНомерДокумента(string типДокумента, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ignore"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление абонента при вводе граничных условий в 201 знаков, Номер док" +
                    "умента", @__tags);
#line 164
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 165
testRunner.Given("пользователь добавляет абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 166
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Фамилия \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 167
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Имя \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 168
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Отчество \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 169
testRunner.And(string.Format("пользователь у этого абонента типа Счет физ.лица заполняет поле Тип документа \"{0" +
                        "}\"", типДокумента), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 170
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Серия документа \"" +
                    "1111111\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 171
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Номер документа 2" +
                    "01 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 172
testRunner.When("пользователь сохраняет этого абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 173
testRunner.Then("запись по этому абоненту отсутствует в разделе абонентов типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 174
testRunner.And("падает ошибка с текстом \"Не заполнены обязательные поля: Номер документа\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
