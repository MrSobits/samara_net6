// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Bars.Gkh.Qa.TestScenarios
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("тесткейсы граничных значений для раздела \"Виды работ\"")]
    [NUnit.Framework.CategoryAttribute("ScenarioInTransaction")]
    public partial class ТесткейсыГраничныхЗначенийДляРазделаВидыРаботFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "kind_works_boundaries.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "тесткейсы граничных значений для раздела \"Виды работ\"", "Справочники - Общие - Виды работ", ProgrammingLanguage.CSharp, new string[] {
                        "ScenarioInTransaction"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление вида работы при незаполненных обязательных полях")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void НеудачноеДобавлениеВидаРаботыПриНезаполненныхОбязательныхПолях()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление вида работы при незаполненных обязательных полях", new string[] {
                        "ignore"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
testRunner.Given("пользователь добавляет новый вид работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 9
testRunner.When("пользователь сохраняет этот вид работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 10
testRunner.Then("запись по этому виду работ отсутствует в реестре видов работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 11
testRunner.And("падает ошибка с текстом \"Не заполнены обязательные поля: Наименование Ед. измерен" +
                    "ия Код\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удачное добавление вида работ при вводе граничных условий в 300 знаков, Наименова" +
            "ние")]
        public virtual void УдачноеДобавлениеВидаРаботПриВводеГраничныхУсловийВ300ЗнаковНаименование()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удачное добавление вида работ при вводе граничных условий в 300 знаков, Наименова" +
                    "ние", ((string[])(null)));
#line 13
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "ShortName",
                        "Description"});
            table1.AddRow(new string[] {
                        "тест",
                        "тест",
                        "тест"});
#line 14
testRunner.Given("добавлена единица измерения", ((string)(null)), table1, "Дано ");
#line 18
testRunner.Given("пользователь добавляет новый вид работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 19
testRunner.And("пользователь у этого вида работ заполняет поле Наименование 300 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 20
testRunner.And("пользователь у этого вида работ заполняет поле Ед. измерения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 21
testRunner.And("пользователь у этого вида работ заполняет поле Код \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 22
testRunner.When("пользователь сохраняет этот вид работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 23
testRunner.Then("запись по этому виду работ присутствует в реестре видов работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление вида работ при вводе граничных условий в 301 знаков, Наимено" +
            "вание")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void НеудачноеДобавлениеВидаРаботПриВводеГраничныхУсловийВ301ЗнаковНаименование()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление вида работ при вводе граничных условий в 301 знаков, Наимено" +
                    "вание", new string[] {
                        "ignore"});
#line 27
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "ShortName",
                        "Description"});
            table2.AddRow(new string[] {
                        "тест",
                        "тест",
                        "тест"});
#line 28
testRunner.Given("добавлена единица измерения", ((string)(null)), table2, "Дано ");
#line 32
testRunner.Given("пользователь добавляет новый вид работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 33
testRunner.And("пользователь у этого вида работ заполняет поле Наименование 301 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 34
testRunner.And("пользователь у этого вида работ заполняет поле Ед. измерения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 35
testRunner.And("пользователь у этого вида работ заполняет поле Код \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 36
testRunner.When("пользователь сохраняет этот вид работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 37
testRunner.Then("запись по этому виду работ отсутствует в реестре видов работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 38
testRunner.And("падает ошибка с текстом \"Не заполнены обязательные поля: Наименование\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удачное добавление вида работ при вводе граничных условий в 10 знаков, Код")]
        public virtual void УдачноеДобавлениеВидаРаботПриВводеГраничныхУсловийВ10ЗнаковКод()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удачное добавление вида работ при вводе граничных условий в 10 знаков, Код", ((string[])(null)));
#line 40
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "ShortName",
                        "Description"});
            table3.AddRow(new string[] {
                        "тест",
                        "тест",
                        "тест"});
#line 41
testRunner.Given("добавлена единица измерения", ((string)(null)), table3, "Дано ");
#line 45
testRunner.Given("пользователь добавляет новый вид работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 46
testRunner.And("пользователь у этого вида работ заполняет поле Наименование \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 47
testRunner.And("пользователь у этого вида работ заполняет поле Ед. измерения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 48
testRunner.And("пользователь у этого вида работ заполняет поле Код 10 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 49
testRunner.When("пользователь сохраняет этот вид работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 50
testRunner.Then("запись по этому виду работ присутствует в реестре видов работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление вида работ при вводе граничных условий в 11 знаков, Код")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void НеудачноеДобавлениеВидаРаботПриВводеГраничныхУсловийВ11ЗнаковКод()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление вида работ при вводе граничных условий в 11 знаков, Код", new string[] {
                        "ignore"});
#line 54
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "ShortName",
                        "Description"});
            table4.AddRow(new string[] {
                        "тест",
                        "тест",
                        "тест"});
#line 55
testRunner.Given("добавлена единица измерения", ((string)(null)), table4, "Дано ");
#line 59
testRunner.Given("пользователь добавляет новый вид работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 60
testRunner.And("пользователь у этого вида работ заполняет поле Наименование \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 61
testRunner.And("пользователь у этого вида работ заполняет поле Ед. измерения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 62
testRunner.And("пользователь у этого вида работ заполняет поле Код 11 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 63
testRunner.When("пользователь сохраняет этот вид работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 64
testRunner.Then("запись по этому виду работ отсутствует в реестре видов работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 65
testRunner.And("падает ошибка с текстом \"Не заполнены обязательные поля: Код\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное неудачное добавление вида работ при вводе отрицательного значение в пол" +
            "е Норматив")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void НеудачноеНеудачноеДобавлениеВидаРаботПриВводеОтрицательногоЗначениеВПолеНорматив()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное неудачное добавление вида работ при вводе отрицательного значение в пол" +
                    "е Норматив", new string[] {
                        "ignore"});
#line 69
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "ShortName",
                        "Description"});
            table5.AddRow(new string[] {
                        "тест",
                        "тест",
                        "тест"});
#line 70
testRunner.Given("добавлена единица измерения", ((string)(null)), table5, "Дано ");
#line 74
testRunner.Given("пользователь добавляет новый вид работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 75
testRunner.And("пользователь у этого вида работ заполняет поле Наименование \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 76
testRunner.And("пользователь у этого вида работ заполняет поле Ед. измерения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 77
testRunner.And("пользователь у этого вида работ заполняет поле Код \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 78
testRunner.And("пользователь у этого вида работ заполняет поле Норматив \"-111,1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 79
testRunner.When("пользователь сохраняет этот вид работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 80
testRunner.Then("запись по этому виду работ отсутствует в реестре видов работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 81
testRunner.And("падает ошибка с текстом \"оор\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удачное добавление вида работ при вводе граничных условий в 500 знаков, Описание")]
        public virtual void УдачноеДобавлениеВидаРаботПриВводеГраничныхУсловийВ500ЗнаковОписание()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удачное добавление вида работ при вводе граничных условий в 500 знаков, Описание", ((string[])(null)));
#line 83
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "ShortName",
                        "Description"});
            table6.AddRow(new string[] {
                        "тест",
                        "тест",
                        "тест"});
#line 84
testRunner.Given("добавлена единица измерения", ((string)(null)), table6, "Дано ");
#line 88
testRunner.Given("пользователь добавляет новый вид работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 89
testRunner.And("пользователь у этого вида работ заполняет поле Наименование \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 90
testRunner.And("пользователь у этого вида работ заполняет поле Ед. измерения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 91
testRunner.And("пользователь у этого вида работ заполняет поле Код \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 92
testRunner.And("пользователь у этого вида работ заполняет поле Описание 500 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 93
testRunner.When("пользователь сохраняет этот вид работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 94
testRunner.Then("запись по этому виду работ присутствует в реестре видов работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление вида работ при вводе граничных условий в 501 знаков, Описани" +
            "е")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void НеудачноеДобавлениеВидаРаботПриВводеГраничныхУсловийВ501ЗнаковОписание()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление вида работ при вводе граничных условий в 501 знаков, Описани" +
                    "е", new string[] {
                        "ignore"});
#line 98
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "ShortName",
                        "Description"});
            table7.AddRow(new string[] {
                        "тест",
                        "тест",
                        "тест"});
#line 99
testRunner.Given("добавлена единица измерения", ((string)(null)), table7, "Дано ");
#line 103
testRunner.Given("пользователь добавляет новый вид работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 104
testRunner.And("пользователь у этого вида работ заполняет поле Наименование \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 105
testRunner.And("пользователь у этого вида работ заполняет поле Ед. измерения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 106
testRunner.And("пользователь у этого вида работ заполняет поле Код \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 107
testRunner.And("пользователь у этого вида работ заполняет поле Описание 501 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 108
testRunner.When("пользователь сохраняет этот вид работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 109
testRunner.Then("запись по этому виду работ отсутствует в реестре видов работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 110
testRunner.And("падает ошибка с текстом \"Не заполнены обязательные поля: Описание\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
