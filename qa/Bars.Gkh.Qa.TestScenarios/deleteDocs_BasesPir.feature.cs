// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Bars.Gkh.Qa.TestScenarios
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("удаления документов из оснований ПИРа")]
    [NUnit.Framework.CategoryAttribute("ScenarioInTransaction")]
    public partial class УдаленияДокументовИзОснованийПИРаFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "deleteDocs_BasesPir.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "удаления документов из оснований ПИРа", "Претензионная работа - Основания претензионной работы - Подрядчики, нарушившие ус" +
                    "ловия договора\r\nПретензионная работа - Основания претензионной работы - Реестр н" +
                    "еплательщиков", ProgrammingLanguage.CSharp, new string[] {
                        "ScenarioInTransaction"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "region",
                        "houseType",
                        "city",
                        "street",
                        "houseNumber"});
            table1.AddRow(new string[] {
                        "testregion",
                        "Многоквартирный",
                        "Камчатский край, Алеутский р-н, с. Никольское",
                        "ул. 50 лет Октября",
                        "д. test"});
#line 8
testRunner.Given("в реестр жилых домов добавлен новый дом", ((string)(null)), table1, "Дано ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoomNum",
                        "Area",
                        "LivingArea",
                        "Type",
                        "OwnershipType"});
            table2.AddRow(new string[] {
                        "1",
                        "51",
                        "35",
                        "Жилое",
                        "Частная"});
#line 12
testRunner.And("у этого дома добавлено помещение", ((string)(null)), table2, "И ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "DateStart"});
            table3.AddRow(new string[] {
                        "период программы тестовый",
                        "01.01.2015"});
#line 16
testRunner.And("добавлен период программ", ((string)(null)), table3, "И ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Period"});
            table4.AddRow(new string[] {
                        "программа капитального ремонта тестовая",
                        "период программы тестовый"});
#line 20
testRunner.And("добавлена программа капитального ремонта", ((string)(null)), table4, "И ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Code",
                        "OkopfCode"});
            table5.AddRow(new string[] {
                        "тест",
                        "тест",
                        "тест"});
#line 24
testRunner.And("добавлена организационно-правовая форма", ((string)(null)), table5, "И ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table6.AddRow(new string[] {
                        "111"});
#line 28
testRunner.And("добавлен контрагент c текущей организационно-правовой формой", ((string)(null)), table6, "И ");
#line 32
testRunner.And("добавлена подрядная организация c текущим контрагентом", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 34
testRunner.And("добавлен новый объект капитального ремонта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "DocumentName"});
            table7.AddRow(new string[] {
                        "тестовый договор подряда"});
#line 36
testRunner.And("добавлен новый договор подряда в текущий объект КР с текущей подрядной организаци" +
                    "ей", ((string)(null)), table7, "И ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Surname",
                        "FirstName",
                        "secondName",
                        "BirthDate",
                        "IdentityType",
                        "IdentitySerial",
                        "IdentityNumber"});
            table8.AddRow(new string[] {
                        "тест",
                        "тест",
                        "тест",
                        "12.06.1961",
                        "10",
                        "9206",
                        "612345"});
#line 40
testRunner.Given("добавлен абонент типа Счет физ.лица", ((string)(null)), table8, "Дано ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "region",
                        "OpenDate",
                        "RealityObjectAddress",
                        "RoomNum",
                        "AreaShare"});
            table9.AddRow(new string[] {
                        "testregion",
                        "01.01.2015",
                        "с. Никольское ул. 50 лет Октября, д. test",
                        "1",
                        "1"});
#line 44
testRunner.And("добавлено помещение абоненту типа Счет физ.лица", ((string)(null)), table9, "И ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "state"});
            table10.AddRow(new string[] {
                        "Требует формирование искового заявления"});
#line 49
testRunner.Given("добавлена запись в разделе Подрядчики, нарушившие условия договора", ((string)(null)), table10, "Дано ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "state"});
            table11.AddRow(new string[] {
                        "Требует формирование искового заявления"});
#line 53
testRunner.Given("добавлена запись в разделе Реестр неплательщиков", ((string)(null)), table11, "Дано ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удаление документов из основания в реестре \"Реестр неплательщиков\"")]
        [NUnit.Framework.TestCaseAttribute("Уведомление", null)]
        [NUnit.Framework.TestCaseAttribute("Претенезия", null)]
        [NUnit.Framework.TestCaseAttribute("Исковое заявление", null)]
        public virtual void УдалениеДокументовИзОснованияВРеестреРеестрНеплательщиков(string документ, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удаление документов из основания в реестре \"Реестр неплательщиков\"", exampleTags);
#line 57
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 58
testRunner.Given("пользователь указывает в настройках Настройки реестра неплательщиков - Физ. лицо " +
                    "в поле Документ уведомления значение \"Формировать\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 59
testRunner.And("пользователь указывает в настройках Настройки реестра неплательщиков - Физ. лицо " +
                    "в поле Документ претензии значение \"Формировать\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 60
testRunner.Given(string.Format("в карточке основания в Реестре неплательщиков пользователь формирует документ - \"" +
                        "{0}\"", документ), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 61
testRunner.When(string.Format("пользователь из карточки основания в Реестре неплательщиков удаляет этот документ" +
                        " - \"{0}\"", документ), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 62
testRunner.Then(string.Format("этот документ - \"{0}\" отсутствует в карточке основания в Реестре неплательщиков", документ), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удаление документов из основания в реестре \"Подрядчики, нарушившие условия догово" +
            "ра\"")]
        [NUnit.Framework.TestCaseAttribute("Уведомление", null)]
        [NUnit.Framework.TestCaseAttribute("Претенезия", null)]
        [NUnit.Framework.TestCaseAttribute("Акт выявления нарушений", null)]
        [NUnit.Framework.TestCaseAttribute("Исковое заявление", null)]
        public virtual void УдалениеДокументовИзОснованияВРеестреПодрядчикиНарушившиеУсловияДоговора(string документ, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удаление документов из основания в реестре \"Подрядчики, нарушившие условия догово" +
                    "ра\"", exampleTags);
#line 70
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 71
testRunner.Given("пользователь указывает в настройках реестра подрядчиков в поле Акт выявления нару" +
                    "шений значение \"Формировать\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 72
testRunner.And("пользователь указывает в настройках реестра подрядчиков в поле Документ уведомлен" +
                    "ия значение \"Формировать\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 73
testRunner.Given(string.Format("в карточке основания в Подрядчиках, нарушивших условия договора пользователь форм" +
                        "ирует документ - \"{0}\"", документ), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 74
testRunner.When(string.Format("пользователь из карточки основания в реестре Подрядчики, нарушившие условия догов" +
                        "ора удаляет этот документ - \"{0}\"", документ), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 75
testRunner.Then(string.Format("этот документ - \"{0}\" отсутствует в карточке основания в реестре Подрядчики, нару" +
                        "шившие условия договора", документ), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удачное удаление документа Исковое заявление с привязанным документом из реестра " +
            "\"Реестр неплательщиков\"")]
        public virtual void УдачноеУдалениеДокументаИсковоеЗаявлениеСПривязаннымДокументомИзРеестраРеестрНеплательщиков()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удачное удаление документа Исковое заявление с привязанным документом из реестра " +
                    "\"Реестр неплательщиков\"", ((string[])(null)));
#line 84
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 85
testRunner.Given("в карточке основания в Реестре неплательщиков пользователь формирует документ - \"" +
                    "Исковое заявление\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 86
testRunner.And("пользователь в это Исковое заявление добавляет запись по документу", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 87
testRunner.And("у этой записи по документу Искового заявления заполняет поле Документ \"тестовый д" +
                    "окумент\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 88
testRunner.And("у этой записи по документу Искового заявления заполняет поле Дата \"12.05.2015\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 89
testRunner.When("пользователь сохраняет эту запись по документу Искового заявления", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 90
testRunner.When("пользователь из карточки основания в Реестре неплательщиков удаляет этот документ" +
                    " - \"Исковое заявление\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 91
testRunner.Then("этот документ - \"Исковое заявление\" отсутствует в карточке основания в Реестре не" +
                    "плательщиков", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное удаление документа Исковое заявление с привязанным документом из реестр" +
            "а \"Подрядчики, нарушившие условия договора\"")]
        public virtual void НеудачноеУдалениеДокументаИсковоеЗаявлениеСПривязаннымДокументомИзРеестраПодрядчикиНарушившиеУсловияДоговора()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное удаление документа Исковое заявление с привязанным документом из реестр" +
                    "а \"Подрядчики, нарушившие условия договора\"", ((string[])(null)));
#line 93
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 94
testRunner.Given("в карточке основания в Подрядчиках, нарушивших условия договора пользователь форм" +
                    "ирует документ - \"Исковое заявление\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 95
testRunner.And("пользователь в это Исковое заявление добавляет запись по документу", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 96
testRunner.And("у этой записи по документу Искового заявления заполняет поле Документ \"тестовый д" +
                    "окумент\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 97
testRunner.And("у этой записи по документу Искового заявления заполняет поле Дата \"12.05.2015\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 98
testRunner.When("пользователь сохраняет эту запись по документу Искового заявления", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 99
testRunner.When("пользователь из карточки основания в реестре Подрядчики, нарушившие условия догов" +
                    "ора удаляет этот документ - \"Исковое заявление\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 100
testRunner.Then("этот документ - \"Исковое заявление\" отсутствует в карточке основания в реестре По" +
                    "дрядчики, нарушившие условия договора", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
