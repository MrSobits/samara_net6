// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Bars.Gkh.Qa.TestScenarios
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("добавление категории льготы к лицевому счету")]
    [NUnit.Framework.CategoryAttribute("ScenarioInTransaction")]
    public partial class ДобавлениеКатегорииЛьготыКЛицевомуСчетуFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "add_privileged_category_to_persAcc.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "добавление категории льготы к лицевому счету", "Региональный фонд - Счета - Ресстр лицевых счетов - Карточка лицевого счета - вкл" +
                    "адка \"Категория льготы\"", ProgrammingLanguage.CSharp, new string[] {
                        "ScenarioInTransaction"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
#line 6
testRunner.Given("пользователь добавляет новую категорию льготы к лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное добавление категории льготы")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void УспешноеДобавлениеКатегорииЛьготы()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное добавление категории льготы", new string[] {
                        "ignore"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 10
testRunner.Given("пользователь у этой категории льготы заполняет поле Льготная категория \"льгота\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 11
testRunner.And("пользователь у этой категории льготы заполняет поле Действует с \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 12
testRunner.And("пользователь у этой категории льготы заполняет поле Действует по \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 13
testRunner.When("пользователь сохраняет эту категорию льготы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 14
testRunner.Then("запись по этой категории льготы присутствует в списке категорий льгот у этого лиц" +
                    "евого счета", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное удаление категории льготы")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void УспешноеУдалениеКатегорииЛьготы()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное удаление категории льготы", new string[] {
                        "ignore"});
#line 17
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 18
testRunner.Given("пользователь у этой категории льготы заполняет поле Льготная категория \"льгота\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 19
testRunner.And("пользователь у этой категории льготы заполняет поле Действует с \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 20
testRunner.And("пользователь у этой категории льготы заполняет поле Действует по \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 21
testRunner.When("пользователь сохраняет эту категорию льготы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 22
testRunner.And("пользователь удаляет эту категорию льготы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 23
testRunner.Then("запись по этой категории льготы отсутствует в списке категорий льгот у этого лице" +
                    "вого счета", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление категории льготы с пустым полем \"Льготная категория\"")]
        public virtual void НеудачноеДобавлениеКатегорииЛьготыСПустымПолемЛьготнаяКатегория()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление категории льготы с пустым полем \"Льготная категория\"", ((string[])(null)));
#line 27
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 28
testRunner.Given("пользователь у этой категории льготы заполняет поле Действует с \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 29
testRunner.And("пользователь у этой категории льготы заполняет поле Действует по \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 30
testRunner.When("пользователь сохраняет эту категорию льготы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 31
testRunner.And("пользователь удаляет эту категорию льготы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 32
testRunner.Then("падает ошибка с текстом \"Не заполнены обязательные поля: Льготная категория\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление категории льготы с пустыми полями")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void НеудачноеДобавлениеКатегорииЛьготыСПустымиПолями()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление категории льготы с пустыми полями", new string[] {
                        "ignore"});
#line 36
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 37
testRunner.When("пользователь сохраняет эту категорию льготы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 38
testRunner.And("пользователь удаляет эту категорию льготы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 39
testRunner.Then("запись по этой категории льготы отсутствует в списке категорий льгот у этого лице" +
                    "вого счета", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 40
testRunner.And("падает ошибка с текстом \"Не заполнены обязательные поля: Льготная категория, Дейс" +
                    "твует с\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
