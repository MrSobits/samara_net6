// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Bars.Gkh.Qa.TestScenarios
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("тесткейсы граничных значений для раздела \"Конструктивные элементы\"")]
    [NUnit.Framework.CategoryAttribute("ScenarioInTransaction")]
    public partial class ТесткейсыГраничныхЗначенийДляРазделаКонструктивныеЭлементыFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "constructive_elements_boundaries.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "тесткейсы граничных значений для раздела \"Конструктивные элементы\"", "Справочники - Жилищно-коммунальное хозяйство - Конструктивные элементы", ProgrammingLanguage.CSharp, new string[] {
                        "ScenarioInTransaction"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table1.AddRow(new string[] {
                        "группа конструктивных элементов тест"});
#line 6
testRunner.Given("добавлена группа конструктивных элементов", ((string)(null)), table1, "Дано ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление конструктивного элемента при незаполненном обязательном поле" +
            " Наименование")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void НеудачноеДобавлениеКонструктивногоЭлементаПриНезаполненномОбязательномПолеНаименование()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление конструктивного элемента при незаполненном обязательном поле" +
                    " Наименование", new string[] {
                        "ignore"});
#line 11
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 12
testRunner.Given("пользователь добавляет новый конструктивный элемент", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 13
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Код \"234\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 14
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Группа", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 15
testRunner.When("пользователь сохраняет этот конструктивный элемент", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 16
testRunner.Then("запись по этому конструктивному элементу не сохраняется и падает ошибка с текстом" +
                    " \"Не заполнено обязательное поле Наименование\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление конструктивного элемента при незаполненном обязательном поле" +
            " Группа")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void НеудачноеДобавлениеКонструктивногоЭлементаПриНезаполненномОбязательномПолеГруппа()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление конструктивного элемента при незаполненном обязательном поле" +
                    " Группа", new string[] {
                        "ignore"});
#line 19
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 20
testRunner.Given("пользователь добавляет новый конструктивный элемент", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 21
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Наименование \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 22
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Код \"234\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 23
testRunner.When("пользователь сохраняет этот конструктивный элемент", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 24
testRunner.Then("запись по этому конструктивному элементу не сохраняется и падает ошибка с текстом" +
                    " \"Не заполнено обязательное поле Группа\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление конструктивного элемента при незаполненном обязательном поле" +
            " Код")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void НеудачноеДобавлениеКонструктивногоЭлементаПриНезаполненномОбязательномПолеКод()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление конструктивного элемента при незаполненном обязательном поле" +
                    " Код", new string[] {
                        "ignore"});
#line 27
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 28
testRunner.Given("пользователь добавляет новый конструктивный элемент", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 29
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Наименование \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 30
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Группа", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 31
testRunner.When("пользователь сохраняет этот конструктивный элемент", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 32
testRunner.Then("запись по этому конструктивному элементу не сохраняется и падает ошибка с текстом" +
                    " \"Не заполнено обязательное поле Код\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удачное добавление конструктивного элемента при вводе граничных условий в 300 зна" +
            "ков, Наименование")]
        public virtual void УдачноеДобавлениеКонструктивногоЭлементаПриВводеГраничныхУсловийВ300ЗнаковНаименование()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удачное добавление конструктивного элемента при вводе граничных условий в 300 зна" +
                    "ков, Наименование", ((string[])(null)));
#line 34
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 35
testRunner.Given("пользователь добавляет новый конструктивный элемент", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 36
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Наименование 300 сим" +
                    "волов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 37
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Код \"234\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 38
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Группа", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 39
testRunner.When("пользователь сохраняет этот конструктивный элемент", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 40
testRunner.Then("запись по этому конструктивному элементу присутствует в реестре конструктивных эл" +
                    "ементов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление конструктивного элемента при вводе граничных условий в 301 з" +
            "наков, Наименование")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void НеудачноеДобавлениеКонструктивногоЭлементаПриВводеГраничныхУсловийВ301ЗнаковНаименование()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление конструктивного элемента при вводе граничных условий в 301 з" +
                    "наков, Наименование", new string[] {
                        "ignore"});
#line 43
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 44
testRunner.Given("пользователь добавляет новый конструктивный элемент", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 45
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Наименование 301 сим" +
                    "волов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 46
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Код \"234\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 47
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Группа", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 48
testRunner.When("пользователь сохраняет этот конструктивный элемент", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 49
testRunner.Then("запись по этому конструктивному элементу не сохраняется и падает ошибка с текстом" +
                    " \"значение не умещается в тип character varying(300)\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удачное добавление конструктивного элемента при вводе граничных условий в 300 зна" +
            "ков, Код")]
        public virtual void УдачноеДобавлениеКонструктивногоЭлементаПриВводеГраничныхУсловийВ300ЗнаковКод()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удачное добавление конструктивного элемента при вводе граничных условий в 300 зна" +
                    "ков, Код", ((string[])(null)));
#line 51
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 52
testRunner.Given("пользователь добавляет новый конструктивный элемент", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 53
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Наименование \"констр" +
                    "уктивный элемент тест11\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 54
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Код 300 символов \"1\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 55
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Группа", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 56
testRunner.When("пользователь сохраняет этот конструктивный элемент", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 57
testRunner.Then("запись по этому конструктивному элементу присутствует в реестре конструктивных эл" +
                    "ементов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление конструктивного элемента при вводе граничных условий в 301 з" +
            "наков, Код")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void НеудачноеДобавлениеКонструктивногоЭлементаПриВводеГраничныхУсловийВ301ЗнаковКод()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление конструктивного элемента при вводе граничных условий в 301 з" +
                    "наков, Код", new string[] {
                        "ignore"});
#line 60
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 61
testRunner.Given("пользователь добавляет новый конструктивный элемент", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 62
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Наименование \"констр" +
                    "уктивный элемент тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 63
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Код 301 символов \"1\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 64
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Группа", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 65
testRunner.When("пользователь сохраняет этот конструктивный элемент", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 66
testRunner.Then("запись по этому конструктивному элементу не сохраняется и падает ошибка с текстом" +
                    " \"Не заполнены обязательные поля: Код\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
