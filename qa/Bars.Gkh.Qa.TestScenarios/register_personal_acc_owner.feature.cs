// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Bars.Gkh.Qa.TestScenarios
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("тесткейсы для раздела \"Реестр абонентов\"")]
    [NUnit.Framework.CategoryAttribute("ScenarioInTransaction")]
    public partial class ТесткейсыДляРазделаРеестрАбонентовFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "register_personal_acc_owner.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "тесткейсы для раздела \"Реестр абонентов\"", "Региональный фонд - Абоненты - Реестр абонентов", ProgrammingLanguage.CSharp, new string[] {
                        "ScenarioInTransaction"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Code",
                        "Name",
                        "Percent",
                        "LimitArea",
                        "DateFrom"});
            table1.AddRow(new string[] {
                        "222",
                        "льготная категория 1111",
                        "13",
                        "132",
                        "01.01.2017"});
#line 6
testRunner.Given("добавлена льготная категория", ((string)(null)), table1, "Дано ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "region",
                        "houseType",
                        "city",
                        "street",
                        "houseNumber"});
            table2.AddRow(new string[] {
                        "testregion",
                        "Многоквартирный",
                        "Камчатский край, Алеутский р-н, с. Никольское",
                        "ул. 50 лет Октября",
                        "1131"});
#line 10
testRunner.And("в реестр жилых домов добавлен новый дом", ((string)(null)), table2, "И ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoomNum",
                        "Area",
                        "LivingArea",
                        "Type",
                        "OwnershipType"});
            table3.AddRow(new string[] {
                        "1",
                        "51",
                        "35",
                        "Жилое",
                        "Частная"});
#line 14
testRunner.And("у этого дома добавлено помещение", ((string)(null)), table3, "И ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Code",
                        "OkopfCode"});
            table4.AddRow(new string[] {
                        "тест",
                        "тест",
                        "тест"});
#line 18
testRunner.Given("добавлена организационно-правовая форма", ((string)(null)), table4, "Дано ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table5.AddRow(new string[] {
                        "тест"});
#line 22
testRunner.Given("добавлен контрагент с организационно правовой формой", ((string)(null)), table5, "Дано ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное добавление абонента с типом \"Счет физ.лица\"")]
        public virtual void УспешноеДобавлениеАбонентаСТипомСчетФиз_Лица()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное добавление абонента с типом \"Счет физ.лица\"", ((string[])(null)));
#line 26
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 27
testRunner.Given("пользователь добавляет абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 28
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Льготная категори" +
                    "я", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 29
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Фамилия \"Оборин\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 30
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Имя \"Сергей\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 31
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Отчество \"Иванови" +
                    "ч\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 32
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Дата рождения \"12" +
                    ".06.1961\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 33
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Тип документа \"Па" +
                    "спорт\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 34
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Серия документа \"" +
                    "9206\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 35
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Номер документа \"" +
                    "612345\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 36
testRunner.When("пользователь сохраняет этого абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 37
testRunner.Then("запись по этому абоненту присутствует в разделе абонентов типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное добавление абонента с типом \"Счет юр.лица\"")]
        public virtual void УспешноеДобавлениеАбонентаСТипомСчетЮр_Лица()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное добавление абонента с типом \"Счет юр.лица\"", ((string[])(null)));
#line 39
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 40
testRunner.Given("пользователь добавляет абонента типа Счет юр.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 41
testRunner.And("пользователь у этого абонента типа Счет юр.лица заполняет поле Льготная категория" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 42
testRunner.And("пользователь у этого абонента типа Счет юр.лица заполняет поле Контрагент", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 46
testRunner.And("пользователь у этого абонента типа Счет юр.лица заполняет поле Печатать акт при п" +
                    "ечати документов на оплату \"false\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 47
testRunner.When("пользователь сохраняет этого абонента типа Счет юр.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 48
testRunner.Then("запись по этому абоненту присутствует в разделе абонентов типа Счет юр.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное удаление абонента с типом \"Счет физ.лица\"")]
        public virtual void УспешноеУдалениеАбонентаСТипомСчетФиз_Лица()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное удаление абонента с типом \"Счет физ.лица\"", ((string[])(null)));
#line 50
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 51
testRunner.Given("пользователь добавляет абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 52
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Льготная категори" +
                    "я", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 53
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Фамилия \"Оборин\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 54
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Имя \"Сергей\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 55
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Отчество \"Иванови" +
                    "ч\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 56
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Дата рождения \"12" +
                    ".06.1961\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 57
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Тип документа \"Па" +
                    "спорт\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 58
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Серия документа \"" +
                    "9206\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 59
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Номер документа \"" +
                    "612345\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 60
testRunner.When("пользователь сохраняет этого абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 61
testRunner.And("пользователь удаляет этого абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 62
testRunner.Then("запись по этому абоненту отсутствует в разделе абонентов типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное удаление абонента с типом \"Счет юр.лица\"")]
        public virtual void УспешноеУдалениеАбонентаСТипомСчетЮр_Лица()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное удаление абонента с типом \"Счет юр.лица\"", ((string[])(null)));
#line 64
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 65
testRunner.Given("пользователь добавляет абонента типа Счет юр.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 66
testRunner.And("пользователь у этого абонента типа Счет юр.лица заполняет поле Льготная категория" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 67
testRunner.And("пользователь у этого абонента типа Счет юр.лица заполняет поле Контрагент", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 71
testRunner.And("пользователь у этого абонента типа Счет юр.лица заполняет поле Печатать акт при п" +
                    "ечати документов на оплату \"false\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 72
testRunner.When("пользователь сохраняет этого абонента типа Счет юр.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 73
testRunner.Then("запись по этому абоненту присутствует в разделе абонентов типа Счет юр.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 74
testRunner.And("пользователь удаляет этого абонента Тип абонента Счет юр.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 75
testRunner.Then("запись по этому абоненту отсутствует в разделе абонентов Тип абонента Счет юр.лиц" +
                    "а", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное добавление помещения к абоненту типа Счет физ.лица")]
        public virtual void УспешноеДобавлениеПомещенияКАбонентуТипаСчетФиз_Лица()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное добавление помещения к абоненту типа Счет физ.лица", ((string[])(null)));
#line 77
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 78
testRunner.Given("пользователь добавляет абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 79
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Льготная категори" +
                    "я", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 80
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Фамилия \"Оборин\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 81
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Имя \"Сергей\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 82
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Отчество \"Иванови" +
                    "ч\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 83
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Дата рождения \"12" +
                    ".06.1961\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 84
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Тип документа \"Па" +
                    "спорт\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 85
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Серия документа \"" +
                    "9206\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 86
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Номер документа \"" +
                    "612345\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 87
testRunner.When("пользователь сохраняет этого абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 88
testRunner.Given("пользователь добавляет запись по сведению о помещении абоненту типа Счет физ.лица" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Допустим ");
#line 89
testRunner.And("пользователь у этой записи по сведению о помещении заполняет поле Дата открытия Л" +
                    "С \"01.01.2015\" абоненту типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 90
testRunner.And("пользователь у этой записи по сведению о помещении заполняет поле Жилой дом абоне" +
                    "нту типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 91
testRunner.And("пользователь у этой записи по сведению о помещении заполняет поле № квартиры/поме" +
                    "щения абоненту типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 92
testRunner.And("у этого № квартиры/помещения заполняет поле Доля собственности \"1\" абоненту типа " +
                    "Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 93
testRunner.When("пользователь сохраняет эту запись по сведению о помещении абоненту типа Счет физ." +
                    "лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 94
testRunner.Then("запись по этому сведению о помещении присутствует в сведениях о помещении по этом" +
                    "у абоненту типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 95
testRunner.And("Не выпало не одной ошибки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное добавление дубля абонента с типом \"Счет физ.лица\"")]
        public virtual void УспешноеДобавлениеДубляАбонентаСТипомСчетФиз_Лица()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное добавление дубля абонента с типом \"Счет физ.лица\"", ((string[])(null)));
#line 97
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 98
testRunner.Given("пользователь добавляет абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 99
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Льготная категори" +
                    "я", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 100
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Фамилия \"Оборин\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 101
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Имя \"Сергей\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 102
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Отчество \"Иванови" +
                    "ч\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 103
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Дата рождения \"12" +
                    ".06.1961\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 104
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Тип документа \"Па" +
                    "спорт\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 105
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Серия документа \"" +
                    "9206\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 106
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Номер документа \"" +
                    "612345\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 107
testRunner.When("пользователь сохраняет этого абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 108
testRunner.Given("пользователь добавляет абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 109
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Льготная категори" +
                    "я", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 110
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Фамилия \"Оборин\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 111
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Имя \"Сергей\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 112
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Отчество \"Иванови" +
                    "ч\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 113
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Дата рождения \"12" +
                    ".06.1961\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 114
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Тип документа \"Па" +
                    "спорт\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 115
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Серия документа \"" +
                    "9206\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 116
testRunner.And("пользователь у этого абонента типа Счет физ.лица заполняет поле Номер документа \"" +
                    "612345\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 117
testRunner.When("пользователь сохраняет этого абонента типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 118
testRunner.Then("запись по этому абоненту присутствует в разделе абонентов типа Счет физ.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное добавление дубля абонента с типом \"Счет юр.лица\"")]
        public virtual void УспешноеДобавлениеДубляАбонентаСТипомСчетЮр_Лица()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное добавление дубля абонента с типом \"Счет юр.лица\"", ((string[])(null)));
#line 120
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 121
testRunner.Given("пользователь добавляет абонента типа Счет юр.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 122
testRunner.And("пользователь у этого абонента типа Счет юр.лица заполняет поле Льготная категория" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 123
testRunner.And("пользователь у этого абонента типа Счет юр.лица заполняет поле Контрагент", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 127
testRunner.And("пользователь у этого абонента типа Счет юр.лица заполняет поле Печатать акт при п" +
                    "ечати документов на оплату \"false\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 128
testRunner.When("пользователь сохраняет этого абонента типа Счет юр.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 129
testRunner.Given("пользователь добавляет абонента типа Счет юр.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 130
testRunner.And("пользователь у этого абонента типа Счет юр.лица заполняет поле Контрагент", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 134
testRunner.When("пользователь сохраняет этого абонента типа Счет юр.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 135
testRunner.Then("запись по этому абоненту присутствует в разделе абонентов типа Счет юр.лица", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
