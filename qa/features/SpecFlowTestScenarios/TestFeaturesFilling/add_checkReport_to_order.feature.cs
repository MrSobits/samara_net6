// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.3.0
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TestFeaturesFilling
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.3.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("тесткейсы для добавления акта проверки к приказу в разделе \"Плановые проверки юри" +
        "дических лиц\"")]
    public partial class ТесткейсыДляДобавленияАктаПроверкиКПриказуВРазделеПлановыеПроверкиЮридическихЛицFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "add_checkReport_to_order.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "тесткейсы для добавления акта проверки к приказу в разделе \"Плановые проверки юри" +
                    "дических лиц\"", "Жилищная инспекция - Основания проверок - Плановые проверки юридических лиц - При" +
                    "каз - Акт проверки", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Code",
                        "OkopfCode"});
            table1.AddRow(new string[] {
                        "тест",
                        "тест",
                        "тест"});
#line 6
testRunner.Given("добавлена организационно-правовая форма", ((string)(null)), table1, "Дано ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "OrganizationForm"});
            table2.AddRow(new string[] {
                        "тестовый контрагент",
                        "тест"});
#line 10
testRunner.And("добавлен контрагент с этой организационно-правовой формой", ((string)(null)), table2, "И ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Contragent",
                        "Description"});
            table3.AddRow(new string[] {
                        "тестовый контрагент",
                        "тест"});
#line 14
testRunner.And("добавлена управляющая организация для этого контрагента", ((string)(null)), table3, "И ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "DateStart",
                        "DateEnd"});
            table4.AddRow(new string[] {
                        "тестовый план мероприятий",
                        "01.01.2015",
                        ""});
#line 18
testRunner.And("добавлен план мероприятий", ((string)(null)), table4, "И ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Code",
                        "Fio"});
            table5.AddRow(new string[] {
                        "159",
                        "Тестовый инспектор"});
#line 22
testRunner.And("добавлен инспектор", ((string)(null)), table5, "И ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "TypeJurPerson",
                        "Contragent",
                        "Plan",
                        "DateStart",
                        "JurPersonInspectors"});
            table6.AddRow(new string[] {
                        "JurPersonInspectors",
                        "тестовый контрагент",
                        "тестовый план мероприятий",
                        "текущая дата",
                        "Тестовый инспектор"});
#line 26
testRunner.And("добавлена плановая проверка юридических лиц", ((string)(null)), table6, "И ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table7.AddRow(new string[] {
                        "1тестовое нарушение"});
#line 30
testRunner.And("добавлено нарушение", ((string)(null)), table7, "И ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table8.AddRow(new string[] {
                        "1тестовая группа нарушений"});
#line 34
testRunner.And("добавлена группа нарушений", ((string)(null)), table8, "И ");
#line 38
testRunner.And("добавлено это нарушение к этой группе нарушений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 39
testRunner.And("пользователь у этой плановой проверки юридических лиц формирует приказ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 40
testRunner.And("пользователь у этого приказа формирует акт проверки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 41
testRunner.And("пользователь у этого акта проверки заполняет поле Дата \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 42
testRunner.And("пользователь у этого акта проверки заполняет поле С копией приказа ознакомлен \"те" +
                    "ст\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 43
testRunner.And("пользователь у этого акта проверки заполняет поле Площадь \"51\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное добавление акта проверки к приказу")]
        public virtual void УспешноеДобавлениеАктаПроверкиКПриказу()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное добавление акта проверки к приказу", ((string[])(null)));
#line 45
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 46
testRunner.When("пользователь сохраняет этот акт проверки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 47
testRunner.Then("у этой плановой проверки юридических лиц присутствует акт проверки в списке разде" +
                    "лов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление результата проверки с результатом Нарушения выявлены = да бе" +
            "з добавления нарушений")]
        public virtual void НеудачноеДобавлениеРезультатаПроверкиСРезультатомНарушенияВыявленыДаБезДобавленияНарушений()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление результата проверки с результатом Нарушения выявлены = да бе" +
                    "з добавления нарушений", ((string[])(null)));
#line 49
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 50
testRunner.When("пользователь сохраняет этот акт проверки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 51
testRunner.And("пользователь в редактирует результат проверки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 52
testRunner.And("пользователь у этого результата проверки заполняет поле Нарушения выявлены \"текущ" +
                    "ая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 53
testRunner.When("пользователь сохраняет этот результат проверки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 54
testRunner.Then("у этого акта проверки запись по результату проверки отсутствует в списке результа" +
                    "тов проверки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 55
testRunner.And("выводится сообщение об ошибке с текстом \"Если нарушения выявлены, то необходимо в" +
                    " таблице нарушений добавить записи нарушений\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное добавление результата проверки с результатом Нарушения выявлены = да с д" +
            "обавлением нарушений")]
        public virtual void УспешноеДобавлениеРезультатаПроверкиСРезультатомНарушенияВыявленыДаСДобавлениемНарушений()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное добавление результата проверки с результатом Нарушения выявлены = да с д" +
                    "обавлением нарушений", ((string[])(null)));
#line 57
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 58
testRunner.When("пользователь сохраняет этот акт проверки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 59
testRunner.And("пользователь в редактирует результат проверки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 60
testRunner.And("пользователь у этого результата проверки заполняет поле Нарушения выявлены \"текущ" +
                    "ая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 61
testRunner.And("пользователь у этого результата проверки добавляет это нарушение из этой группы н" +
                    "арушений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 62
testRunner.When("пользователь сохраняет этот результат проверки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 63
testRunner.Then("у этого акта проверки запись по результату проверки присутствует в списке результ" +
                    "атов проверки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 64
testRunner.And("выводится сообщение с текстом \"Результаты проверки сохранены успешно\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
