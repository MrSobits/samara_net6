// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.3.0
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TestFeaturesFilling
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.3.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("тесткейсы граничных значений для раздела \"Виды работ текущего ремонта\"")]
    public partial class ТесткейсыГраничныхЗначенийДляРазделаВидыРаботТекущегоРемонтаFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "work_kinds_current_repair_boundaries.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "тесткейсы граничных значений для раздела \"Виды работ текущего ремонта\"", "Справочники - Жилищно-коммунальное хозяйство - Виды работ текущего ремонта", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление вида работы текущего ремонта при незаполненных обязательных " +
            "полях")]
        public virtual void НеудачноеДобавлениеВидаРаботыТекущегоРемонтаПриНезаполненныхОбязательныхПолях()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление вида работы текущего ремонта при незаполненных обязательных " +
                    "полях", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
testRunner.Given("пользователь добавляет новый вид работы текущего ремонта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 8
testRunner.When("пользователь сохраняет этот вид работы текущего ремонта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 9
testRunner.Then("запись по этому виду работы текущего ремонта не сохраняется и падает ошибка с тек" +
                    "стом \"Не заполнены обязательные поля: Код Наименование Ед. измерения\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удачное добавление вида работы текущего ремонта при вводе граничных условий в 300" +
            " знаков, Код")]
        public virtual void УдачноеДобавлениеВидаРаботыТекущегоРемонтаПриВводеГраничныхУсловийВ300ЗнаковКод()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удачное добавление вида работы текущего ремонта при вводе граничных условий в 300" +
                    " знаков, Код", ((string[])(null)));
#line 11
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "ShortName",
                        "Description"});
            table1.AddRow(new string[] {
                        "тест",
                        "тест",
                        "тест"});
#line 12
testRunner.Given("добавлена единица измерения", ((string)(null)), table1, "Дано ");
#line 16
testRunner.Given("пользователь добавляет новый вид работы текущего ремонта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 17
testRunner.And("пользователь у этого вида работы текущего ремонта заполняет поле Код 300 символов" +
                    " \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 18
testRunner.And("пользователь у этого вида работы текущего ремонта заполняет поле Наименование \"ви" +
                    "д работы текущего ремонта тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 19
testRunner.And("пользователь у этого вида работы текущего ремонта заполняет поле Ед. измерения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 20
testRunner.When("пользователь сохраняет этот вид работы текущего ремонта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 21
testRunner.Then("запись по этому виду работы текущего ремонта присутствует в справочнике видов раб" +
                    "от текущего ремонта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление вида работы текущего ремонта при вводе граничных условий в 3" +
            "01 знаков, Код")]
        public virtual void НеудачноеДобавлениеВидаРаботыТекущегоРемонтаПриВводеГраничныхУсловийВ301ЗнаковКод()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление вида работы текущего ремонта при вводе граничных условий в 3" +
                    "01 знаков, Код", ((string[])(null)));
#line 23
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "ShortName",
                        "Description"});
            table2.AddRow(new string[] {
                        "тест",
                        "тест",
                        "тест"});
#line 24
testRunner.Given("добавлена единица измерения", ((string)(null)), table2, "Дано ");
#line 28
testRunner.Given("пользователь добавляет новый вид работы текущего ремонта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 29
testRunner.And("пользователь у этого вида работы текущего ремонта заполняет поле Код 301 символов" +
                    " \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 30
testRunner.And("пользователь у этого вида работы текущего ремонта заполняет поле Наименование \"ви" +
                    "д работы текущего ремонта тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 31
testRunner.And("пользователь у этого вида работы текущего ремонта заполняет поле Ед. измерения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 32
testRunner.When("пользователь сохраняет этот вид работы текущего ремонта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 33
testRunner.Then("запись по этому виду работы текущего ремонта не сохраняется и падает ошибка с тек" +
                    "стом \"Не заполнены обязательные поля: Код\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удачное добавление вида работы текущего ремонта при вводе граничных условий в 300" +
            " знаков, Наименование")]
        public virtual void УдачноеДобавлениеВидаРаботыТекущегоРемонтаПриВводеГраничныхУсловийВ300ЗнаковНаименование()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удачное добавление вида работы текущего ремонта при вводе граничных условий в 300" +
                    " знаков, Наименование", ((string[])(null)));
#line 35
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "ShortName",
                        "Description"});
            table3.AddRow(new string[] {
                        "тест",
                        "тест",
                        "тест"});
#line 36
testRunner.Given("добавлена единица измерения", ((string)(null)), table3, "Дано ");
#line 40
testRunner.Given("пользователь добавляет новый вид работы текущего ремонта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 41
testRunner.And("пользователь у этого вида работы текущего ремонта заполняет поле Код \"вид работы " +
                    "текущего ремонта тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 42
testRunner.And("пользователь у этого вида работы текущего ремонта заполняет поле Наименование 300" +
                    " символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 43
testRunner.And("пользователь у этого вида работы текущего ремонта заполняет поле Ед. измерения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 44
testRunner.When("пользователь сохраняет этот вид работы текущего ремонта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 45
testRunner.Then("запись по этому виду работы текущего ремонта присутствует в справочнике видов раб" +
                    "от текущего ремонта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление вида работы текущего ремонта при вводе граничных условий в 3" +
            "01 знаков, Наименование")]
        public virtual void НеудачноеДобавлениеВидаРаботыТекущегоРемонтаПриВводеГраничныхУсловийВ301ЗнаковНаименование()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление вида работы текущего ремонта при вводе граничных условий в 3" +
                    "01 знаков, Наименование", ((string[])(null)));
#line 47
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "ShortName",
                        "Description"});
            table4.AddRow(new string[] {
                        "тест",
                        "тест",
                        "тест"});
#line 48
testRunner.Given("добавлена единица измерения", ((string)(null)), table4, "Дано ");
#line 52
testRunner.Given("пользователь добавляет новый вид работы текущего ремонта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 53
testRunner.And("пользователь у этого вида работы текущего ремонта заполняет поле Код \"вид работы " +
                    "текущего ремонта тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 54
testRunner.And("пользователь у этого вида работы текущего ремонта заполняет поле Наименование 301" +
                    " символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 55
testRunner.And("пользователь у этого вида работы текущего ремонта заполняет поле Ед. измерения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 56
testRunner.When("пользователь сохраняет этот вид работы текущего ремонта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 57
testRunner.Then("запись по этому виду работы текущего ремонта не сохраняется и падает ошибка с тек" +
                    "стом \"Не заполнены обязательные поля: Наименование\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
