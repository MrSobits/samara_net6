// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.3.0
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TestFeaturesFilling
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.3.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("тесткейсы граничных значений для раздела \"Приборы учета\"")]
    public partial class ТесткейсыГраничныхЗначенийДляРазделаПриборыУчетаFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "metering_devices_boundaries.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "тесткейсы граничных значений для раздела \"Приборы учета\"", "Справочники - Жилищно-коммунальное хозяйство - Приборы учета", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление прибора учета при незаполненных обязательных полях")]
        public virtual void НеудачноеДобавлениеПрибораУчетаПриНезаполненныхОбязательныхПолях()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление прибора учета при незаполненных обязательных полях", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
testRunner.Given("пользователь добавляет новый прибор учета", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 8
testRunner.When("пользователь сохраняет этот прибор учета", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 9
testRunner.Then("запись по этому прибору учета не сохраняется и падает ошибка с текстом \"Не заполн" +
                    "ены обязательные поля: Наименование Класс точности\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удачное добавление прибора учета при вводе граничных условий в 300 знаков, Наимен" +
            "ование")]
        [NUnit.Framework.TestCaseAttribute("Индивидуальный", null)]
        [NUnit.Framework.TestCaseAttribute("Общедомовой", null)]
        public virtual void УдачноеДобавлениеПрибораУчетаПриВводеГраничныхУсловийВ300ЗнаковНаименование(string типУчета, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удачное добавление прибора учета при вводе граничных условий в 300 знаков, Наимен" +
                    "ование", exampleTags);
#line 11
this.ScenarioSetup(scenarioInfo);
#line 12
testRunner.Given("пользователь добавляет новый прибор учета", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 13
testRunner.And("пользователь у этого прибора учета заполняет поле Наименование 300 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 14
testRunner.And("пользователь у этого прибора учета заполняет поле Класс точности \"234\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 15
testRunner.And(string.Format("пользователь у этого прибора учета заполняет поле Тип учета \"{0}\"", типУчета), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 16
testRunner.When("пользователь сохраняет этот прибор учета", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 17
testRunner.Then("запись по этому прибору учета присутствует в справочнике приборов учета", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление прибора учета при вводе граничных условий в 301 знаков, Наим" +
            "енование")]
        [NUnit.Framework.TestCaseAttribute("Индивидуальный", null)]
        [NUnit.Framework.TestCaseAttribute("Общедомовой", null)]
        public virtual void НеудачноеДобавлениеПрибораУчетаПриВводеГраничныхУсловийВ301ЗнаковНаименование(string типУчета, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление прибора учета при вводе граничных условий в 301 знаков, Наим" +
                    "енование", exampleTags);
#line 24
this.ScenarioSetup(scenarioInfo);
#line 25
testRunner.Given("пользователь добавляет новый прибор учета", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 26
testRunner.And("пользователь у этого прибора учета заполняет поле Наименование 301 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 27
testRunner.And("пользователь у этого прибора учета заполняет поле Класс точности \"234\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 28
testRunner.And(string.Format("пользователь у этого прибора учета заполняет поле Тип учета \"{0}\"", типУчета), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 29
testRunner.When("пользователь сохраняет этот прибор учета", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 30
testRunner.Then("запись по этому прибору учета не сохраняется и падает ошибка с текстом \"Не заполн" +
                    "ены обязательные поля: Наименование\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удачное добавление прибора учета при вводе граничных условий в 30 знаков, Класс т" +
            "очности")]
        [NUnit.Framework.TestCaseAttribute("Индивидуальный", null)]
        [NUnit.Framework.TestCaseAttribute("Общедомовой", null)]
        public virtual void УдачноеДобавлениеПрибораУчетаПриВводеГраничныхУсловийВ30ЗнаковКлассТочности(string типУчета, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удачное добавление прибора учета при вводе граничных условий в 30 знаков, Класс т" +
                    "очности", exampleTags);
#line 37
this.ScenarioSetup(scenarioInfo);
#line 38
testRunner.Given("пользователь добавляет новый прибор учета", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 39
testRunner.And("пользователь у этого прибора учета заполняет поле Наименование \"прибор учета тест" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 40
testRunner.And("пользователь у этого прибора учета заполняет поле Класс точности 30 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 41
testRunner.And(string.Format("пользователь у этого прибора учета заполняет поле Тип учета \"{0}\"", типУчета), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 42
testRunner.When("пользователь сохраняет этот прибор учета", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 43
testRunner.Then("запись по этому прибору учета присутствует в справочнике приборов учета", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление прибора учета при вводе граничных условий в 31 знаков, Класс" +
            " точности")]
        [NUnit.Framework.TestCaseAttribute("Индивидуальный", null)]
        [NUnit.Framework.TestCaseAttribute("Общедомовой", null)]
        public virtual void НеудачноеДобавлениеПрибораУчетаПриВводеГраничныхУсловийВ31ЗнаковКлассТочности(string типУчета, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление прибора учета при вводе граничных условий в 31 знаков, Класс" +
                    " точности", exampleTags);
#line 50
this.ScenarioSetup(scenarioInfo);
#line 51
testRunner.Given("пользователь добавляет новый прибор учета", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 52
testRunner.And("пользователь у этого прибора учета заполняет поле Наименование \"прибор учета тест" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 53
testRunner.And("пользователь у этого прибора учета заполняет поле Класс точности 31 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 54
testRunner.And(string.Format("пользователь у этого прибора учета заполняет поле Тип учета \"{0}\"", типУчета), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 55
testRunner.When("пользователь сохраняет этот прибор учета", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 56
testRunner.Then("запись по этому прибору учета не сохраняется и падает ошибка с текстом \"Не заполн" +
                    "ены обязательные поля: Класс точности\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удачное добавление прибора учета при вводе граничных условий в 1000 знаков, Описа" +
            "ние")]
        [NUnit.Framework.TestCaseAttribute("Индивидуальный", null)]
        [NUnit.Framework.TestCaseAttribute("Общедомовой", null)]
        public virtual void УдачноеДобавлениеПрибораУчетаПриВводеГраничныхУсловийВ1000ЗнаковОписание(string типУчета, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удачное добавление прибора учета при вводе граничных условий в 1000 знаков, Описа" +
                    "ние", exampleTags);
#line 63
this.ScenarioSetup(scenarioInfo);
#line 64
testRunner.Given("пользователь добавляет новый прибор учета", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 65
testRunner.And("пользователь у этого прибора учета заполняет поле Наименование \"прибор учета тест" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 66
testRunner.And("пользователь у этого прибора учета заполняет поле Класс точности \"111\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 67
testRunner.And("пользователь у этого прибора учета заполняет поле Описание 1000 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 68
testRunner.And(string.Format("пользователь у этого прибора учета заполняет поле Тип учета \"{0}\"", типУчета), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 69
testRunner.When("пользователь сохраняет этот прибор учета", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 70
testRunner.Then("запись по этому прибору учета присутствует в справочнике приборов учета", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление прибора учета при вводе граничных условий в 1001 знаков, Опи" +
            "сание")]
        [NUnit.Framework.TestCaseAttribute("Индивидуальный", null)]
        [NUnit.Framework.TestCaseAttribute("Общедомовой", null)]
        public virtual void НеудачноеДобавлениеПрибораУчетаПриВводеГраничныхУсловийВ1001ЗнаковОписание(string типУчета, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление прибора учета при вводе граничных условий в 1001 знаков, Опи" +
                    "сание", exampleTags);
#line 77
this.ScenarioSetup(scenarioInfo);
#line 78
testRunner.Given("пользователь добавляет новый прибор учета", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 79
testRunner.And("пользователь у этого прибора учета заполняет поле Наименование \"прибор учета тест" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 80
testRunner.And("пользователь у этого прибора учета заполняет поле Класс точности \"111\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 81
testRunner.And("пользователь у этого прибора учета заполняет поле Описание 1001 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 82
testRunner.And(string.Format("пользователь у этого прибора учета заполняет поле Тип учета \"{0}\"", типУчета), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 83
testRunner.When("пользователь сохраняет этот прибор учета", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 84
testRunner.Then("запись по этому прибору учета не сохраняется и падает ошибка с текстом \"Не заполн" +
                    "ены обязательные поля: Описание\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
