// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.3.0
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TestFeaturesFilling
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.3.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Единые настройки приложения (Региональный оператор)")]
    public partial class ЕдиныеНастройкиПриложенияРегиональныйОператорFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "common_app_settings_regop.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "Единые настройки приложения (Региональный оператор)", "Администрирование - Настройки приложения - Единые настройки приложения - Регионал" +
                    "ьный фонд - Общие", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное распределение средств списываемых со счета дома")]
        public virtual void УспешноеРаспределениеСредствСписываемыхСоСчетаДома()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное распределение средств списываемых со счета дома", ((string[])(null)));
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
testRunner.Given("пользователь в единых настройках приложения заполняет поле Списывать средства за " +
                    "открытие спец счета \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 7
testRunner.When("пользователь сохраняет изменения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 8
testRunner.And("пользователь добавляет новую банковскую операцию", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 9
testRunner.And("пользователь у этой банковской операции заполняет поле Дата документа \"текущая да" +
                    "та\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 10
testRunner.And("пользователь у этой банковской операции заполняет поле Номер документа \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 11
testRunner.And("пользователь у этой банковской операции заполняет поле Сумма \"1000\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 12
testRunner.And("пользователь у этой банковской операции заполняет поле Дата поступления/списания " +
                    "\"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 13
testRunner.Given("пользователь у этой банковской операции заполняет поле Приход/расход \"Расход\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 14
testRunner.And("пользователь у этой банковской операции заполняет поле Р/С \"111\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 15
testRunner.When("пользователь сохраняет эту этой банковскую операцию", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 16
testRunner.When("пользователь производит действие зачисления по кнопке Распределить", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 17
testRunner.And("у этой операции заполнено поле Номер документа \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 18
testRunner.And("у этой операции заполнено поле Сумма \"1000\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 19
testRunner.And("у этой операции заполнено поле Дата документа \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 20
testRunner.And("у этой операции заполнено поле Приход/Расход \"Расход\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 21
testRunner.And("у этой операции заполнено поле Статус \"Не распределена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 22
testRunner.And("пользователь заполняет поле Тип распределения \"Комиссия за ведение счета кредитно" +
                    "й организацией\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 23
testRunner.And("пользователь заполняет поле Вид распределения \"Равномерное\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 24
testRunner.And("пользователь выбирает запись", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 25
testRunner.And("у этой записи заполнено поле Муниципальное образование \"Алеутский муниципальный р" +
                    "айон\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 26
testRunner.And("у этой записи заполнено поле Жилой дом \"с. Никольское, д. 2341\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 27
testRunner.And("у этой записи заполнено поле Площадь дома \"51\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 28
testRunner.When("пользователь производит действие зачисления по кнопке Применить распределение", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 29
testRunner.Then("выходит сообщение \"Распределение выполнено успешно!\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное распределение средств списываемых со счета дома")]
        public virtual void НеудачноеРаспределениеСредствСписываемыхСоСчетаДома()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное распределение средств списываемых со счета дома", ((string[])(null)));
#line 31
this.ScenarioSetup(scenarioInfo);
#line 32
testRunner.Given("пользователь в единых настройках приложения заполняет поле Списывать средства за " +
                    "открытие спец счета \"false\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 33
testRunner.When("пользователь сохраняет изменения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 34
testRunner.And("пользователь добавляет новую банковскую операцию", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 35
testRunner.And("пользователь у этой банковской операции заполняет поле Дата документа \"текущая да" +
                    "та\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 36
testRunner.And("пользователь у этой банковской операции заполняет поле Номер документа \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 37
testRunner.And("пользователь у этой банковской операции заполняет поле Сумма \"1000\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 38
testRunner.And("пользователь у этой банковской операции заполняет поле Дата поступления/списания " +
                    "\"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 39
testRunner.Given("пользователь у этой банковской операции заполняет поле Приход/расход \"Расход\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 40
testRunner.And("пользователь у этой банковской операции заполняет поле Р/С \"111\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 41
testRunner.When("пользователь сохраняет эту этой банковскую операцию", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 42
testRunner.When("пользователь производит действие зачисления по кнопке Распределить", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 43
testRunner.And("у этой операции заполнено поле Номер документа \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 44
testRunner.And("у этой операции заполнено поле Сумма \"1000\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 45
testRunner.And("у этой операции заполнено поле Дата документа \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 46
testRunner.And("у этой операции заполнено поле Приход/Расход \"Расход\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 47
testRunner.And("у этой операции заполнено поле Статус \"Не распределена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 48
testRunner.Then("в списке значений поля Тип распределения нет типа распределения \"Комиссия за веде" +
                    "ние счета кредитной организацией\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешный выбор учета типа домов")]
        [NUnit.Framework.TestCaseAttribute("Автоматический", null)]
        [NUnit.Framework.TestCaseAttribute("Ручной", null)]
        public virtual void УспешныйВыборУчетаТипаДомов(string учет, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешный выбор учета типа домов", exampleTags);
#line 50
this.ScenarioSetup(scenarioInfo);
#line 51
testRunner.Given(string.Format("пользователь в единых настройках приложения заполняет поле Учет типов домов \"{0}\"" +
                        "", учет), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 52
testRunner.When("пользователь сохраняет изменения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 53
testRunner.Then(string.Format("в единых настройках приложения заполнено поле Учет типов домов \"{0}\"", учет), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешный выбор привязки к ркц")]
        [NUnit.Framework.TestCaseAttribute("Автоматический", null)]
        [NUnit.Framework.TestCaseAttribute("Ручной", null)]
        public virtual void УспешныйВыборПривязкиКРкц(string учет, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешный выбор привязки к ркц", exampleTags);
#line 60
this.ScenarioSetup(scenarioInfo);
#line 61
testRunner.Given(string.Format("пользователь в единых настройках приложения заполняет поле Учет типов домов \"{0}\"" +
                        "", учет), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 62
testRunner.When("пользователь сохраняет изменения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 63
testRunner.Then(string.Format("в единых настройках приложения заполнено поле Учет типов домов \"{0}\"", учет), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешный выбор неснижаемого размера фонда")]
        [NUnit.Framework.TestCaseAttribute("0", null)]
        [NUnit.Framework.TestCaseAttribute("100", null)]
        public virtual void УспешныйВыборНеснижаемогоРазмераФонда(string учет, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешный выбор неснижаемого размера фонда", exampleTags);
#line 70
this.ScenarioSetup(scenarioInfo);
#line 71
testRunner.Given("пользователь в единых настройках приложения заполняет поле Неснижаемый размер фон" +
                    "да (%) \"<размер фонда>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 72
testRunner.When("пользователь сохраняет изменения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 73
testRunner.Then("в единых настройках приложения заполнено поле Учет типов домов \"<размер фонда>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачный выбор неснижаемого размера фонда")]
        [NUnit.Framework.TestCaseAttribute("-1", null)]
        [NUnit.Framework.TestCaseAttribute("101", null)]
        public virtual void НеудачныйВыборНеснижаемогоРазмераФонда(string размерФонда, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачный выбор неснижаемого размера фонда", exampleTags);
#line 80
this.ScenarioSetup(scenarioInfo);
#line 81
testRunner.Given(string.Format("пользователь в единых настройках приложения заполняет поле Неснижаемый размер фон" +
                        "да (%) \"{0}\"", размерФонда), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 82
testRunner.When("пользователь сохраняет изменения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 83
testRunner.Then("падает ошибка с текстом \"Не все поля формы заполнены корректно\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная отметка поля Отображение оплаты л/с одним полем")]
        public virtual void УспешнаяОтметкаПоляОтображениеОплатыЛСОднимПолем()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная отметка поля Отображение оплаты л/с одним полем", ((string[])(null)));
#line 90
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
