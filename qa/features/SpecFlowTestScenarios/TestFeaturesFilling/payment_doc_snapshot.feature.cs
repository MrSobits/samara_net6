// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.3.0
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TestFeaturesFilling
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.3.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Реестр документов на оплату")]
    public partial class РеестрДокументовНаОплатуFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "payment_doc_snapshot.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "Реестр документов на оплату", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачная выгрузка документов")]
        public virtual void НеудачнаяВыгрузкаДокументов()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачная выгрузка документов", ((string[])(null)));
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
testRunner.When("пользователь в реестре документов на оплату выгружает документы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 6
testRunner.Then("в реестре документов на оплату отсутствуют записи", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 7
testRunner.And("выходит сообщение об ошибке \"Нет информации по периоду начисления!\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное добавление записи в реестр документов на оплату")]
        public virtual void УспешноеДобавлениеЗаписиВРеестрДокументовНаОплату()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное добавление записи в реестр документов на оплату", ((string[])(null)));
#line 11
this.ScenarioSetup(scenarioInfo);
#line 12
testRunner.Given("пользователь заполняет поле Период \"2014 Август\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 13
testRunner.When("пользователь выгружает документ на оплату для ЛС \"100000834\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 14
testRunner.And("в задачах появляется запись по Формированию документов на оплату", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 15
testRunner.And("у этой записи по закрытию периода заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 16
testRunner.And("у этой записи по закрытию периода заполнено поле Наименование \"Формирование докум" +
                    "ентов на оплату\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 17
testRunner.And("у этой записи по закрытию периода заполнено поле Статус \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 18
testRunner.And("у этой записи по закрытию периода заполнено поле Процент выполнения \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 19
testRunner.And("у этой записи по закрытию периода заполнено поле Ход выполнения \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 20
testRunner.Then("в реестре документов на оплату присутствует запись по этому документу на оплату п" +
                    "о периоду \"2014 Август\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная выгрузка документа на оплату из карточки документа")]
        public virtual void УспешнаяВыгрузкаДокументаНаОплатуИзКарточкиДокумента()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная выгрузка документа на оплату из карточки документа", ((string[])(null)));
#line 24
this.ScenarioSetup(scenarioInfo);
#line 25
testRunner.Given("пользователь заполняет поле Период \"2014 Август\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 26
testRunner.When("пользователь открывает запись с Адресом \"Камчатский край, г. Вилючинск, мкр. Севе" +
                    "рный, д. 12 , кв. 10\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 27
testRunner.When("пользователь выгружает документ из информационной карточки", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 28
testRunner.Then("пользователь скачивает документ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешная выгрузка документов на ftp")]
        public virtual void УспешнаяВыгрузкаДокументовНаFtp()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешная выгрузка документов на ftp", ((string[])(null)));
#line 32
this.ScenarioSetup(scenarioInfo);
#line 33
testRunner.Given("пользователь заполняет поле Период \"2014 Август\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 34
testRunner.When("пользователь выгружает документ на оплату для ЛС \"100000834\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 35
testRunner.And("в задачах появляется запись по Формированию документов на оплату", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 36
testRunner.And("у этой записи по закрытию периода заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 37
testRunner.And("у этой записи по закрытию периода заполнено поле Наименование \"Формирование докум" +
                    "ентов на оплату\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 38
testRunner.And("у этой записи по закрытию периода заполнено поле Статус \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 39
testRunner.And("у этой записи по закрытию периода заполнено поле Процент выполнения \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 40
testRunner.And("у этой записи по закрытию периода заполнено поле Ход выполнения \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 41
testRunner.Then("в реестре документов на оплату присутствует запись по этому документу на оплату п" +
                    "о периоду \"2014 Август\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 42
testRunner.When("пользователь выбирает запись с Адресом \"Камчатский край, г. Вилючинск, мкр. Север" +
                    "ный, д. 12 , кв. 10\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 43
testRunner.And("пользователь выгружает документы в реестре документов на оплату", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 44
testRunner.Then("в задачах появляется запись по Формированию документов на оплату", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 45
testRunner.And("у этой записи по закрытию периода заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 46
testRunner.And("у этой записи по закрытию периода заполнено поле Наименование \"Формирование докум" +
                    "ентов на оплату\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 47
testRunner.And("у этой записи по закрытию периода заполнено поле Статус \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 48
testRunner.And("у этой записи по закрытию периода заполнено поле Процент выполнения \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 49
testRunner.And("у этой записи по закрытию периода заполнено поле Ход выполнения \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Успешное заполнение значений в карточке документа")]
        public virtual void УспешноеЗаполнениеЗначенийВКарточкеДокумента()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Успешное заполнение значений в карточке документа", ((string[])(null)));
#line 51
this.ScenarioSetup(scenarioInfo);
#line 52
testRunner.Given("пользователь заполняет поле Период \"2014 Август\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 53
testRunner.When("пользователь открывает запись с Адресом \"Камчатский край, г. Вилючинск, мкр. Севе" +
                    "рный, д. 12 , кв. 10\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 54
testRunner.Then("у этой карточки документа присутствует запись по лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 55
testRunner.And("у этой записи по лс заполнено поле Номер ЛС \" \"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 56
testRunner.And("у этой записи по лс заполнено поле Адрес помещения \"Камчатский край, г. Вилючинск" +
                    ", мкр. Северный, д. 12 , кв. 10\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 57
testRunner.And("у этой записи по лс заполнено поле Тип помещения \"Жилое\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 58
testRunner.And("у этой записи по лс заполнено поле Площадь помещения \"29,3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 59
testRunner.And("у этой записи по лс заполнено поле Тариф \"6.9\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 60
testRunner.And("у этой записи по лс заполнено поле Наименование работ \"Взносы на КР\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 61
testRunner.And("у этой записи по лс заполнено поле Сумма \"202.17\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное заполнение источников данных у квитанции на оплату")]
        [NUnit.Framework.TestCaseAttribute("AccountId", null)]
        [NUnit.Framework.TestCaseAttribute("OwnerId", null)]
        [NUnit.Framework.TestCaseAttribute("Плательщик", null)]
        [NUnit.Framework.TestCaseAttribute("ФондСпецСчет", null)]
        [NUnit.Framework.TestCaseAttribute("МесяцГодНачисления", null)]
        [NUnit.Framework.TestCaseAttribute("ЛицевойСчет", null)]
        [NUnit.Framework.TestCaseAttribute("АдресКвартиры", null)]
        [NUnit.Framework.TestCaseAttribute("Тариф", null)]
        [NUnit.Framework.TestCaseAttribute("ОбщаяПлощадь", null)]
        [NUnit.Framework.TestCaseAttribute("Итого", null)]
        [NUnit.Framework.TestCaseAttribute("Пени", null)]
        [NUnit.Framework.TestCaseAttribute("НаименованиеПериода", null)]
        [NUnit.Framework.TestCaseAttribute("ДатаДокумента", null)]
        [NUnit.Framework.TestCaseAttribute("ДатаНачалаПериода", null)]
        [NUnit.Framework.TestCaseAttribute("ДатаОкончанияПериода", null)]
        [NUnit.Framework.TestCaseAttribute("ПереплатаНаНачало", null)]
        [NUnit.Framework.TestCaseAttribute("ПереплатаПениНаНачало", null)]
        [NUnit.Framework.TestCaseAttribute("ПереплатаНаКонец", null)]
        [NUnit.Framework.TestCaseAttribute("ДолгНаКонец", null)]
        [NUnit.Framework.TestCaseAttribute("ДолгНаНачало", null)]
        [NUnit.Framework.TestCaseAttribute("Начислено", null)]
        [NUnit.Framework.TestCaseAttribute("НачисленоБазовый", null)]
        [NUnit.Framework.TestCaseAttribute("НачисленоСверхБазового", null)]
        [NUnit.Framework.TestCaseAttribute("НачисленоПени", null)]
        [NUnit.Framework.TestCaseAttribute("Номер", null)]
        [NUnit.Framework.TestCaseAttribute("ПорядковыйНомерВГоду", null)]
        [NUnit.Framework.TestCaseAttribute("Перерасчет", null)]
        [NUnit.Framework.TestCaseAttribute("ПерерасчетБазовый", null)]
        [NUnit.Framework.TestCaseAttribute("ПерерасчетТарифРешения", null)]
        [NUnit.Framework.TestCaseAttribute("ОплаченоБазовый", null)]
        [NUnit.Framework.TestCaseAttribute("ОплаченоТарифРешения", null)]
        [NUnit.Framework.TestCaseAttribute("Оплачено", null)]
        [NUnit.Framework.TestCaseAttribute("ОплаченоПени", null)]
        [NUnit.Framework.TestCaseAttribute("ПереплатаПениНаКонец", null)]
        [NUnit.Framework.TestCaseAttribute("ДолгПениНаКонец", null)]
        [NUnit.Framework.TestCaseAttribute("СуммаВсего", null)]
        [NUnit.Framework.TestCaseAttribute("НаименованиеПолучателя", null)]
        [NUnit.Framework.TestCaseAttribute("ИННСобственника", null)]
        [NUnit.Framework.TestCaseAttribute("КППСобственника", null)]
        [NUnit.Framework.TestCaseAttribute("ИннПолучателя", null)]
        [NUnit.Framework.TestCaseAttribute("КппПолучателя", null)]
        [NUnit.Framework.TestCaseAttribute("ОргнПолучателя", null)]
        [NUnit.Framework.TestCaseAttribute("РсчетПолучателя", null)]
        [NUnit.Framework.TestCaseAttribute("АдресБанка", null)]
        [NUnit.Framework.TestCaseAttribute("НаименованиеБанка", null)]
        [NUnit.Framework.TestCaseAttribute("БикБанка", null)]
        [NUnit.Framework.TestCaseAttribute("КсБанка", null)]
        [NUnit.Framework.TestCaseAttribute("ТелефоныПолучателя", null)]
        [NUnit.Framework.TestCaseAttribute("АдресПолучателя", null)]
        [NUnit.Framework.TestCaseAttribute("EmailПолучателя", null)]
        [NUnit.Framework.TestCaseAttribute("WebSiteПолучателя", null)]
        [NUnit.Framework.TestCaseAttribute("ИтогоКОплате", null)]
        [NUnit.Framework.TestCaseAttribute("Информация", null)]
        [NUnit.Framework.TestCaseAttribute("ЗначениеQRКода", null)]
        [NUnit.Framework.TestCaseAttribute("СоцПоддержка", null)]
        [NUnit.Framework.TestCaseAttribute("ПредоставленнаяМСП", null)]
        [NUnit.Framework.TestCaseAttribute("УплаченоФКР", null)]
        [NUnit.Framework.TestCaseAttribute("ПотраченоНаКР", null)]
        [NUnit.Framework.TestCaseAttribute("ШтрихКод", null)]
        [NUnit.Framework.TestCaseAttribute("ФИОСобственника", null)]
        [NUnit.Framework.TestCaseAttribute("ОплатитьДо", null)]
        [NUnit.Framework.TestCaseAttribute("ПечататьАкт", null)]
        [NUnit.Framework.TestCaseAttribute("Индекс", null)]
        [NUnit.Framework.TestCaseAttribute("СпособФормированияФонда", null)]
        [NUnit.Framework.TestCaseAttribute("АгентДоставки", null)]
        [NUnit.Framework.TestCaseAttribute("Счетчик", null)]
        [NUnit.Framework.TestCaseAttribute("СальдоБазТарифНачало", null)]
        [NUnit.Framework.TestCaseAttribute("СальдоТарифРешНачало", null)]
        [NUnit.Framework.TestCaseAttribute("ЕдиницаПериодаПросрочки", null)]
        [NUnit.Framework.TestCaseAttribute("ПериодПросрочки", null)]
        [NUnit.Framework.TestCaseAttribute("ПечататьУведомление", null)]
        [NUnit.Framework.TestCaseAttribute("УчитыватьСумму", null)]
        [NUnit.Framework.TestCaseAttribute("СтатусЗадолженности", null)]
        [NUnit.Framework.TestCaseAttribute("КоличествоДнейПросрочки", null)]
        [NUnit.Framework.TestCaseAttribute("КоличествоМесяцевПросрочки", null)]
        [NUnit.Framework.TestCaseAttribute("OwnerType", null)]
        [NUnit.Framework.TestCaseAttribute("Municipality", null)]
        [NUnit.Framework.TestCaseAttribute("Settlement", null)]
        [NUnit.Framework.TestCaseAttribute("RoomType", null)]
        [NUnit.Framework.TestCaseAttribute("МинимальныйТариф", null)]
        [NUnit.Framework.TestCaseAttribute("ПроцентЛьготы", null)]
        [NUnit.Framework.TestCaseAttribute("НомерПомещения", null)]
        [NUnit.Framework.TestCaseAttribute("НомерДокумента", null)]
        [NUnit.Framework.TestCaseAttribute("ОбщийДебет", null)]
        [NUnit.Framework.TestCaseAttribute("ОбщийКредит", null)]
        [NUnit.Framework.TestCaseAttribute("ОбщийДебетПени", null)]
        [NUnit.Framework.TestCaseAttribute("ОбщийКредитПени", null)]
        [NUnit.Framework.TestCaseAttribute("ПерерасчетВсего", null)]
        [NUnit.Framework.TestCaseAttribute("НачисленоВсего", null)]
        [NUnit.Framework.TestCaseAttribute("НачисленоПениВсего", null)]
        public virtual void УспешноеЗаполнениеИсточниковДанныхУКвитанцииНаОплату(string источникДанных, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное заполнение источников данных у квитанции на оплату", exampleTags);
#line 63
this.ScenarioSetup(scenarioInfo);
#line 64
testRunner.Given("пользователь заполняет поле Период \"2014 Август\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 65
testRunner.When("пользователь выгружает документ на оплату для ЛС \"100000834\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 66
testRunner.And("в задачах появляется запись по Формированию документов на оплату", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 67
testRunner.And("у этой записи по закрытию периода заполнено поле Дата запуска \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 68
testRunner.And("у этой записи по закрытию периода заполнено поле Наименование \"Формирование докум" +
                    "ентов на оплату\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 69
testRunner.And("у этой записи по закрытию периода заполнено поле Статус \"Успешно выполнена\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 70
testRunner.And("у этой записи по закрытию периода заполнено поле Процент выполнения \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 71
testRunner.And("у этой записи по закрытию периода заполнено поле Ход выполнения \"Завершено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 72
testRunner.Then("в реестре документов на оплату присутствует запись по этому документу на оплату п" +
                    "о периоду \"2014 Август\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 73
testRunner.And(string.Format("у квитанции этого лицевого счета заполнен \"{0}\" \"не пусто\"", источникДанных), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
