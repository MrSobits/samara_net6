// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.3.0
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TestFeaturesFilling
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.3.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("зачисление денег на счет с отображжением в поле \"Уплачено взносов по минимальному" +
        " тарифу\"")]
    public partial class ЗачислениеДенегНаСчетСОтображжениемВПолеУплаченоВзносовПоМинимальномуТарифуFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "gkh3431.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "зачисление денег на счет с отображжением в поле \"Уплачено взносов по минимальному" +
                    " тарифу\"", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("отображение зачисленной суммы в поле \"Уплачено взносов по минимальному тарифу\"")]
        public virtual void ОтображениеЗачисленнойСуммыВПолеУплаченоВзносовПоМинимальномуТарифу()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("отображение зачисленной суммы в поле \"Уплачено взносов по минимальному тарифу\"", ((string[])(null)));
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
testRunner.When("пользователь добавляет новую банковскую операцию", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 6
testRunner.And("пользователь у этой банковской операции заполняет поле Дата документа \"текущая да" +
                    "та\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 7
testRunner.And("пользователь у этой банковской операции заполняет поле Номер документа \"00100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 8
testRunner.And("пользователь у этой банковской операции заполняет поле Сумма \"333\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 9
testRunner.And("пользователь у этой банковской операции заполняет поле Р/С \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 10
testRunner.And("пользователь у этой банковской операции заполняет поле Приход/Расход \"Приход\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 11
testRunner.And("пользователь сохраняет эту банковскую операцию", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 12
testRunner.And("пользователь распределяет эту банковскую", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 13
testRunner.And("пользователь производит действие зачисления по кнопке Распределить для банковской" +
                    " операции с типом Приход", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 14
testRunner.And("пользователь у банковской операции с типом Приход для распределения Тип распредел" +
                    "ения \"Платеж КР\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 15
testRunner.And("пользователь у банковской операции с типом Приход для распределения Вид распредел" +
                    "ения \"Равномерное\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 16
testRunner.And("пользователь выбирает лицевой счет с адресом \"с. Никольское, ул. 50 лет Октября, " +
                    "д. 3, кв. 1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 17
testRunner.And("пользователь формирует распределение", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 18
testRunner.When("пользователь применяет распределение", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 19
testRunner.Then("в списке банковских операций у этой банковской операции статус = Распределена", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 20
testRunner.And("в карточке этого лицевого счета в операциях за текущий период присутствует запись" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 21
testRunner.And("у этой записи дата операции = Дата документа из этой банковской операции", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 22
testRunner.And("у этой записи Изменение сальдо = 333", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 23
testRunner.And("у этого лицевого счета присутствует детализация по Уплачено взносов по минимально" +
                    "му тарифу всего", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 24
testRunner.And("у этой детализации присутствует запись оплаты", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 25
testRunner.And("у этой записи по оплате заполнено поле Период \"открытый период\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 26
testRunner.And("у этой записи номера заполнено поле Сумма = сумме всех записей из детализации о э" +
                    "тому лс по Уплачено взносов по минимальному тарифу всего", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
