// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.3.0
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TestFeaturesFilling
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.3.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("повторное открытие лицевого счета после закрытия")]
    public partial class ПовторноеОткрытиеЛицевогоСчетаПослеЗакрытияFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "reopen_pers_account.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "повторное открытие лицевого счета после закрытия", "Региональный фонд - Счета - Реестр лицевых счетов - Другие операции - Повторное о" +
                    "ткрытие", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("повторное открытие лс")]
        [NUnit.Framework.TestCaseAttribute("140133189", "Закрыт", null)]
        [NUnit.Framework.TestCaseAttribute("", "Закрыт с долгом", null)]
        public virtual void ПовторноеОткрытиеЛс(string лс, string статус, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("повторное открытие лс", exampleTags);
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
testRunner.Given(string.Format("пользователь повторно открывает ЛС \"{0}\"", лс), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 8
testRunner.And("пользователь заполняет поле Причина \"тест переоткрытия лс\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 9
testRunner.And("пользователь заполняет поле Документ-основание \"1.pdf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 10
testRunner.And("пользователь заполняет поле Дата повторного открытия \"01.12.2999\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 11
testRunner.When("пользователь сохраняет изменения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 12
testRunner.Then(string.Format("у этого ЛС заполнено поле Статус \"{0}\"", статус), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное повторное открытие лс в статусе Открыт")]
        public virtual void НеудачноеПовторноеОткрытиеЛсВСтатусеОткрыт()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное повторное открытие лс в статусе Открыт", ((string[])(null)));
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
testRunner.Given("пользователь повторно открывает ЛС \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 21
testRunner.And("пользователь заполняет поле Причина \"тест переоткрытия лс\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 22
testRunner.And("пользователь заполняет поле Документ-основание \"1.pdf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 23
testRunner.And("пользователь заполняет поле Дата повторного открытия \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 24
testRunner.When("пользователь сохраняет изменения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 25
testRunner.Then("у этого ЛС заполнено поле Статус \"Открыт\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 26
testRunner.And("падает ошибка \"Счет уже открыт!\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное повторное открытие лс у дома в статусе Аварийный")]
        [NUnit.Framework.TestCaseAttribute("", "Закрыт", null)]
        [NUnit.Framework.TestCaseAttribute("", "Закрыт с долгом", null)]
        public virtual void НеудачноеПовторноеОткрытиеЛсУДомаВСтатусеАварийный(string лс, string статус, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное повторное открытие лс у дома в статусе Аварийный", exampleTags);
#line 28
this.ScenarioSetup(scenarioInfo);
#line 29
testRunner.Given(string.Format("пользователь повторно открывает ЛС \"{0}\"", лс), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 30
testRunner.And("пользователь заполняет поле Причина \"тест переоткрытия лс\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 31
testRunner.And("пользователь заполняет поле Документ-основание \"1.pdf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 32
testRunner.And("пользователь заполняет поле Дата повторного открытия \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 33
testRunner.And("в карточке ЛС \"\" в истории изменений есть запись по закрытию лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 34
testRunner.And("у этой записи по закрытию лс заполнено поле Наименование параметра \"Закрытие\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 35
testRunner.And("у этой записи по закрытию лс заполнено поле Описание измененного атрибута \"Закрыт" +
                    "ие ЛС в связи со сменой состояния дома\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 36
testRunner.And("у дома \"\" заполнено поле Состояние дома \"Аварийный\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 37
testRunner.When("пользователь сохраняет изменения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 38
testRunner.Then(string.Format("у этого ЛС заполнено поле Статус \"{0}\"", статус), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 39
testRunner.And("падает ошибка \"Состояние дома установлено Аварийный. Открытие счета не доступно\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное повторное открытие лс у дома в статусе Снесен")]
        [NUnit.Framework.TestCaseAttribute("", "Закрыт", null)]
        [NUnit.Framework.TestCaseAttribute("", "Закрыт с долгом", null)]
        public virtual void НеудачноеПовторноеОткрытиеЛсУДомаВСтатусеСнесен(string лс, string статус, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное повторное открытие лс у дома в статусе Снесен", exampleTags);
#line 46
this.ScenarioSetup(scenarioInfo);
#line 47
testRunner.Given(string.Format("пользователь повторно открывает ЛС \"{0}\"", лс), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 48
testRunner.And("пользователь заполняет поле Причина \"тест переоткрытия лс\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 49
testRunner.And("пользователь заполняет поле Документ-основание \"1.pdf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 50
testRunner.And("пользователь заполняет поле Дата повторного открытия \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 51
testRunner.And("в карточке ЛС \"\" в истории изменений есть запись по закрытию лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 52
testRunner.And("у этой записи по закрытию лс заполнено поле Наименование параметра \"Закрытие\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 53
testRunner.And("у этой записи по закрытию лс заполнено поле Описание измененного атрибута \"Закрыт" +
                    "ие ЛС в связи со сменой состояния дома\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 54
testRunner.And("у этой записи по закрытию лс заполнено поле Значение \"пусто\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 55
testRunner.And("у дома \"\" заполнено поле Состояние дома \"Снесен\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 56
testRunner.When("пользователь сохраняет изменения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 57
testRunner.Then(string.Format("у этого ЛС заполнено поле Статус \"{0}\"", статус), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 58
testRunner.And("падает ошибка \"Состояние дома установлено Снесен. Открытие счета не доступно\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное повторное открытие лс после слияния")]
        [NUnit.Framework.TestCaseAttribute("", "Закрыт", null)]
        [NUnit.Framework.TestCaseAttribute("", "Закрыт с долгом", null)]
        public virtual void НеудачноеПовторноеОткрытиеЛсПослеСлияния(string лс, string статус, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное повторное открытие лс после слияния", exampleTags);
#line 65
this.ScenarioSetup(scenarioInfo);
#line 66
testRunner.Given(string.Format("пользователь повторно открывает ЛС \"{0}\"", лс), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 67
testRunner.And("пользователь заполняет поле Причина \"тест переоткрытия лс\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 68
testRunner.And("пользователь заполняет поле Документ-основание \"1.pdf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 69
testRunner.And("пользователь заполняет поле Дата повторного открытия \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 70
testRunner.And("в карточке ЛС \"\" в истории изменений есть запись по слиянию лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 71
testRunner.And("у этой записи по закрытию лс заполнено поле Наименование параметра \"Закрытие в св" +
                    "язи со слиянием\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 72
testRunner.And("у этой записи по закрытию лс заполнено поле Описание измененного атрибута \"Измене" +
                    "ние сальдо в связи со слиянием ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 73
testRunner.When("пользователь сохраняет изменения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 74
testRunner.Then(string.Format("у этого ЛС заполнено поле Статус \"{0}\"", статус), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 75
testRunner.And("падает ошибка \"Счет был закрыт в связи со слиянием. Открытие счета не доступно\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное повторное открытие лс при превышении общей доли собственности квартиры")]
        [NUnit.Framework.TestCaseAttribute("", "Открыт", null)]
        [NUnit.Framework.TestCaseAttribute("", "Открыт", null)]
        [NUnit.Framework.TestCaseAttribute("", "Не активен", null)]
        [NUnit.Framework.TestCaseAttribute("", "Не активен", null)]
        [NUnit.Framework.TestCaseAttribute("", "Не активен", null)]
        public virtual void НеудачноеПовторноеОткрытиеЛсПриПревышенииОбщейДолиСобственностиКвартиры(string лс, string статус, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное повторное открытие лс при превышении общей доли собственности квартиры", exampleTags);
#line 82
this.ScenarioSetup(scenarioInfo);
#line 83
testRunner.Given(string.Format("пользователь повторно открывает ЛС \"{0}\"", лс), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 84
testRunner.And("пользователь заполняет поле Причина \"тест переоткрытия лс\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 85
testRunner.And("пользователь заполняет поле Документ-основание \"1.pdf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 86
testRunner.And("пользователь заполняет поле Дата повторного открытия \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 87
testRunner.When("пользователь сохраняет изменения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 88
testRunner.Then(string.Format("у этого ЛС заполнено поле Статус \"{0}\"", статус), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 89
testRunner.And("падает ошибка \"Доля собственности помещения по всем счетам превышает 1. Доля собс" +
                    "твенности по текущему счету изменена не будет, и равна 0. Проведите изменение до" +
                    "ли собственности в карточке абонента.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 90
testRunner.And("у этого ЛС заполнено поле Доля собственности \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 91
testRunner.And("в карточке ЛС \"\" в истории изменений есть запись по открытию лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 92
testRunner.And("у этой записи по закрытию лс заполнено поле Наименование параметра \"Дата открытия" +
                    " ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 93
testRunner.And("у этой записи по закрытию лс заполнено поле Описание измененного атрибута \"Открыт" +
                    "ие ЛС в связи с повторным открытием счета\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 94
testRunner.And("у этой записи по закрытию лс заполнено поле Значение \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 95
testRunner.And("у этой записи по закрытию лс заполнено поле Дата начала действия значения \"текуща" +
                    "я дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 96
testRunner.And("у этой записи по закрытию лс заполнено поле Дата установки значения \"текущая дата" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 97
testRunner.And("у этой записи по закрытию лс заполнено поле Причина \"тест переоткрытия лс\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное повторное открытие лс при не превышении общей доли собственности квартир" +
            "ы")]
        [NUnit.Framework.TestCaseAttribute("", "Открыт", null)]
        [NUnit.Framework.TestCaseAttribute("", "Открыт", null)]
        [NUnit.Framework.TestCaseAttribute("", "Не активен", null)]
        [NUnit.Framework.TestCaseAttribute("", "Не активен", null)]
        [NUnit.Framework.TestCaseAttribute("", "Не активен", null)]
        public virtual void УспешноеПовторноеОткрытиеЛсПриНеПревышенииОбщейДолиСобственностиКвартиры(string лс, string статус, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное повторное открытие лс при не превышении общей доли собственности квартир" +
                    "ы", exampleTags);
#line 108
this.ScenarioSetup(scenarioInfo);
#line 109
testRunner.Given(string.Format("пользователь повторно открывает ЛС \"{0}\"", лс), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 110
testRunner.And("пользователь заполняет поле Причина \"тест переоткрытия лс\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 111
testRunner.And("пользователь заполняет поле Документ-основание \"1.pdf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 112
testRunner.And("пользователь заполняет поле Дата повторного открытия \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 113
testRunner.When("пользователь сохраняет изменения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 114
testRunner.Then(string.Format("у этого ЛС заполнено поле Статус \"{0}\"", статус), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 115
testRunner.And("у этого ЛС заполнено поле Доля собственности \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 116
testRunner.And("в карточке ЛС \"\" в истории изменений есть запись по открытию лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 117
testRunner.And("у этой записи по закрытию лс заполнено поле Наименование параметра \"Дата открытия" +
                    " ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 118
testRunner.And("у этой записи по закрытию лс заполнено поле Описание измененного атрибута \"Открыт" +
                    "ие ЛС в связи с повторным открытием счета\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 119
testRunner.And("у этой записи по закрытию лс заполнено поле Значение \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 120
testRunner.And("у этой записи по закрытию лс заполнено поле Дата начала действия значения \"текуща" +
                    "я дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 121
testRunner.And("у этой записи по закрытию лс заполнено поле Дата установки значения \"текущая дата" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 122
testRunner.And("у этой записи по закрытию лс заполнено поле Причина \"тест переоткрытия лс\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
