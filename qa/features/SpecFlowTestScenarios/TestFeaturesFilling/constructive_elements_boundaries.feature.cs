// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.3.0
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TestFeaturesFilling
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.3.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("тесткейсы граничных значений для раздела \"Конструктивные элементы\"")]
    public partial class ТесткейсыГраничныхЗначенийДляРазделаКонструктивныеЭлементыFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "constructive_elements_boundaries.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "тесткейсы граничных значений для раздела \"Конструктивные элементы\"", "Справочники - Жилищно-коммунальное хозяйство - Конструктивные элементы", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление конструктивного элемента при незаполненных обязательных поля" +
            "х")]
        public virtual void НеудачноеДобавлениеКонструктивногоЭлементаПриНезаполненныхОбязательныхПолях()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление конструктивного элемента при незаполненных обязательных поля" +
                    "х", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
testRunner.Given("пользователь добавляет нового конструктивного элемента", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 8
testRunner.When("пользователь сохраняет этот конструктивный элемент", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 9
testRunner.Then("запись по этому конструктивному элементу не сохраняется и падает ошибка с текстом" +
                    " \"Не заполнены обязательные поля: Наименование Код Группа\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удачное добавление конструктивного элемента при вводе граничных условий в 300 зна" +
            "ков, Наименование")]
        public virtual void УдачноеДобавлениеКонструктивногоЭлементаПриВводеГраничныхУсловийВ300ЗнаковНаименование()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удачное добавление конструктивного элемента при вводе граничных условий в 300 зна" +
                    "ков, Наименование", ((string[])(null)));
#line 11
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table1.AddRow(new string[] {
                        "группа конструктивных элементов тест"});
#line 12
testRunner.Given("добавлена группа конструктивных элементов", ((string)(null)), table1, "Дано ");
#line 16
testRunner.Given("пользователь добавляет нового конструктивного элемента", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 17
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Наименование 300 сим" +
                    "волов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 18
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Код \"234\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 19
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Группа", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 20
testRunner.When("пользователь сохраняет этот конструктивный элемент", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 21
testRunner.Then("запись по этому конструктивному элементу присутствует в реестре конструктивных эл" +
                    "ементов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление конструктивного элемента при вводе граничных условий в 301 з" +
            "наков, Наименование")]
        public virtual void НеудачноеДобавлениеКонструктивногоЭлементаПриВводеГраничныхУсловийВ301ЗнаковНаименование()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление конструктивного элемента при вводе граничных условий в 301 з" +
                    "наков, Наименование", ((string[])(null)));
#line 23
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table2.AddRow(new string[] {
                        "группа конструктивных элементов тест"});
#line 24
testRunner.Given("добавлена группа конструктивных элементов", ((string)(null)), table2, "Дано ");
#line 28
testRunner.Given("пользователь добавляет нового конструктивного элемента", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 29
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Наименование 301 сим" +
                    "волов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 30
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Код \"234\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 31
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Группа", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 32
testRunner.When("пользователь сохраняет этот конструктивный элемент", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 33
testRunner.Then("запись по этому конструктивному элементу не сохраняется и падает ошибка с текстом" +
                    " \"Не заполнены обязательные поля: Наименование\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удачное добавление конструктивного элемента при вводе граничных условий в 300 зна" +
            "ков, Код")]
        public virtual void УдачноеДобавлениеКонструктивногоЭлементаПриВводеГраничныхУсловийВ300ЗнаковКод()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удачное добавление конструктивного элемента при вводе граничных условий в 300 зна" +
                    "ков, Код", ((string[])(null)));
#line 35
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table3.AddRow(new string[] {
                        "группа конструктивных элементов тест"});
#line 36
testRunner.Given("добавлена группа конструктивных элементов", ((string)(null)), table3, "Дано ");
#line 40
testRunner.Given("пользователь добавляет нового конструктивного элемента", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 41
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Наименование \"констр" +
                    "уктивный элемент тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 42
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Код 300 символов \"1\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 43
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Группа", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 44
testRunner.When("пользователь сохраняет этот конструктивный элемент", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 45
testRunner.Then("запись по этому конструктивному элементу присутствует в реестре конструктивных эл" +
                    "ементов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление конструктивного элемента при вводе граничных условий в 301 з" +
            "наков, Код")]
        public virtual void НеудачноеДобавлениеКонструктивногоЭлементаПриВводеГраничныхУсловийВ301ЗнаковКод()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление конструктивного элемента при вводе граничных условий в 301 з" +
                    "наков, Код", ((string[])(null)));
#line 47
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table4.AddRow(new string[] {
                        "группа конструктивных элементов тест"});
#line 48
testRunner.Given("добавлена группа конструктивных элементов", ((string)(null)), table4, "Дано ");
#line 52
testRunner.Given("пользователь добавляет нового конструктивного элемента", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 53
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Наименование \"констр" +
                    "уктивный элемент тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 54
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Код 301 символов \"1\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 55
testRunner.And("пользователь у этого конструктивного элемента заполняет поле Группа", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 56
testRunner.When("пользователь сохраняет этот конструктивный элемент", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 57
testRunner.Then("запись по этому конструктивному элементу не сохраняется и падает ошибка с текстом" +
                    " \"Не заполнены обязательные поля: Код\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
