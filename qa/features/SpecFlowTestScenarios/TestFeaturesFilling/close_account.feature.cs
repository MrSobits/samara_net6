// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.3.0
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TestFeaturesFilling
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.3.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Закрытие лицевого счета")]
    public partial class ЗакрытиеЛицевогоСчетаFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "close_account.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "Закрытие лицевого счета", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное закрытие лицевого счета с переходом в статус \"Закрыт\"")]
        public virtual void УспешноеЗакрытиеЛицевогоСчетаСПереходомВСтатусЗакрыт()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное закрытие лицевого счета с переходом в статус \"Закрыт\"", ((string[])(null)));
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
testRunner.When("пользователь для ЛС \"\" вызывает операцию Закрытие счета", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 6
testRunner.And("пользователь заполняет поле Причина \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 7
testRunner.And("пользователь заполняет поле Документ-основание \"1.pdf\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 8
testRunner.And("пользователь заполняет поле Дата закрытия \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 9
testRunner.And("пользователь сохраняет изменения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 10
testRunner.Then("в карточке ЛС \"\" в истории изменений есть запись по изменению доли собственности", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 11
testRunner.And("у этой записи по изменению доли собственности заполнено поле Наименование парамет" +
                    "ра \"Доля собственности\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 12
testRunner.And("у этой записи по изменению доли собственности заполнено поле Описание измененного" +
                    " атрибута \"Изменение доли собственности в связи с закрытием ЛС\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 13
testRunner.And("у этой записи по изменению доли собственности заполнено поле Значение \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 14
testRunner.And("у этой записи по изменению доли собственности заполнено поле Дата начала действия" +
                    " значения \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 15
testRunner.And("у этой записи по изменению доли собственности заполнено поле Дата установки значе" +
                    "ния \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 16
testRunner.And("у этой записи по изменению доли собственности заполнено поле Причина \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 17
testRunner.And("в карточке ЛС \"\" в истории изменений есть запись по закрытию лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 18
testRunner.And("у этой записи по закрытию лс заполнено поле Наименование параметра \"Закрытие\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 19
testRunner.And("у этой записи по закрытию лс заполнено поле Описание измененного атрибута \"Для ЛС" +
                    " установлен статус \"Закрыт с долгом\"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 20
testRunner.And("у этой записи по закрытию лс заполнено поле Значение \"пусто\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 21
testRunner.And("у этой записи по закрытию лс заполнено поле Дата начала действия значения \"текуща" +
                    "я дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 22
testRunner.And("у этой записи по закрытию лс заполнено поле Дата установки значения \"текущая дата" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 23
testRunner.And("у этой записи по закрытию лс заполнено поле Причина \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 24
testRunner.And("в карточке лс \"\" появляется запись по операции по текущему периоду", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 25
testRunner.And("записи по операции по предыдущему периоду есть детальная информация", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 26
testRunner.And("у этой детальной информации есть запись по закрытию лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 27
testRunner.And("у этой записи по сальдо заполнено поле Дата операции \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 28
testRunner.And("у этой записи по сальдо заполнено поле Название операции \"Закрытие\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 29
testRunner.And("у этой записи по сальдо заполнено поле Изменение сальдо", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 30
testRunner.And("в карточке лс \"\" заполнено поле Доля собственности \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 31
testRunner.And("у лицевого счета заполнено поле Статус \"Закрыт с долгом\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное закрытие лс без выбора ЛС")]
        public virtual void НеудачноеЗакрытиеЛсБезВыбораЛС()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное закрытие лс без выбора ЛС", ((string[])(null)));
#line 33
this.ScenarioSetup(scenarioInfo);
#line 34
testRunner.When("пользователь вызывает операцию Закрытие счета без ваыбора лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 35
testRunner.Then("выходит сообщение об ошибке с текстом \"Необходимо выбрать один лицевой счет!\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное закрытие ЛС для закрытого ЛС с долгом")]
        public virtual void НеудачноеЗакрытиеЛСДляЗакрытогоЛССДолгом()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное закрытие ЛС для закрытого ЛС с долгом", ((string[])(null)));
#line 40
this.ScenarioSetup(scenarioInfo);
#line 41
testRunner.When("пользователь для ЛС \"\" вызывает операцию Закрытие счета без выбора лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 42
testRunner.And("пользователь заполняет поле Причина \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 43
testRunner.And("пользователь заполняет поле Дата закрытия \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 44
testRunner.And("пользователь сохраняет изменения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 45
testRunner.Then("выходит сообщение об ошибке с текстом \"Имеется долг. Счет уже закрыт с долгом!\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное закрытие ЛС для закрытого ЛС")]
        public virtual void НеудачноеЗакрытиеЛСДляЗакрытогоЛС()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное закрытие ЛС для закрытого ЛС", ((string[])(null)));
#line 47
this.ScenarioSetup(scenarioInfo);
#line 48
testRunner.When("пользователь для ЛС \"\" вызывает операцию Закрытие счета без выбора лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 49
testRunner.And("пользователь заполняет поле Причина \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 50
testRunner.And("пользователь заполняет поле Дата закрытия \"текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 51
testRunner.And("пользователь сохраняет изменения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 52
testRunner.Then("выходит сообщение об ошибке с текстом \"Счет уже закрыт!\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
