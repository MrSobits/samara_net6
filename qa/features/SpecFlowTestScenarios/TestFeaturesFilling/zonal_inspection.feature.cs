// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.3.0
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TestFeaturesFilling
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.3.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("тесткейсы для справочника \"Отделы\"")]
    public partial class ТесткейсыДляСправочникаОтделыFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "zonal_inspection.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "тесткейсы для справочника \"Отделы\"", "Справочники - ГЖИ - Отделы", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
testRunner.Given("пользователь добавляет новую зональную жилищную инспекцию", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 8
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет первое поле Наименовани" +
                    "е \"зональная жилищная инспекция тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 9
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет первое поле Зональное н" +
                    "аименование \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 10
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет первое поле Наименовани" +
                    "е для бланка \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 11
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет первое поле Краткое наи" +
                    "менование \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 12
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет первое поле Адрес \"тест" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 13
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет второе поле Наименовани" +
                    "е \"зональная жилищная инспекция тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 14
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет второе поле Зональное н" +
                    "аименование \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 15
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет второе поле Наименовани" +
                    "е для бланка \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 16
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет второе поле Краткое наи" +
                    "менование \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 17
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет второе поле Адрес \"тест" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 18
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет поле E-mail \"123@mail.r" +
                    "u\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 19
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет поле Телефон \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 20
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет поле ОКАТО \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 21
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет поле Индекс \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 22
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет поле Код \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное добавление зональной жилищной инспекции")]
        public virtual void УспешноеДобавлениеЗональнойЖилищнойИнспекции()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное добавление зональной жилищной инспекции", ((string[])(null)));
#line 25
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 26
testRunner.When("пользователь сохраняет эту зональную жилищную инспекцию", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 27
testRunner.Then("запись по этой зональной жилищной инспекции присутствует в справочнике зональных " +
                    "жилищных инспекций", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное удаление зональной жилищной инспекции")]
        public virtual void УспешноеУдалениеЗональнойЖилищнойИнспекции()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное удаление зональной жилищной инспекции", ((string[])(null)));
#line 29
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 30
testRunner.When("пользователь сохраняет эту зональную жилищную инспекцию", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 31
testRunner.And("пользователь удаляет эту зональной жилищной инспекции", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 32
testRunner.Then("запись по этой зональной жилищной инспекции отсутствует в справочнике зональных ж" +
                    "илищных инспекций", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное добавление дубля зональной жилищной инспекции")]
        public virtual void УспешноеДобавлениеДубляЗональнойЖилищнойИнспекции()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное добавление дубля зональной жилищной инспекции", ((string[])(null)));
#line 34
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 35
testRunner.Given("пользователь сохраняет эту зональную жилищную инспекцию", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 36
testRunner.Given("пользователь добавляет новую зональную жилищную инспекцию", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 37
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет первое поле Наименовани" +
                    "е \"зональная жилищная инспекция тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 38
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет первое поле Зональное н" +
                    "аименование \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 39
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет первое поле Наименовани" +
                    "е для бланка \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 40
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет первое поле Краткое наи" +
                    "менование \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 41
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет первое поле Адрес \"тест" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 42
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет второе поле Наименовани" +
                    "е \"зональная жилищная инспекция тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 43
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет второе поле Зональное н" +
                    "аименование \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 44
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет второе поле Наименовани" +
                    "е для бланка \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 45
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет второе поле Краткое наи" +
                    "менование \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 46
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет второе поле Адрес \"тест" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 47
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет поле E-mail \"123@mail.r" +
                    "u\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 48
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет поле Телефон \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 49
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет поле ОКАТО \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 50
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет поле Индекс \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 51
testRunner.And("пользователь у этой зональной жилищной инспекци заполняет поле Код \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 52
testRunner.When("пользователь сохраняет эту зональную жилищную инспекцию", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 53
testRunner.Then("запись по этой зональной жилищной инспекции присутствует в справочнике зональных " +
                    "жилищных инспекций", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное добавление муниципального образования к зональной жилищной инспекции")]
        public virtual void УспешноеДобавлениеМуниципальногоОбразованияКЗональнойЖилищнойИнспекции()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное добавление муниципального образования к зональной жилищной инспекции", ((string[])(null)));
#line 55
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 56
testRunner.Given("пользователь сохраняет эту зональную жилищную инспекцию", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 57
testRunner.And("добавляет муниципальное образование к этой зональной жилищной инспекции", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 58
testRunner.When("пользователь сохраняет эту зональную жилищную инспекцию", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 59
testRunner.Then("запись по этой зональной жилищной инспекции отсутствует в справочнике зональных ж" +
                    "илищных инспекций", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("автоматическое прикрепление инспектора к зональной жилищной инспекции")]
        public virtual void АвтоматическоеПрикреплениеИнспектораКЗональнойЖилищнойИнспекции()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("автоматическое прикрепление инспектора к зональной жилищной инспекции", ((string[])(null)));
#line 61
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 62
testRunner.Given("пользователь сохраняет эту зональную жилищную инспекцию", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Code",
                        "Fio"});
            table1.AddRow(new string[] {
                        "1",
                        "тестовый инспектор"});
#line 63
testRunner.Given("добавлен инспектор", ((string)(null)), table1, "Дано ");
#line 67
testRunner.When("пользователь у этого инспектора выбирает отдел = \"ГЖИ НСО\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 68
testRunner.And("пользователь сохраняет этого инспектора", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 69
testRunner.Then("у этой зональной жилищной инспекции в списке инспекторов присутствует этот инспек" +
                    "тор", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
