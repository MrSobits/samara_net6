// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.3.0
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TestFeaturesFilling
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.3.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("тесткейсы для раздела \"Программы капитального ремонта\"")]
    public partial class ТесткейсыДляРазделаПрограммыКапитальногоРемонтаFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "programCr.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "тесткейсы для раздела \"Программы капитального ремонта\"", "Капитальный ремонт - Программы капитального ремонта - Программы капитального ремо" +
                    "нта", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "DateStart"});
            table1.AddRow(new string[] {
                        "период программы тестовый",
                        "01.01.2015"});
#line 7
testRunner.Given("добавлен период программ", ((string)(null)), table1, "Дано ");
#line 11
testRunner.Given("пользователь добавляет новую программу капитального ремонта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 12
testRunner.And("пользователь у этой программы капитального ремонта заполняет поле Наименование \"п" +
                    "рограмма капитального ремонта тестовая\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 13
testRunner.And("пользователь у этой программы капитального ремонта заполняет поле Код \"123\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 14
testRunner.And("пользователь у этой программы капитального ремонта заполняет поле Сформировать на" +
                    " основании Региональной программы КР (только при создании) \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 15
testRunner.And("пользователь у этой программы капитального ремонта заполняет поле Период", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 16
testRunner.And("пользователь у этой программы капитального ремонта заполняет поле Примечание \"тес" +
                    "т\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 17
testRunner.And("пользователь у этой программы капитального ремонта заполняет поле Используется пр" +
                    "и экспорте \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 18
testRunner.And("пользователь у этой программы капитального ремонта заполняет поле Не доступно доб" +
                    "авление домов \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 19
testRunner.And("пользователь у этой программы капитального ремонта заполняет поле Соответствует Ф" +
                    "З \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное добавление периода программ")]
        public virtual void УспешноеДобавлениеПериодаПрограмм()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное добавление периода программ", ((string[])(null)));
#line 22
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 23
testRunner.When("пользователь сохраняет эту программу капитального ремонта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 24
testRunner.Then("запись по этой программе капитального ремонта присутствует в разделе программ кап" +
                    "итального ремонта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 25
testRunner.And("в журнале изменений присутствует запись об изменении", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 26
testRunner.And("у этой записи об изменении в поле Способ формирования = Вручную", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 27
testRunner.And("у этой записи об изменении в поле Дата = текущая дата", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное добавление периода программ для поля Видимость")]
        [NUnit.Framework.TestCaseAttribute("Полная", null)]
        [NUnit.Framework.TestCaseAttribute("При печати", null)]
        [NUnit.Framework.TestCaseAttribute("Скрытая", null)]
        public virtual void УспешноеДобавлениеПериодаПрограммДляПоляВидимость(string видимость, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное добавление периода программ для поля Видимость", exampleTags);
#line 29
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 30
testRunner.Given(string.Format("пользователь у этой программы капитального ремонта заполняет поле Видимость {0}", видимость), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 31
testRunner.And("пользователь у этой программы капитального ремонта заполняет поле Состояние \"Нова" +
                    "я\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 32
testRunner.When("пользователь сохраняет эту программу капитального ремонта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 33
testRunner.Then("запись по этой программе капитального ремонта присутствует в разделе программ кап" +
                    "итального ремонта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное добавление периода программ для поля Состояние")]
        [NUnit.Framework.TestCaseAttribute("Новая", null)]
        [NUnit.Framework.TestCaseAttribute("Открыта", null)]
        [NUnit.Framework.TestCaseAttribute("Активна", null)]
        [NUnit.Framework.TestCaseAttribute("Закрыта", null)]
        [NUnit.Framework.TestCaseAttribute("Закрыта на корректировку", null)]
        [NUnit.Framework.TestCaseAttribute("Завершена КР", null)]
        public virtual void УспешноеДобавлениеПериодаПрограммДляПоляСостояние(string состояние, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное добавление периода программ для поля Состояние", exampleTags);
#line 41
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 42
testRunner.Given("пользователь у этой программы капитального ремонта заполняет поле Видимость \"Полн" +
                    "ая\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 43
testRunner.And(string.Format("пользователь у этой программы капитального ремонта заполняет поле Состояние {0}", состояние), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 44
testRunner.When("пользователь сохраняет эту программу капитального ремонта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 45
testRunner.Then("запись по этой программе капитального ремонта присутствует в разделе программ кап" +
                    "итального ремонта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное удаление периода программ")]
        public virtual void УспешноеУдалениеПериодаПрограмм()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное удаление периода программ", ((string[])(null)));
#line 56
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 57
testRunner.Given("пользователь у этой программы капитального ремонта заполняет поле Видимость \"Полн" +
                    "ая\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 58
testRunner.And("пользователь у этой программы капитального ремонта заполняет поле Состояние \"Нова" +
                    "я\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 59
testRunner.When("пользователь сохраняет эту программу капитального ремонта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 60
testRunner.And("пользователь удаляет эту программу капитального ремонта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 61
testRunner.Then("запись по этой программе капитального ремонта отсутствует в разделе программ капи" +
                    "тального ремонта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
