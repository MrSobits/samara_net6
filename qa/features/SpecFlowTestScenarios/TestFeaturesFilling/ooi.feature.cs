// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.3.0
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TestFeaturesFilling
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.3.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("тесткейсы для раздела \"Объекты общего имущества\"")]
    public partial class ТесткейсыДляРазделаОбъектыОбщегоИмуществаFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ooi.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "тесткейсы для раздела \"Объекты общего имущества\"", "Справочники - Капитальный ремонт - Объекты общего имущества", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Code",
                        "Name"});
            table1.AddRow(new string[] {
                        "тест",
                        "тип группы оои тест"});
#line 7
testRunner.Given("добавлен тип группы ООИ", ((string)(null)), table1, "Дано ");
#line 11
testRunner.Given("пользователь добавляет новый объект общего имущества", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 12
testRunner.And("пользователь у этого объекта общего имущества заполняет поле Код \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 13
testRunner.And("пользователь у этого объекта общего имущества заполняет поле Тип группы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 14
testRunner.And("пользователь у этого объекта общего имущества заполняет поле Наименование \"объект" +
                    " общего имущества тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 15
testRunner.And("пользователь у этого объекта общего имущества заполняет поле Краткое наименование" +
                    " \"оои1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 16
testRunner.And("пользователь у этого объекта общего имущества заполняет поле Вес \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 17
testRunner.And("пользователь у этого объекта общего имущества заполняет поле Соответствует ЖК РФ " +
                    "\"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 18
testRunner.And("пользователь у этого объекта общего имущества заполняет поле Включен в программу " +
                    "субъекта \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 19
testRunner.And("пользователь у этого объекта общего имущества заполняет поле Является инженерной " +
                    "сетью \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 20
testRunner.And("пользователь у этого объекта общего имущества заполняет поле Множественный объект" +
                    " \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 21
testRunner.And("пользователь у этого объекта общего имущества заполняет поле Является основным \"t" +
                    "rue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное добавление объекта общего имущества")]
        public virtual void УспешноеДобавлениеОбъектаОбщегоИмущества()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное добавление объекта общего имущества", ((string[])(null)));
#line 24
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 25
testRunner.When("пользователь сохраняет этот объект общего имущества", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 26
testRunner.Then("запись по эCuba Libre, бар-ресторантому объекту общего имущества присутствует в с" +
                    "правочнике объектов общего имущества", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное удаление объекта общего имущества")]
        public virtual void УспешноеУдалениеОбъектаОбщегоИмущества()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное удаление объекта общего имущества", ((string[])(null)));
#line 28
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 29
testRunner.When("пользователь сохраняет этот объект общего имущества", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 30
testRunner.And("пользователь удаляет этот объект общего имущества", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 31
testRunner.Then("запись по этому объекту общего имущества отсутствует в справочнике объектов общег" +
                    "о имущества", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное добавление дубля объекта общего имущества")]
        public virtual void УспешноеДобавлениеДубляОбъектаОбщегоИмущества()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное добавление дубля объекта общего имущества", ((string[])(null)));
#line 33
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 34
testRunner.When("пользователь сохраняет этот объект общего имущества", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 35
testRunner.Given("пользователь добавляет новый объект общего имущества", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 36
testRunner.And("пользователь у этого объекта общего имущества заполняет поле Код \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 37
testRunner.And("пользователь у этого объекта общего имущества заполняет поле Тип группы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 38
testRunner.And("пользователь у этого объекта общего имущества заполняет поле Наименование \"объект" +
                    " общего имущества тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 39
testRunner.And("пользователь у этого объекта общего имущества заполняет поле Краткое наименование" +
                    " \"оои1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 40
testRunner.And("пользователь у этого объекта общего имущества заполняет поле Вес \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 41
testRunner.When("пользователь сохраняет этот объект общего имущества", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 42
testRunner.Then("запись по этому объекту общего имущества присутствует в справочнике объектов обще" +
                    "го имущества", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное добавление группы конструктивных элементов к ООИ")]
        public virtual void УспешноеДобавлениеГруппыКонструктивныхЭлементовКООИ()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное добавление группы конструктивных элементов к ООИ", ((string[])(null)));
#line 44
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 45
testRunner.When("пользователь сохраняет этот объект общего имущества", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 46
testRunner.And("пользователь добавляет к этому ООИ группу конструктивных элементов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 47
testRunner.And("пользователь у этой группы конструктивных элементов заполняет поле Наименование \"" +
                    "группа конструктивных элементов тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 48
testRunner.And("пользователь у этой группы конструктивных элементов заполняет поле Является обяза" +
                    "тельным \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 49
testRunner.And("пользователь у этой группы конструктивных элементов заполняет поле Используется в" +
                    " расчете ДПКР \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 50
testRunner.And("пользователь сохраняет эту группу конструктивных элементов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 51
testRunner.Then("запись по этой группе конструктивных элементов присутствует в списке групп у ООИ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное добавление характеристики группы конструктивных элементов к группе конст" +
            "руктивных элементов")]
        [NUnit.Framework.TestCaseAttribute("Целое", null)]
        [NUnit.Framework.TestCaseAttribute("Вещественное", null)]
        [NUnit.Framework.TestCaseAttribute("Строка", null)]
        [NUnit.Framework.TestCaseAttribute("Логическое", null)]
        public virtual void УспешноеДобавлениеХарактеристикиГруппыКонструктивныхЭлементовКГруппеКонструктивныхЭлементов(string типАттрибута, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное добавление характеристики группы конструктивных элементов к группе конст" +
                    "руктивных элементов", exampleTags);
#line 53
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 54
testRunner.When("пользователь сохраняет этот объект общего имущества", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 55
testRunner.And("пользователь добавляет к этому ООИ группу конструктивных элементов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 56
testRunner.And("пользователь у этой группы конструктивных элементов заполняет поле Наименование \"" +
                    "группа конструктивных элементов тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 57
testRunner.And("пользователь сохраняет эту группу конструктивных элементов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 58
testRunner.And("пользователь добавляет к этой группе конструктивных элементов характеристику груп" +
                    "пы конструктивных элементов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 59
testRunner.And("пользователь у этой характеристики группы конструктивных элементов заполняет поле" +
                    " Наименование \"характеристика группы кэ\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 60
testRunner.And(string.Format("пользователь у этой характеристики группы конструктивных элементов заполняет поле" +
                        " Тип атрибута \"{0}\"", типАттрибута), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 61
testRunner.And("пользователь у этой характеристики группы конструктивных элементов заполняет поле" +
                    " Обязательность \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 62
testRunner.And("пользователь у этой характеристики группы конструктивных элементов заполняет поле" +
                    " Подсказка \"Подсказка\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 63
testRunner.Then("запись по этой группе конструктивных элементов присутствует в списке групп у ООИ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
