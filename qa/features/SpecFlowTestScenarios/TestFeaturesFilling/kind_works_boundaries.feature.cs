// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.3.0
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TestFeaturesFilling
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.3.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("тесткейсы граничных значений для раздела \"Виды работ\"")]
    public partial class ТесткейсыГраничныхЗначенийДляРазделаВидыРаботFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "kind_works_boundaries.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "тесткейсы граничных значений для раздела \"Виды работ\"", "Справочники - Общие - Виды работ", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление вида работы при незаполненных обязательных полях")]
        public virtual void НеудачноеДобавлениеВидаРаботыПриНезаполненныхОбязательныхПолях()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление вида работы при незаполненных обязательных полях", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
testRunner.Given("пользователь добавляет новый вид работы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 8
testRunner.When("пользователь сохраняет этот вид работы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 9
testRunner.Then("запись по этому виду работы не сохраняется и падает ошибка с текстом \"Не заполнен" +
                    "ы обязательные поля: Наименование Ед. измерения Код\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удачное добавление вида работ при вводе граничных условий в 300 знаков, Наименова" +
            "ние")]
        public virtual void УдачноеДобавлениеВидаРаботПриВводеГраничныхУсловийВ300ЗнаковНаименование()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удачное добавление вида работ при вводе граничных условий в 300 знаков, Наименова" +
                    "ние", ((string[])(null)));
#line 11
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "ShortName",
                        "Description"});
            table1.AddRow(new string[] {
                        "тест",
                        "тест",
                        "тест"});
#line 12
testRunner.Given("добавлена единица измерения", ((string)(null)), table1, "Дано ");
#line 16
testRunner.Given("пользователь добавляет новый вид работы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 17
testRunner.And("пользователь у этого вида работы заполняет поле Наименование 300 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 18
testRunner.And("пользователь у этого вида работы заполняет поле Ед. измерения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 19
testRunner.And("пользователь у этого вида работы заполняет поле Код \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 20
testRunner.When("пользователь сохраняет этот вид работы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 21
testRunner.Then("запись по этому виду работ присутствует в реестре видов работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление вида работ при вводе граничных условий в 301 знаков, Наимено" +
            "вание")]
        public virtual void НеудачноеДобавлениеВидаРаботПриВводеГраничныхУсловийВ301ЗнаковНаименование()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление вида работ при вводе граничных условий в 301 знаков, Наимено" +
                    "вание", ((string[])(null)));
#line 23
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "ShortName",
                        "Description"});
            table2.AddRow(new string[] {
                        "тест",
                        "тест",
                        "тест"});
#line 24
testRunner.Given("добавлена единица измерения", ((string)(null)), table2, "Дано ");
#line 28
testRunner.Given("пользователь добавляет новый вид работы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 29
testRunner.And("пользователь у этого вида работы заполняет поле Наименование 301 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 30
testRunner.And("пользователь у этого вида работы заполняет поле Ед. измерения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 31
testRunner.And("пользователь у этого вида работы заполняет поле Код \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 32
testRunner.When("пользователь сохраняет этот вид работы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 33
testRunner.Then("запись по этому виду работы не сохраняется и падает ошибка с текстом \"Не заполнен" +
                    "ы обязательные поля: Наименование\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удачное добавление вида работ при вводе граничных условий в 10 знаков, Код")]
        public virtual void УдачноеДобавлениеВидаРаботПриВводеГраничныхУсловийВ10ЗнаковКод()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удачное добавление вида работ при вводе граничных условий в 10 знаков, Код", ((string[])(null)));
#line 35
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "ShortName",
                        "Description"});
            table3.AddRow(new string[] {
                        "тест",
                        "тест",
                        "тест"});
#line 36
testRunner.Given("добавлена единица измерения", ((string)(null)), table3, "Дано ");
#line 40
testRunner.Given("пользователь добавляет новый вид работы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 41
testRunner.And("пользователь у этого вида работы заполняет поле Наименование \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 42
testRunner.And("пользователь у этого вида работы заполняет поле Ед. измерения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 43
testRunner.And("пользователь у этого вида работы заполняет поле Код 10 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 44
testRunner.When("пользователь сохраняет этот вид работы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 45
testRunner.Then("запись по этому виду работ присутствует в реестре видов работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление вида работ при вводе граничных условий в 11 знаков, Код")]
        public virtual void НеудачноеДобавлениеВидаРаботПриВводеГраничныхУсловийВ11ЗнаковКод()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление вида работ при вводе граничных условий в 11 знаков, Код", ((string[])(null)));
#line 47
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "ShortName",
                        "Description"});
            table4.AddRow(new string[] {
                        "тест",
                        "тест",
                        "тест"});
#line 48
testRunner.Given("добавлена единица измерения", ((string)(null)), table4, "Дано ");
#line 52
testRunner.Given("пользователь добавляет новый вид работы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 53
testRunner.And("пользователь у этого вида работы заполняет поле Наименование \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 54
testRunner.And("пользователь у этого вида работы заполняет поле Ед. измерения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 55
testRunner.And("пользователь у этого вида работы заполняет поле Код 11 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 56
testRunner.When("пользователь сохраняет этот вид работы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 57
testRunner.Then("запись по этому виду работы не сохраняется и падает ошибка с текстом \"Не заполнен" +
                    "ы обязательные поля: Код\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное неудачное добавление вида работ при вводе граничных условий в поле Норм" +
            "атив")]
        public virtual void НеудачноеНеудачноеДобавлениеВидаРаботПриВводеГраничныхУсловийВПолеНорматив()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное неудачное добавление вида работ при вводе граничных условий в поле Норм" +
                    "атив", ((string[])(null)));
#line 59
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "ShortName",
                        "Description"});
            table5.AddRow(new string[] {
                        "тест",
                        "тест",
                        "тест"});
#line 60
testRunner.Given("добавлена единица измерения", ((string)(null)), table5, "Дано ");
#line 64
testRunner.Given("пользователь добавляет новый вид работы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 65
testRunner.And("пользователь у этого вида работы заполняет поле Наименование \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 66
testRunner.And("пользователь у этого вида работы заполняет поле Ед. измерения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 67
testRunner.And("пользователь у этого вида работы заполняет поле Код \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 68
testRunner.And("пользователь у этого вида работы заполняет поле Норматив \"-111.,1текст\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 69
testRunner.When("пользователь сохраняет этот вид работы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 70
testRunner.Then("запись по этому виду работы не сохраняется в реестре видов работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("удачное добавление вида работ при вводе граничных условий в 500 знаков, Описание")]
        public virtual void УдачноеДобавлениеВидаРаботПриВводеГраничныхУсловийВ500ЗнаковОписание()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("удачное добавление вида работ при вводе граничных условий в 500 знаков, Описание", ((string[])(null)));
#line 72
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "ShortName",
                        "Description"});
            table6.AddRow(new string[] {
                        "тест",
                        "тест",
                        "тест"});
#line 73
testRunner.Given("добавлена единица измерения", ((string)(null)), table6, "Дано ");
#line 77
testRunner.Given("пользователь добавляет новый вид работы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 78
testRunner.And("пользователь у этого вида работы заполняет поле Наименование \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 79
testRunner.And("пользователь у этого вида работы заполняет поле Ед. измерения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 80
testRunner.And("пользователь у этого вида работы заполняет поле Код \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 81
testRunner.And("пользователь у этого вида работы заполняет поле Описание 500 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 82
testRunner.When("пользователь сохраняет этот вид работы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 83
testRunner.Then("запись по этому виду работ присутствует в реестре видов работ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неудачное добавление вида работ при вводе граничных условий в 501 знаков, Описани" +
            "е")]
        public virtual void НеудачноеДобавлениеВидаРаботПриВводеГраничныхУсловийВ501ЗнаковОписание()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неудачное добавление вида работ при вводе граничных условий в 501 знаков, Описани" +
                    "е", ((string[])(null)));
#line 85
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "ShortName",
                        "Description"});
            table7.AddRow(new string[] {
                        "тест",
                        "тест",
                        "тест"});
#line 86
testRunner.Given("добавлена единица измерения", ((string)(null)), table7, "Дано ");
#line 90
testRunner.Given("пользователь добавляет новый вид работы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 91
testRunner.And("пользователь у этого вида работы заполняет поле Наименование \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 92
testRunner.And("пользователь у этого вида работы заполняет поле Ед. измерения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 93
testRunner.And("пользователь у этого вида работы заполняет поле Код \"тест\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 94
testRunner.And("пользователь у этого вида работы заполняет поле Описание 501 символов \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 95
testRunner.When("пользователь сохраняет этот вид работы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 96
testRunner.Then("запись по этому виду работы не сохраняется и падает ошибка с текстом \"Не заполнен" +
                    "ы обязательные поля: Описание\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
