// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.3.0
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlowTestScenarios
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.3.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("доработки в разделе \"Перечисления средств в фонд\"")]
    public partial class ДоработкиВРазделеПеречисленияСредствВФондFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "rf.transfer_funds_to_fund.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "доработки в разделе \"Перечисления средств в фонд\"", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line 5
testRunner.Given("доступен раздел Региональный фонд - Формирование регионального фонда - Перечислен" +
                    "ия средств в фонд", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("доработка печатной формы по перечислению средств в фонд")]
        public virtual void ДоработкаПечатнойФормыПоПеречислениюСредствВФонд()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("доработка печатной формы по перечислению средств в фонд", ((string[])(null)));
#line 8
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 9
testRunner.Given("открыта на редактирование карточка записи по любому перечислению", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 10
testRunner.Given("в гриде \"Сведения о перечислениях по договору\" есть хотя бы одна запись", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 11
testRunner.When("нажимаю на печать документа (значок принтера по столбцу \"Статус\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 12
testRunner.Then("печатается файл excel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 13
testRunner.Then("в файле в столбец \"Сумма\" тянутся данные по каждому дому из столбца \"Перечисленна" +
                    "я сумма\" с вкладки \"Реестр жилых домов включенных в договор\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 14
testRunner.And("в файле в строку \"Сумма прописью\" тянутся данные из строки \"Итого\" по столбцу \"Пе" +
                    "речисленная сумма\" с вкладки \"Реестр жилых домов включенных в договор\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("отображение итоговой суммы")]
        [NUnit.Framework.TestCaseAttribute("72 367,17", "640,20", "73007,37", null)]
        [NUnit.Framework.TestCaseAttribute("1,00", "0,00", "1,00", null)]
        [NUnit.Framework.TestCaseAttribute("0,00", "1,00", "1,00", null)]
        [NUnit.Framework.TestCaseAttribute("0,00", "0,00", "0,00", null)]
        public virtual void ОтображениеИтоговойСуммы(string сумма1, string сумма2, string итого, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("отображение итоговой суммы", exampleTags);
#line 17
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 18
testRunner.Given("открыта на редактирование карточка записи по любому перечислению", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 19
testRunner.Given("в гриде \"Сведения о перечислениях по договору\" есть хотя бы одна запись", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 20
testRunner.When("открываю на редактирование запись из грида \"Сведения о перечислениях по договору\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 21
testRunner.And(string.Format("во вкладке \"Реестр жилых домов включенных в договор\" в гриде есть строка \"Итого\" " +
                        "с суммой по столбцу \"Перечисленная сумма\" {0}", сумма1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 22
testRunner.And(string.Format("во вкладке \"Перечисления по найму\" в гриде есть строка \"Итого\" с суммой по столбц" +
                        "у \"Перечисленная сумма\" {0}", сумма2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 23
testRunner.Then(string.Format("в карточке перечисления в фонд по каждой строке сумма по столбцу \"Итого перечисле" +
                        "но\" {0} = {1} + {2}", итого, сумма1, сумма2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
