// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.3.0
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlowTestScenarios
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.3.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("реструктуризация долга по ПИР")]
    public partial class РеструктуризацияДолгаПоПИРFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "pir_debt_restructuring.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "реструктуризация долга по ПИР", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
#line 6
testRunner.Given("в системе есть модуль \"Претензионная работа\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("обновление реестра Реструкрутизации")]
        [NUnit.Framework.TestCaseAttribute("Срок внесения платежа", "Срок внесения платежа", null)]
        [NUnit.Framework.TestCaseAttribute("Сумма (руб.)", "Сумма (руб.)", null)]
        [NUnit.Framework.TestCaseAttribute("Оплачено (руб.)", "Оплачено (руб.)", null)]
        [NUnit.Framework.TestCaseAttribute("Сумма пени (руб.)", "Сумма пени (руб.)", null)]
        [NUnit.Framework.TestCaseAttribute("Оплачено пени (руб.)", "Оплачено пени (руб.)", null)]
        [NUnit.Framework.TestCaseAttribute("Дата последней оплаты", "Дата последней оплаты", null)]
        public virtual void ОбновлениеРеестраРеструкрутизации(string аттрибут, string аттрибут1, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("обновление реестра Реструкрутизации", exampleTags);
#line 9
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 10
testRunner.When("пользователь обновляет реестр", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 11
testRunner.Then(string.Format("в реестре обновляется количество записей и информация по аттрибутам \"{0}\"", аттрибут), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 12
testRunner.And(string.Format("значения по по аттрибутам \"{0}\" тянутся из аттрибутов \"{1}\" графика реструктуриза" +
                        "ции в реестре неплательщиков", аттрибут, аттрибут1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("распределение суммы при послуплении оплаты")]
        public virtual void РаспределениеСуммыПриПослупленииОплаты()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("распределение суммы при послуплении оплаты", ((string[])(null)));
#line 24
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 25
testRunner.When("пользователь загружает оплату через Обновленный счет нвс или через Реестр оплат п" +
                    "латежных агентов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 26
testRunner.Then("по лицевому счету обновляются суммы в порядке: Задолженность по взносам по минима" +
                    "льному тарифу, Задолженность по взносам по тарифу решения, Задолженность по рест" +
                    "руктуризации, Задолженность по реструктуризации пени", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Проверка наличия оплаты реструктуризации")]
        public virtual void ПроверкаНаличияОплатыРеструктуризации()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Проверка наличия оплаты реструктуризации", ((string[])(null)));
#line 29
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 30
testRunner.When("пользователь в реестре лс производит реструктуризацию", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 31
testRunner.And("у записей в Графике реструктуризации «Срок внесения» + «Допустимый срок оплаты за" +
                    "долженности по реструктуризации» <= текущей даты", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 32
testRunner.And("«Срок внесения» из Региональный фонд/Счета/Реестр ЛС/Реструктуризация + «Допустим" +
                    "ый срок оплаты задолженности по реструктуризации» <= «Дата последней оплаты» или" +
                    " «Сумма» >= «Оплачено»", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 33
testRunner.Then("сумма долга реструктуризации переносится в сумму основного долга", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 34
testRunner.And("в разделе Региональный фонд/Счета/Реестр ЛС/Реструктуризация для проверенных запи" +
                    "сей проставлять статус = Просрочен", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 35
testRunner.When("пользователь в реестре лс производит реструктуризацию", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 36
testRunner.And("у записей в Графике реструктуризации «Срок внесения» + «Допустимый срок оплаты за" +
                    "долженности по реструктуризации» <= текущей даты", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 37
testRunner.And("«Срок внесения» из Региональный фонд/Счета/Реестр ЛС/Реструктуризация + «Допустим" +
                    "ый срок оплаты задолженности по реструктуризации» > «Дата последней оплаты» или " +
                    "«Сумма» < «Оплачено»", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 38
testRunner.Then("сумма долга реструктуризации = 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 39
testRunner.And("в разделе Региональный фонд/Счета/Реестр ЛС/Реструктуризация для проверенных запи" +
                    "сей проставлять статус = Оплачен", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("заполнение поля \"договор\"")]
        public virtual void ЗаполнениеПоляДоговор()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("заполнение поля \"договор\"", ((string[])(null)));
#line 42
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 43
testRunner.When("пользователь в разделе Региональный фонд/Счета/Реестр ЛС/Реструктуризация выбирае" +
                    "т лицевой счет", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 44
testRunner.And("по выбранному лс количество договоров = 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 45
testRunner.Then("по выбранному лс из договора берется значение поля \"Договор\" = «Документ», «Номер" +
                    "» (из раздела Претензионная работа/Основания/Реестр неплательщиков/Форма редакти" +
                    "рования записи)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 46
testRunner.When("по выбранному лс количество договоров > 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Если ");
#line 47
testRunner.Then("по выбранному лс из договора, у которого дата самая последняя, берется значение п" +
                    "оля \"Договор\" = «Документ», «Номер» (из раздела Претензионная работа/Основания/Р" +
                    "еестр неплательщиков/Форма редактирования записи)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("заполнение поля \"договор\" в случае нескольких договоров у ЛС")]
        public virtual void ЗаполнениеПоляДоговорВСлучаеНесколькихДоговоровУЛС()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("заполнение поля \"договор\" в случае нескольких договоров у ЛС", ((string[])(null)));
#line 50
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 51
testRunner.When("пользователь в разделе Региональный фонд/Счета/Реестр ЛС/Реструктуризация выбирае" +
                    "т лицевой счет", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 52
testRunner.When("по выбранному лс количество договоров > 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Если ");
#line 53
testRunner.Then("пользователь в поле \"Договор\" успешно меняет договор на другой имеющийся по лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("заполнение поля \"Дата начала\"")]
        public virtual void ЗаполнениеПоляДатаНачала()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("заполнение поля \"Дата начала\"", ((string[])(null)));
#line 56
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 57
testRunner.When("пользователь в разделе Региональный фонд/Счета/Реестр ЛС/Реструктуризация выбирае" +
                    "т лицевой счет", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 58
testRunner.Then("по выбранному лс берется значение поля \"Дата начала\" = «Дата» (из раздела Претенз" +
                    "ионная работа/Основания/Реестр неплательщиков/Форма редактирования записи)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("заполнение поля \"Дата окончания\" после полного погашения задолженности реструктур" +
            "изации")]
        public virtual void ЗаполнениеПоляДатаОкончанияПослеПолногоПогашенияЗадолженностиРеструктуризации()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("заполнение поля \"Дата окончания\" после полного погашения задолженности реструктур" +
                    "изации", ((string[])(null)));
#line 61
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 62
testRunner.When("пользователь в реестре лс производит реструктуризацию", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 63
testRunner.And("сумма долга реструктуризации = 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 64
testRunner.And("пользователь в разделе Региональный фонд/Счета/Реестр ЛС/Реструктуризация выбирае" +
                    "т лицевой счет", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 65
testRunner.Then("по выбранному лс берется значение поля \"Дата окончания\" = «Дата последней оплаты," +
                    " которая покрыла задолженность» (из карточки лицевого счета)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("заполнение поля \"Дата окончания\" после отмены реструктуризации")]
        public virtual void ЗаполнениеПоляДатаОкончанияПослеОтменыРеструктуризации()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("заполнение поля \"Дата окончания\" после отмены реструктуризации", ((string[])(null)));
#line 68
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 69
testRunner.When("пользователь в реестре лс производит реструктуризацию", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 70
testRunner.And("у записи статус = Просрочен", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 71
testRunner.Then("по выбранному лс берется значение поля \"Дата окончания\" = «Срок внесения» + «Допу" +
                    "стимый срок оплаты задолженности по реструктуризации» (из раздела Претензионная " +
                    "работа/Основания/Реестр неплательщиков/Форма редактирования/График реструктуриза" +
                    "ции)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("заполнение поля \"Сумма задолженности (руб.)\"")]
        public virtual void ЗаполнениеПоляСуммаЗадолженностиРуб_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("заполнение поля \"Сумма задолженности (руб.)\"", ((string[])(null)));
#line 74
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 75
testRunner.When("пользователь в разделе Региональный фонд/Счета/Реестр ЛС/Реструктуризация выбирае" +
                    "т лицевой счет", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 76
testRunner.Then("по выбранному лс берется значение поля \"Сумма задолженности (руб.)\" = «Сумма задо" +
                    "лженности» (из раздела Претензионная работа/Основания/Реестр неплательщиков/Форм" +
                    "а редактирования записи)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("заполнение поля \"Сумма задолженности по пени (руб.)\"")]
        public virtual void ЗаполнениеПоляСуммаЗадолженностиПоПениРуб_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("заполнение поля \"Сумма задолженности по пени (руб.)\"", ((string[])(null)));
#line 79
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 80
testRunner.When("пользователь в разделе Региональный фонд/Счета/Реестр ЛС/Реструктуризация выбирае" +
                    "т лицевой счет", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 81
testRunner.Then("по выбранному лс берется значение поля \"Сумма задолженности по пени (руб.)\" = «Су" +
                    "мма задолженности по пени» (из раздела Претензионная работа/Основания/Реестр неп" +
                    "лательщиков/Форма редактирования записи)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
