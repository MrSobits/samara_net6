// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.3.0
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlowTestScenarios
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.3.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Закрытие периода")]
    public partial class ЗакрытиеПериодаFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "close_period.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "Закрытие периода", "описание функционала закрытия периода", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("наполнение реестра жилых домов перед проведением закрытия периода")]
        [NUnit.Framework.TestCaseAttribute("Регион", "Камчатский край", null)]
        [NUnit.Framework.TestCaseAttribute("Населенный пункт", "Камчатский край, Елизовский р-н, п. Нагорный", null)]
        [NUnit.Framework.TestCaseAttribute("Улица", "ул. Совхозная", null)]
        [NUnit.Framework.TestCaseAttribute("Дом", "111", null)]
        [NUnit.Framework.TestCaseAttribute("Литер", "1", null)]
        [NUnit.Framework.TestCaseAttribute("Корпус", "1", null)]
        [NUnit.Framework.TestCaseAttribute("Секция", "1", null)]
        [NUnit.Framework.TestCaseAttribute("Почтовый индекс", "684014", null)]
        [NUnit.Framework.TestCaseAttribute("Вид дома", "Многоквартирный", null)]
        public virtual void НаполнениеРеестраЖилыхДомовПередПроведениемЗакрытияПериода(string аттрибут, string значение, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("наполнение реестра жилых домов перед проведением закрытия периода", exampleTags);
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
testRunner.When("пользователь добавляет дом в Реестр жилых домов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 9
testRunner.And(string.Format("заполняет адрес дома {0} значением {1}", аттрибут, значение), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 10
testRunner.And("сохраняет данные", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 11
testRunner.Then("запись по новому дому добавляется в реестр жилых домов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("наполнение реестра лс данными через импорт абонентов")]
        public virtual void НаполнениеРеестраЛсДаннымиЧерезИмпортАбонентов()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("наполнение реестра лс данными через импорт абонентов", ((string[])(null)));
#line 26
this.ScenarioSetup(scenarioInfo);
#line 27
testRunner.When("пользователь в Импорте абонентов прикрепил файл импорта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 28
testRunner.And("пометил checkbox \"Заменять существующие сведения\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 29
testRunner.And("вызвал загрузку файла импорта, у которого обязательно заполнены доля собственност" +
                    "и, площадь помещения, дата открытия счета", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 30
testRunner.Then("в процессах появляется строка с наименованием \"Импорт абонентов\" текущей датой и " +
                    "временем импорта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 31
testRunner.When("статус задачи = Успешно выполнена и процент выполнения = 100", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 32
testRunner.Then("в Логах загрузок появляется запись с типом \"Импорт абонентов\" текущей датой и вре" +
                    "менем импорта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 33
testRunner.When("по импорту абонентов количество ошибок = 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Если ");
#line 34
testRunner.Then("в реестре лицевых счетов добавлены новые записи из файла импорта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 35
testRunner.When("по по импорту абонентов количество ошибок < 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Если ");
#line 36
testRunner.Then("пользователь скачивает лог импорта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("наполнение реестра лс данными через реестр абонентов")]
        public virtual void НаполнениеРеестраЛсДаннымиЧерезРеестрАбонентов()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("наполнение реестра лс данными через реестр абонентов", ((string[])(null)));
#line 39
this.ScenarioSetup(scenarioInfo);
#line 40
testRunner.When("пользователь в доме по адресу = ул. Совхозная, д. 111 добавляет помещение, где но" +
                    "мер квартиры = 900, общая площадь = 51", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 41
testRunner.And("сохраняет данные", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 42
testRunner.Then("в карточке дома в сведениях о помещениях появляется новая строка", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 43
testRunner.When("пользователь в реестре абонентов добавляет нового абонента и заполняет имя = т, ф" +
                    "амилию = т, отчество = т", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 44
testRunner.And("сохраняет данные", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 45
testRunner.Then("в реестре абонентов появляется новая строка", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 46
testRunner.And("у абонента \"т т т\" количество лс = 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 47
testRunner.When("пользователь по абоненту \"т т т\" добавляет жилой дом \"ул. Совхозная, д. 111\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 48
testRunner.And("выбирает квартиру = 900 и выбирает у квартиры долю собственности = 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 49
testRunner.And("сохраняет данные", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 50
testRunner.Then("у абонента \"т т т\" количество лс = 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 51
testRunner.And("в реестре лс появляется новая запись", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("создание первичного периода начислений")]
        public virtual void СозданиеПервичногоПериодаНачислений()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("создание первичного периода начислений", ((string[])(null)));
#line 54
this.ScenarioSetup(scenarioInfo);
#line 55
testRunner.When("пользователь заходит в периоды начислений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 56
testRunner.And("ни одного периода еще нет", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 57
testRunner.Then("Период автоматически создается", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("добавление к дому протокола решений собственников жилых помещений и привязка к сч" +
            "ету регопа")]
        [NUnit.Framework.TestCaseAttribute("Номер", "1", null)]
        [NUnit.Framework.TestCaseAttribute("Дата протокола", "01.01.2015", null)]
        [NUnit.Framework.TestCaseAttribute("Дата вступления в силу", "01.01.2015", null)]
        [NUnit.Framework.TestCaseAttribute("Кредитная организация", "ОАО \"Россельхозбанк\"", null)]
        [NUnit.Framework.TestCaseAttribute("способ формирования фонда", "Счет регионального оператора", null)]
        public virtual void ДобавлениеКДомуПротоколаРешенийСобственниковЖилыхПомещенийИПривязкаКСчетуРегопа(string поле, string значение, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("добавление к дому протокола решений собственников жилых помещений и привязка к сч" +
                    "ету регопа", exampleTags);
#line 60
this.ScenarioSetup(scenarioInfo);
#line 61
testRunner.Given("пользователь выбирает дом = ул. Совхозная, д. 111", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 62
testRunner.And(string.Format("добавлячет к нему протокол типа = \"Протокол решения собственников жилых помещений" +
                        "\" и заполняет поля {0} значением {1}", поле, значение), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 63
testRunner.And("сохраняет данные", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 64
testRunner.And("формирует уведомление с номером = 1 и номером счета = 112", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 65
testRunner.And("сохраняет данные уведомления", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 66
testRunner.When("пользователь переводит протокол в статус = Утверждено", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 67
testRunner.Then("в счете регоператора дом доступен для прикрепления к счету и пользователь прикреп" +
                    "ляет дом к счету регопа", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("добавление к дому протокола решений собственников жилых помещений и привязка к сц" +
            "ец счету")]
        [NUnit.Framework.TestCaseAttribute("Номер", "2", null)]
        [NUnit.Framework.TestCaseAttribute("Дата протокола", "02.01.2015", null)]
        [NUnit.Framework.TestCaseAttribute("Дата вступления в силу", "02.01.2015", null)]
        [NUnit.Framework.TestCaseAttribute("Кредитная организация", "ОАО \"Россельхозбанк\"", null)]
        [NUnit.Framework.TestCaseAttribute("способ формирования фонда", "Специальный счет", null)]
        [NUnit.Framework.TestCaseAttribute("Владелец специального счета", "Региональный оператор", null)]
        public virtual void ДобавлениеКДомуПротоколаРешенийСобственниковЖилыхПомещенийИПривязкаКСцецСчету(string поле, string значение, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("добавление к дому протокола решений собственников жилых помещений и привязка к сц" +
                    "ец счету", exampleTags);
#line 78
this.ScenarioSetup(scenarioInfo);
#line 79
testRunner.Given("пользователь выбирает дом = ул. Совхозная, д. 111", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 80
testRunner.And(string.Format("добавлячет к нему протокол типа = \"Протокол решения собственников жилых помещений" +
                        "\" и заполняет поля {0} значением {1}", поле, значение), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 81
testRunner.And("сохраняет данные", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 82
testRunner.And("формирует уведомление с номером = 2 и номером счета = 113", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 83
testRunner.And("сохраняет данные уведомления", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 84
testRunner.When("пользователь переводит протокол в статус = Утверждено", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 85
testRunner.Then("в спец счете регоператора дом доступен для прикрепления к счету и пользователь пр" +
                    "икрепляет дом к счету регопа", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("добавление к дому протокола решения органа государственной власти и привязка к сч" +
            "ету регопа")]
        [NUnit.Framework.TestCaseAttribute("Номер", "3", null)]
        [NUnit.Framework.TestCaseAttribute("Дата протокола", "03.01.2015", null)]
        [NUnit.Framework.TestCaseAttribute("Дата вступления в силу", "03.01.2015", null)]
        [NUnit.Framework.TestCaseAttribute("Кредитная организация", "ОАО \"Россельхозбанк\"", null)]
        [NUnit.Framework.TestCaseAttribute("Способ формирования фонда на счету регионального оператора", "true", null)]
        public virtual void ДобавлениеКДомуПротоколаРешенияОрганаГосударственнойВластиИПривязкаКСчетуРегопа(string поле, string значение, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("добавление к дому протокола решения органа государственной власти и привязка к сч" +
                    "ету регопа", exampleTags);
#line 97
this.ScenarioSetup(scenarioInfo);
#line 98
testRunner.Given("пользователь выбирает дом = ул. Совхозная, д. 111", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 99
testRunner.And(string.Format("добавлячет к нему протокол типа = \"Протокол решения органа государственной власти" +
                        "\" и заполняет поля {0} значением {1} и прикрепляет файл протокола", поле, значение), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 100
testRunner.And("сохраняет данные", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 101
testRunner.When("пользователь переводит протокол в статус = Утверждено", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 102
testRunner.Then("в счете регоператора дом доступен для прикрепления к счету и пользователь прикреп" +
                    "ляет дом к счету регопа", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("добавление к дому протокола решения органа государственной власти и привязка к сп" +
            "ец счету")]
        [NUnit.Framework.TestCaseAttribute("Номер", "4", null)]
        [NUnit.Framework.TestCaseAttribute("Дата протокола", "04.01.2015", null)]
        [NUnit.Framework.TestCaseAttribute("Дата вступления в силу", "04.01.2015", null)]
        [NUnit.Framework.TestCaseAttribute("Кредитная организация", "ОАО \"Россельхозбанк\"", null)]
        [NUnit.Framework.TestCaseAttribute("Способ формирования фонда на счету регионального оператора", "false", null)]
        public virtual void ДобавлениеКДомуПротоколаРешенияОрганаГосударственнойВластиИПривязкаКСпецСчету(string поле, string значение, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("добавление к дому протокола решения органа государственной власти и привязка к сп" +
                    "ец счету", exampleTags);
#line 113
this.ScenarioSetup(scenarioInfo);
#line 114
testRunner.Given("пользователь выбирает дом = ул. Совхозная, д. 111", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 115
testRunner.And(string.Format("добавлячет к нему протокол типа = \"Протокол решения органа государственной власти" +
                        "\" и заполняет поля {0} значением {1} и прикрепляет файл протокола", поле, значение), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 116
testRunner.And("сохраняет данные", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 117
testRunner.When("пользователь переводит протокол в статус = Утверждено", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 118
testRunner.Then("дома нет в списке домов на счете регопа и нет в списке домов у спец счета", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("заполнение настройки параметров РФ")]
        [NUnit.Framework.TestCaseAttribute("Счет регионального оператора", null)]
        [NUnit.Framework.TestCaseAttribute("Специальный счет регионального оператора", null)]
        [NUnit.Framework.TestCaseAttribute("Специальный счет", null)]
        [NUnit.Framework.TestCaseAttribute("Не выбран", null)]
        public virtual void ЗаполнениеНастройкиПараметровРФ(string название, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("заполнение настройки параметров РФ", exampleTags);
#line 129
this.ScenarioSetup(scenarioInfo);
#line 130
testRunner.When("пользователь заходит в настройку параметров рф", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 131
testRunner.Then(string.Format("для checkbox {0} проставлены галочки", название), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("заполнение размеров взносов на КР")]
        [NUnit.Framework.TestCaseAttribute("с", "по", null)]
        [NUnit.Framework.TestCaseAttribute("01.01.2015", "31.12.2015", null)]
        public virtual void ЗаполнениеРазмеровВзносовНаКР(string аттрибут, string значение, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("заполнение размеров взносов на КР", exampleTags);
#line 141
this.ScenarioSetup(scenarioInfo);
#line 142
testRunner.When("пользователь добавляет запись в Размеры взносов на КР", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 143
testRunner.And(string.Format("заполняет аттрибуты {0} значениеми {1}", аттрибут, значение), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 144
testRunner.And("сохраняет данные", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 145
testRunner.Then("в появляется новая запись в Размерах взносов на КР", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("подтверждение начислений после расчета")]
        public virtual void ПодтверждениеНачисленийПослеРасчета()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("подтверждение начислений после расчета", ((string[])(null)));
#line 153
this.ScenarioSetup(scenarioInfo);
#line 154
testRunner.Given("лицевые счета есть в реестре лицевых счетов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 155
testRunner.Given("на домах есть протоколы расчета в статусе Утверждено", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 156
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 157
testRunner.Then("в процессах появляется строка с наименованием \"Создание неподтвержденных начислен" +
                    "ий по ЛС\" текущей датой и временем импорта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 158
testRunner.When("статус задачи = \"Успешно выполнена\" и процент выполнения = \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 159
testRunner.Then("в Реестре неподтвержденных начислений появляется запись с количеством ЛС, которые" +
                    " попадают в условия расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 160
testRunner.When("начисления не подтверждены", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Если ");
#line 161
testRunner.And("пользователь заврывает период", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 162
testRunner.Then("период не закрывается и падает ошибка с предупреждением о необходимости подтвержд" +
                    "ения начислений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 163
testRunner.When("пользователь подтверждает начисления в реестре неподтвержденных начислений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 164
testRunner.Then("у записи по выбранным начислениям в неподтвержденных начислениях меняется статус " +
                    "с \"Ожидание\" на \"Подтверждено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 165
testRunner.And("создается протокол расчета по каждому лс за текущий период", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("закрытие периода")]
        public virtual void ЗакрытиеПериода()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("закрытие периода", ((string[])(null)));
#line 168
this.ScenarioSetup(scenarioInfo);
#line 169
testRunner.Given("лицевые счета есть в реестре лицевых счетов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 170
testRunner.Given("на домах есть протоколы расчета в статусе Утверждено и с привязкой к счету регопа" +
                    " или к спец счету", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 171
testRunner.Given("на счете регопа или спец счета привязаны дома", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 172
testRunner.Given("произведен расчет начислений и подтверждены начисления", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 173
testRunner.When("пользователь закрывает текущий период", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 174
testRunner.And("в процессах появляется строка с наименованием \"Закрытие периода\" текущей датой и " +
                    "временем импорта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 175
testRunner.And("статус задачи = \"Успешно выполнена\" и процент выполнения = \"100\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 176
testRunner.Then("на ЛС, по которым был произведен расчет, появляются начисления по закрывающемуся " +
                    "периоду", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 177
testRunner.And("на домах, которые привязаны к ЛС в счете начислений появляются начисления по закр" +
                    "ывающемуся периоду", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 178
testRunner.And("рассчитывается исходящее сальдо по закрывающемуся периоду", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 179
testRunner.And("обновляется баланс счета (на доме, и в ЛС)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 180
testRunner.And("статус текущего периода = Закрыт и дата закрытия = текущей дате", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 181
testRunner.And("в периодах появляется новая запись с новым периодом, у которой статус = Открыт", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 182
testRunner.And("в счете дома и в карточке ЛС появляется новая запись по новому периоду", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 183
testRunner.And("входящее сальдо нового периода равно исходящему сальдо прошлого периода", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("сбой закрытия периода")]
        public virtual void СбойЗакрытияПериода()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("сбой закрытия периода", ((string[])(null)));
#line 186
this.ScenarioSetup(scenarioInfo);
#line 187
testRunner.Given("лицевые счета есть в реестре лицевых счетов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 188
testRunner.Given("на домах есть протоколы расчета в статусе Утверждено и с привязкой к счету регопа" +
                    " или к спец счету", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 189
testRunner.Given("на счете регопа или спец счета привязаны дома", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 190
testRunner.Given("произведен расчет начислений и подтверждены начисления", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 191
testRunner.Given("пользователь запустил закрытие периода", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 192
testRunner.Given("на ЛС, по которым был произведен расчет, появляются начисления по закрывающемуся " +
                    "периоду", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 193
testRunner.When("произошел сбой в системе/выключили свет/упал сервак", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 194
testRunner.And("пользователь повторно запустил закрытие периода", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 195
testRunner.Then("начисления, произведенные не до конца при первом закрытии периода, откатываюсь и " +
                    "задвоений по суммам нет", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
