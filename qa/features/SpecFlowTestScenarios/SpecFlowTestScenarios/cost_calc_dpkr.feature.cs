// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.3.0
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlowTestScenarios
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.3.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Расчет стоимости ДПКР")]
    public partial class РасчетСтоимостиДПКРFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "cost_calc_dpkr.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "Расчет стоимости ДПКР", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("расчет стоимости в ДПКР")]
        [NUnit.Framework.TestCaseAttribute("Площади здания по наружному обмеру", "Стоимость на единицу площади", "Площадь здания по наружному обмеру", null)]
        [NUnit.Framework.TestCaseAttribute("Количеству подъездов", "Стоимость на единицу объема", "Количество подъездов", null)]
        public virtual void РасчетСтоимостиВДПКР(string значение, string поле1, string поле2, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("расчет стоимости в ДПКР", exampleTags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
testRunner.When(string.Format("пользователь в справочнике ООИ для КЭ по полю \"Считать по\" выбирает значение \"{0}" +
                        "\"", значение), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 7
testRunner.And(string.Format("в справочнике Расценки по работам для КЭ заполнено значением поле \"{0}\"", поле1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 8
testRunner.And("производит Расчет ДПКР в долгосрочной программе", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 9
testRunner.Then(string.Format("в дпкр стоимость по кэ рассчитывается как значение из поля \"{0}\" * значение из по" +
                        "ля \"{1}\"", поле1, поле2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 10
testRunner.When("пользователь", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("расчет стоимости в Версии ДПКР")]
        [NUnit.Framework.TestCaseAttribute("Площади здания по наружному обмеру", "Стоимость на единицу площади", "Площадь здания по наружному обмеру", null)]
        [NUnit.Framework.TestCaseAttribute("Количеству подъездов", "Стоимость на единицу объема", "Количество подъездов", null)]
        public virtual void РасчетСтоимостиВВерсииДПКР(string значение, string поле1, string поле2, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("расчет стоимости в Версии ДПКР", exampleTags);
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
testRunner.When(string.Format("пользователь в справочнике ООИ для КЭ по полю \"Считать по\" выбирает значение \"{0}" +
                        "\"", значение), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 21
testRunner.And(string.Format("в справочнике Расценки по работам для КЭ заполнено значением поле \"{0}\"", поле1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 22
testRunner.And("производит Актуализацию стоимости в версии ДПКР", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 23
testRunner.Then(string.Format("в версии дпкр стоимость по кэ рассчитывается как значение из поля \"{0}\" * значени" +
                        "е из поля \"{1}\"", поле1, поле2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 24
testRunner.When("пользователь", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
