// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.3.0
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlowTestScenarios
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.3.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Реестр лицевых счетов")]
    public partial class РеестрЛицевыхСчетовFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "register_personal_acc.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "Реестр лицевых счетов", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("права доступа")]
        [NUnit.Framework.TestCaseAttribute("Категория льготы - Просмотр", null)]
        [NUnit.Framework.TestCaseAttribute("Категория льготы - Добавление", null)]
        public virtual void ПраваДоступа(string права, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("права доступа", exampleTags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
testRunner.When("пользователь переходит в Настройку ограничений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 7
testRunner.And("выбирает роль \"Администратор\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 8
testRunner.Then(string.Format("в списке аттрибутов есть аттрибут на права {0}", права), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное добавление записи в Категорию льгот со всеми заполненными полями")]
        [NUnit.Framework.TestCaseAttribute("Льготная категория", "1", null)]
        [NUnit.Framework.TestCaseAttribute("Дата действия с", "01.01.2015", null)]
        [NUnit.Framework.TestCaseAttribute("Дата действия по", "01.01.2015", null)]
        public virtual void УспешноеДобавлениеЗаписиВКатегориюЛьготСоВсемиЗаполненнымиПолями(string поле, string значение, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное добавление записи в Категорию льгот со всеми заполненными полями", exampleTags);
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
testRunner.Given("по выбранному ЛС нет ни одной записи в Категории льгот", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 19
testRunner.When("пользователь добавляет запись в Категорию льгот вручную", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 20
testRunner.And(string.Format("заполняет поле {0} значением {1}", поле, значение), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 21
testRunner.And("сохраняет данные", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 22
testRunner.Then("запись добавляется в категорию льгот", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("успешное добавление записи в Категорию льгот с незаполненными датами")]
        [NUnit.Framework.TestCaseAttribute("Дата действия с", null)]
        [NUnit.Framework.TestCaseAttribute("Дата действия по", null)]
        public virtual void УспешноеДобавлениеЗаписиВКатегориюЛьготСНезаполненнымиДатами(string поле, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("успешное добавление записи в Категорию льгот с незаполненными датами", exampleTags);
#line 32
this.ScenarioSetup(scenarioInfo);
#line 33
testRunner.Given("по выбранному ЛС нет ни одной записи в Категории льгот", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 34
testRunner.When("пользователь добавляет запись в Категорию льгот вручную", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 35
testRunner.And(string.Format("не заполняет поле {0}", поле), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 36
testRunner.And("сохраняет данные", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 37
testRunner.Then("запись добавляется в категорию льгот", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ошибка добавления записи с неверными датами")]
        [NUnit.Framework.TestCaseAttribute("Льготная категория", "1", null)]
        [NUnit.Framework.TestCaseAttribute("Дата действия с", "02.01.2015", null)]
        [NUnit.Framework.TestCaseAttribute("Дата действия по", "01.01.2015", null)]
        public virtual void ОшибкаДобавленияЗаписиСНевернымиДатами(string поле, string значение, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ошибка добавления записи с неверными датами", exampleTags);
#line 46
this.ScenarioSetup(scenarioInfo);
#line 47
testRunner.When("пользователь добавляет запись в Категорию льгот вручную", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 48
testRunner.And(string.Format("заполняет поле {0} значением {1}", поле, значение), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 49
testRunner.And("сохраняет данные", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 50
testRunner.Then("запись не добавляется в категорию льгот", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("неуспешное добавление записи в Категорию льгот с незаполненным полем \"Льготная ка" +
            "тегория\"")]
        [NUnit.Framework.TestCaseAttribute("Льготная категория", null)]
        public virtual void НеуспешноеДобавлениеЗаписиВКатегориюЛьготСНезаполненнымПолемЛьготнаяКатегория(string поле, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("неуспешное добавление записи в Категорию льгот с незаполненным полем \"Льготная ка" +
                    "тегория\"", exampleTags);
#line 60
this.ScenarioSetup(scenarioInfo);
#line 61
testRunner.Given("по выбранному ЛС нет ни одной записи в Категории льгот", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 62
testRunner.When("пользователь добавляет запись в Категорию льгот вручную", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 63
testRunner.And(string.Format("не заполняет поле {0}", поле), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 64
testRunner.And("сохраняет данные", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 65
testRunner.Then("запись не добавляется в категорию льгот", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("проверка непересечения действующих льгот")]
        [NUnit.Framework.TestCaseAttribute("Дата действия с", "01.01.2012", "Дата действия по", "02.01.2012", null)]
        [NUnit.Framework.TestCaseAttribute("Дата действия с", "03.01.2012", "Дата действия по", "", null)]
        public virtual void ПроверкаНепересеченияДействующихЛьгот(string аттрибут1, string значение1, string аттрибут2, string значение2, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("проверка непересечения действующих льгот", exampleTags);
#line 73
this.ScenarioSetup(scenarioInfo);
#line 74
testRunner.Given(string.Format("по выбранному ЛС добавлены записи в Категории льгот со значением {0} для аттрибут" +
                        "а {1} и значением {2} для аттрибута {3}", значение1, аттрибут1, значение2, аттрибут2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 75
testRunner.When("пользователь добавляет запись по льготе, где Дата действия с = 04.01.2012, Дата д" +
                    "ействия по = пусто", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 76
testRunner.And("сохраняет данные", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 77
testRunner.Then("запись не сохраняется и выходит ошибка о наличии пересекающейся даты", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("обновление списка записей в Категории льгот")]
        public virtual void ОбновлениеСпискаЗаписейВКатегорииЛьгот()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("обновление списка записей в Категории льгот", ((string[])(null)));
#line 87
this.ScenarioSetup(scenarioInfo);
#line 88
testRunner.When("пользователь обновляет данные по Категории льгот", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 89
testRunner.Then("отрабатывает действие обновления страницы", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 90
testRunner.And(@"в аттрибут ""Льготная категория"" подтягивается значение из справочника ""Группы льготных категорий граждан"" из поля ""Наименование"", и в аттрибут ""Процент льготы"" подтягивается значение из справочника ""Группы льготных категорий граждан"" из поля ""Процент льготы"", и имеются поля ""Дата действия с"", ""Дата действия по""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("проверка запрета сохранения даты слияния больше текущей даты")]
        public virtual void ПроверкаЗапретаСохраненияДатыСлиянияБольшеТекущейДаты()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("проверка запрета сохранения даты слияния больше текущей даты", ((string[])(null)));
#line 93
this.ScenarioSetup(scenarioInfo);
#line 94
testRunner.Given("пользователь в реестре лицевых счетов выбрает несколько ЛС по одной квартире и вы" +
                    "зывает операцию слияния счетов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 95
testRunner.When("пользователь в поле \"Дата\" выбирает значение > текущей даты \"Текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 96
testRunner.And("сохраняет данные", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 97
testRunner.Then("система не сохраняет такое значение в поле \"Дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("проверка сохранения верной даты слияния")]
        public virtual void ПроверкаСохраненияВернойДатыСлияния()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("проверка сохранения верной даты слияния", ((string[])(null)));
#line 100
this.ScenarioSetup(scenarioInfo);
#line 101
testRunner.Given("пользователь в реестре лицевых счетов выбрает несколько ЛС по одной квартире и вы" +
                    "зывает операцию слияния счетов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 102
testRunner.When("пользователь в поле \"Дата\" выбирает значение <= текущей даты \"Текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 103
testRunner.And("сохраняет данные", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 104
testRunner.Then("система сохраняет такое значение в поле \"Дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("проверка запрета сохранения даты закрытия больше текущей даты")]
        public virtual void ПроверкаЗапретаСохраненияДатыЗакрытияБольшеТекущейДаты()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("проверка запрета сохранения даты закрытия больше текущей даты", ((string[])(null)));
#line 107
this.ScenarioSetup(scenarioInfo);
#line 108
testRunner.Given("пользователь в реестре лицевых счетов выбрает несколько ЛС по одной квартире и вы" +
                    "зывает операцию закрытия счетов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 109
testRunner.When("пользователь в поле \"Дата\" выбирает значение > текущей даты \"Текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 110
testRunner.And("сохраняет данные", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 111
testRunner.Then("система не сохраняет такое значение в поле \"Дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("проверка сохранения верной даты закрытия")]
        public virtual void ПроверкаСохраненияВернойДатыЗакрытия()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("проверка сохранения верной даты закрытия", ((string[])(null)));
#line 114
this.ScenarioSetup(scenarioInfo);
#line 115
testRunner.Given("пользователь в реестре лицевых счетов выбрает несколько ЛС по одной квартире и вы" +
                    "зывает операцию закрытия счетов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 116
testRunner.When("пользователь в поле \"Дата\" выбирает значение <= текущей даты \"Текущая дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 117
testRunner.And("сохраняет данные", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 118
testRunner.Then("система сохраняет такое значение в поле \"Дата\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("вывод информации перед рачетом лицевых счетов")]
        [NUnit.Framework.TestCaseAttribute("Общее количество ЛС", null)]
        [NUnit.Framework.TestCaseAttribute("Расчет будет произведен по", null)]
        [NUnit.Framework.TestCaseAttribute("ЛС, начисления по которым будут проводиться с текущего периода", null)]
        [NUnit.Framework.TestCaseAttribute("ЛС по которым тариф расчета ниже муниципального тарифа", null)]
        [NUnit.Framework.TestCaseAttribute("Расчет не будет произведен по", null)]
        public virtual void ВыводИнформацииПередРачетомЛицевыхСчетов(string аттрибут, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("вывод информации перед рачетом лицевых счетов", exampleTags);
#line 121
this.ScenarioSetup(scenarioInfo);
#line 122
testRunner.When("пользователь в реестре лс выбирает Расчет лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 123
testRunner.Then(string.Format("выводится список аттрибутов \"{0}\"", аттрибут), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("вывод значения для аттрибута \"Общее количество ЛС\" при расчете лс")]
        public virtual void ВыводЗначенияДляАттрибутаОбщееКоличествоЛСПриРасчетеЛс()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("вывод значения для аттрибута \"Общее количество ЛС\" при расчете лс", ((string[])(null)));
#line 134
this.ScenarioSetup(scenarioInfo);
#line 135
testRunner.When("пользователь в реестре лс выбирает Расчет лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 136
testRunner.Then("в аттрибуте \"Общее количество ЛС\" выводится значение \"значение\" = количеству лице" +
                    "вых счетов в реестре лицевых счетов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("вывод значения для аттрибута \"Расчет будет произведен по: _________ ЛС\" при расче" +
            "те лс")]
        public virtual void ВыводЗначенияДляАттрибутаРасчетБудетПроизведенПо_________ЛСПриРасчетеЛс()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("вывод значения для аттрибута \"Расчет будет произведен по: _________ ЛС\" при расче" +
                    "те лс", ((string[])(null)));
#line 139
this.ScenarioSetup(scenarioInfo);
#line 140
testRunner.When("пользователь в реестре лс выбирает Расчет лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 141
testRunner.Then("в аттрибуте \"Расчет будет произведен по: _________ ЛС\" выводится значение \"значен" +
                    "ие\" = количеству лицевых счетов, которые будут рассчитаны", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("вывод значения для аттрибута \"ЛС, начисления по которым будут проводиться с текущ" +
            "его периода\" при расчете лс")]
        public virtual void ВыводЗначенияДляАттрибутаЛСНачисленияПоКоторымБудутПроводитьсяСТекущегоПериодаПриРасчетеЛс()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("вывод значения для аттрибута \"ЛС, начисления по которым будут проводиться с текущ" +
                    "его периода\" при расчете лс", ((string[])(null)));
#line 144
this.ScenarioSetup(scenarioInfo);
#line 145
testRunner.When("пользователь в реестре лс выбирает Расчет лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 146
testRunner.Then("значение в аттрибуте \"ЛС, начисления по которым будут проводиться с текущего пери" +
                    "ода:\" = значение \"Расчет будет произведен по: _________ ЛС\" за текущий период - " +
                    "значение \"Расчет будет произведен по: _________ ЛС\" за прошлый период", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 147
testRunner.When("получившееся значение в аттрибуте \"ЛС, начисления по которым будут проводиться с " +
                    "текущего периода:\" >= \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Если ");
#line 148
testRunner.Then("значение в аттрибуте \"ЛС, начисления по которым будут проводиться с текущего пери" +
                    "ода:\" заполнено", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 149
testRunner.When("получившееся значение в аттрибуте \"ЛС, начисления по которым будут проводиться с " +
                    "текущего периода:\" < \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Если ");
#line 150
testRunner.Then("значение в аттрибуте \"ЛС, начисления по которым будут проводиться с текущего пери" +
                    "ода:\" = \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("вывод значения для аттрибутов при расчете лс")]
        public virtual void ВыводЗначенияДляАттрибутовПриРасчетеЛс()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("вывод значения для аттрибутов при расчете лс", ((string[])(null)));
#line 153
this.ScenarioSetup(scenarioInfo);
#line 154
testRunner.When("пользователь в реестре лс выбирает Расчет лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 155
testRunner.Then("в аттрибуте \"статус ЛС\" выводится значение \"значение\" = количеству лицевых счетов" +
                    ", у которых статус лс = Закрыт или статус лс = Закрыт с долгом", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 156
testRunner.And("в аттрибуте \"доля собственности = 0\" выводится значение \"значение\" = количеству л" +
                    "ицевых счетов, у которых доля собственности = 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 157
testRunner.And("в аттрибуте \"статус протокола = Начальный\" выводится значение \"значение\" = количе" +
                    "ству лицевых счетов, у которых статус протокола = Начальный", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 158
testRunner.And("в аттрибуте \"дата действующего протокола > дата расчета\" выводится значение \"знач" +
                    "ение\" = количеству лицевых счетов, у которых дата действующего протокола > дата " +
                    "расчета", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 159
testRunner.And("в аттрибуте \"способ формирования фонда КР = специальный счет\" выводится значение " +
                    "\"значение\" = количеству лицевых счетов, у которых способ формирования фонда КР =" +
                    " специальный счет", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 160
testRunner.And("нет отметки в поле \"Ведение лицевых счетов\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 161
testRunner.And("в аттрибуте \"дом по адресу ЛС не принимает участие в ДПКР\" выводится значение \"зн" +
                    "ачение\" = количеству лицевых счетов, у которых в доме по адресу поле \"Дата включ" +
                    "ения в ДПКР\" не заполнено", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 162
testRunner.And("в аттрибуте \"был заключен договор с РКЦ\" выводится значение \"значение\" = количест" +
                    "ву лицевых счетов, был заключен договор с РКЦ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("подсчет количества уникальных лс для аттрибута \"Расчет не будет произведен по: __" +
            "_______ ЛС\" при расчете лс")]
        public virtual void ПодсчетКоличестваУникальныхЛсДляАттрибутаРасчетНеБудетПроизведенПо_________ЛСПриРасчетеЛс()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("подсчет количества уникальных лс для аттрибута \"Расчет не будет произведен по: __" +
                    "_______ ЛС\" при расчете лс", ((string[])(null)));
#line 165
this.ScenarioSetup(scenarioInfo);
#line 166
testRunner.Given("пользователь в реестре лс выбирает Расчет лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 167
testRunner.When("у ЛС статус лс = Закрыт или статус лс = Закрыт с долгом", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 168
testRunner.And("у ЛС доля собственности = 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 169
testRunner.And("у ЛС статус протокола = Начальный", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 170
testRunner.And("у ЛС дата действующего протокола > дата расчета", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 171
testRunner.And("у ЛС способ формирования фонда КР = специальный счет", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 172
testRunner.And("у ЛС по дому нет отметки в поле \"Ведение лицевых счетов\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 173
testRunner.And("у ЛС в доме по адресу поле \"Дата включения в ДПКР\" не заполнено", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 174
testRunner.And("у ЛС был заключен договор с РКЦ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 175
testRunner.Then(@"для аттрибут ""Расчет не будет произведен по: _________ ЛС"" рассчитывается количество уникальных ЛС по каждому условию выборки: статус лс = Закрыт или статус лс = Закрыт с долгом, статус протокола = НачальныйЭ, дата действующего протокола > дата расчета, способ формирования фонда КР = специальный счет, по дому нет отметки в поле ""Ведение лицевых счетов, в доме по адресу поле ""Дата включения в ДПКР"" не заполнено, был заключен договор с РКЦ", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("заполнение поля Примечание")]
        public virtual void ЗаполнениеПоляПримечание()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("заполнение поля Примечание", ((string[])(null)));
#line 178
this.ScenarioSetup(scenarioInfo);
#line 179
testRunner.When("пользователь в реестре лс выбирает Расчет лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 180
testRunner.And("заполняет текстовое поле \"Примечание\" в информационном окне", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 181
testRunner.And("сохраняет данные", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 182
testRunner.Then("из поля \"Примечание\" в информационном окне значение тянется в поле \"Примечание\" в" +
                    " реестре неподтвержденных начислений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("редактирование значений при вызове процедуры расчета лс")]
        [NUnit.Framework.TestCaseAttribute("статус ЛС", null)]
        [NUnit.Framework.TestCaseAttribute("доля собственности = 0", null)]
        [NUnit.Framework.TestCaseAttribute("статус протокола = Начальный", null)]
        [NUnit.Framework.TestCaseAttribute("дата действующего протокола > дата расчета", null)]
        [NUnit.Framework.TestCaseAttribute("способ формирования фонда КР = специальный счет", null)]
        [NUnit.Framework.TestCaseAttribute("дом по адресу ЛС не принимает участие в ДПКР", null)]
        [NUnit.Framework.TestCaseAttribute("был заключен договор с РКЦ", null)]
        public virtual void РедактированиеЗначенийПриВызовеПроцедурыРасчетаЛс(string аттрибут, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("редактирование значений при вызове процедуры расчета лс", exampleTags);
#line 184
this.ScenarioSetup(scenarioInfo);
#line 185
testRunner.When("пользователь в реестре лс выбирает Расчет лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 186
testRunner.And(string.Format("редактирует значение количества ЛС в аттрибутах \"{0}\"", аттрибут), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 187
testRunner.Then("измененные данные успешно сохраняются", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("наличие аттрибутов по редактируемому значению при вызове процедуры расчета лс")]
        [NUnit.Framework.TestCaseAttribute("статус ЛС", "Номер ЛС", null)]
        [NUnit.Framework.TestCaseAttribute("статус ЛС", "Расчетный счет регионального оператора", null)]
        [NUnit.Framework.TestCaseAttribute("статус ЛС", "Адрес", null)]
        [NUnit.Framework.TestCaseAttribute("статус ЛС", "Муниципальное образование", null)]
        [NUnit.Framework.TestCaseAttribute("статус ЛС", "Муниципальный район", null)]
        [NUnit.Framework.TestCaseAttribute("статус ЛС", "ФИО", null)]
        [NUnit.Framework.TestCaseAttribute("статус ЛС", "Тип абонента", null)]
        [NUnit.Framework.TestCaseAttribute("статус ЛС", "Дата открытия", null)]
        [NUnit.Framework.TestCaseAttribute("доля собственности = 0", "Номер ЛС", null)]
        [NUnit.Framework.TestCaseAttribute("доля собственности = 0", "Расчетный счет регионального оператора", null)]
        [NUnit.Framework.TestCaseAttribute("доля собственности = 0", "Адрес", null)]
        [NUnit.Framework.TestCaseAttribute("доля собственности = 0", "Муниципальное образование", null)]
        [NUnit.Framework.TestCaseAttribute("доля собственности = 0", "Муниципальный район", null)]
        [NUnit.Framework.TestCaseAttribute("доля собственности = 0", "ФИО", null)]
        [NUnit.Framework.TestCaseAttribute("доля собственности = 0", "Тип абонента", null)]
        [NUnit.Framework.TestCaseAttribute("доля собственности = 0", "Дата открытия", null)]
        [NUnit.Framework.TestCaseAttribute("статус протокола = Начальный", "Номер ЛС", null)]
        [NUnit.Framework.TestCaseAttribute("статус протокола = Начальный", "Расчетный счет регионального оператора", null)]
        [NUnit.Framework.TestCaseAttribute("статус протокола = Начальный", "Адрес", null)]
        [NUnit.Framework.TestCaseAttribute("статус протокола = Начальный", "Муниципальное образование", null)]
        [NUnit.Framework.TestCaseAttribute("статус протокола = Начальный", "Муниципальный район", null)]
        [NUnit.Framework.TestCaseAttribute("статус протокола = Начальный", "ФИО", null)]
        [NUnit.Framework.TestCaseAttribute("статус протокола = Начальный", "Тип абонента", null)]
        [NUnit.Framework.TestCaseAttribute("статус протокола = Начальный", "Дата открытия", null)]
        [NUnit.Framework.TestCaseAttribute("дата действующего протокола > дата расчета", "Номер ЛС", null)]
        [NUnit.Framework.TestCaseAttribute("дата действующего протокола > дата расчета", "Расчетный счет регионального оператора", null)]
        [NUnit.Framework.TestCaseAttribute("дата действующего протокола > дата расчета", "Адрес", null)]
        [NUnit.Framework.TestCaseAttribute("дата действующего протокола > дата расчета", "Муниципальное образование", null)]
        [NUnit.Framework.TestCaseAttribute("дата действующего протокола > дата расчета", "Муниципальный район", null)]
        [NUnit.Framework.TestCaseAttribute("дата действующего протокола > дата расчета", "ФИО", null)]
        [NUnit.Framework.TestCaseAttribute("дата действующего протокола > дата расчета", "Тип абонента", null)]
        [NUnit.Framework.TestCaseAttribute("дата действующего протокола > дата расчета", "Дата открытия", null)]
        [NUnit.Framework.TestCaseAttribute("способ формирования фонда КР = специальный счет", "Номер ЛС", null)]
        [NUnit.Framework.TestCaseAttribute("способ формирования фонда КР = специальный счет", "Расчетный счет регионального оператора", null)]
        [NUnit.Framework.TestCaseAttribute("способ формирования фонда КР = специальный счет", "Адрес", null)]
        [NUnit.Framework.TestCaseAttribute("способ формирования фонда КР = специальный счет", "Муниципальное образование", null)]
        [NUnit.Framework.TestCaseAttribute("способ формирования фонда КР = специальный счет", "Муниципальный район", null)]
        [NUnit.Framework.TestCaseAttribute("способ формирования фонда КР = специальный счет", "ФИО", null)]
        [NUnit.Framework.TestCaseAttribute("способ формирования фонда КР = специальный счет", "Тип абонента", null)]
        [NUnit.Framework.TestCaseAttribute("способ формирования фонда КР = специальный счет", "Дата открытия", null)]
        [NUnit.Framework.TestCaseAttribute("дом по адресу ЛС не принимает участие в ДПКР", "Номер ЛС", null)]
        [NUnit.Framework.TestCaseAttribute("дом по адресу ЛС не принимает участие в ДПКР", "Расчетный счет регионального оператора", null)]
        [NUnit.Framework.TestCaseAttribute("дом по адресу ЛС не принимает участие в ДПКР", "Адрес", null)]
        [NUnit.Framework.TestCaseAttribute("дом по адресу ЛС не принимает участие в ДПКР", "Муниципальное образование", null)]
        [NUnit.Framework.TestCaseAttribute("дом по адресу ЛС не принимает участие в ДПКР", "Муниципальный район", null)]
        [NUnit.Framework.TestCaseAttribute("дом по адресу ЛС не принимает участие в ДПКР", "ФИО", null)]
        [NUnit.Framework.TestCaseAttribute("дом по адресу ЛС не принимает участие в ДПКР", "Тип абонента", null)]
        [NUnit.Framework.TestCaseAttribute("дом по адресу ЛС не принимает участие в ДПКР", "Дата открытия", null)]
        [NUnit.Framework.TestCaseAttribute("был заключен договор с РКЦ", "Номер ЛС", null)]
        [NUnit.Framework.TestCaseAttribute("был заключен договор с РКЦ", "Расчетный счет регионального оператора", null)]
        [NUnit.Framework.TestCaseAttribute("был заключен договор с РКЦ", "Адрес", null)]
        [NUnit.Framework.TestCaseAttribute("был заключен договор с РКЦ", "Муниципальное образование", null)]
        [NUnit.Framework.TestCaseAttribute("был заключен договор с РКЦ", "Муниципальный район", null)]
        [NUnit.Framework.TestCaseAttribute("был заключен договор с РКЦ", "ФИО", null)]
        [NUnit.Framework.TestCaseAttribute("был заключен договор с РКЦ", "Тип абонента", null)]
        [NUnit.Framework.TestCaseAttribute("был заключен договор с РКЦ", "Дата открытия", null)]
        public virtual void НаличиеАттрибутовПоРедактируемомуЗначениюПриВызовеПроцедурыРасчетаЛс(string аттрибут1, string аттрибут2, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("наличие аттрибутов по редактируемому значению при вызове процедуры расчета лс", exampleTags);
#line 200
this.ScenarioSetup(scenarioInfo);
#line 201
testRunner.When("пользователь в реестре лс выбирает Расчет лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 202
testRunner.And(string.Format("редактирует значение количества ЛС в аттрибутах \"{0}\"", аттрибут1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 203
testRunner.Then(string.Format("в списке аттрибутов имеется аттрибут \"{0}\"", аттрибут2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("принятие решения о проведении перерасчета по ЛС")]
        public virtual void ПринятиеРешенияОПроведенииПерерасчетаПоЛС()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("принятие решения о проведении перерасчета по ЛС", ((string[])(null)));
#line 266
this.ScenarioSetup(scenarioInfo);
#line 267
testRunner.When("пользователь в реестре лс выбирает Расчет лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 268
testRunner.And("подтверждает проведение перерасчета по ЛС согласием (\"Да\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 269
testRunner.Then("проводятся начисления по ЛС, учитывая ЛС, у которых есть долг за предыдущие перио" +
                    "ды (с перерасчетом)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("откая от проведении перерасчета по ЛС")]
        public virtual void ОткаяОтПроведенииПерерасчетаПоЛС()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("откая от проведении перерасчета по ЛС", ((string[])(null)));
#line 273
this.ScenarioSetup(scenarioInfo);
#line 274
testRunner.When("пользователь в реестре лс выбирает Расчет лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 275
testRunner.And("отказывается проводить перерасчет по ЛС (\"Нет\")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 276
testRunner.Then("проводятся начисления по ЛС, не учитывая ЛС, у которых есть долг за предыдущие пе" +
                    "риоды (без перерасчета)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
