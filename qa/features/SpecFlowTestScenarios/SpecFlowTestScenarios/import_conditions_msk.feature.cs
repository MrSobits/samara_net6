// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.3.0
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlowTestScenarios
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.3.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("тестирование Импорта состояний ООИ (Москва)")]
    public partial class ТестированиеИмпортаСостоянийООИМоскваFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "import_conditions_msk.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "тестирование Импорта состояний ООИ (Москва)", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
#line 6
testRunner.Given("Пользователь логин \"admin\", пароль \"admin\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 7
testRunner.And("тестируемая система \"http://gkh-test.bars-open.ru/dev-msk\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("последовательность выполнение Импорта оценок состояния ООИ")]
        public virtual void ПоследовательностьВыполнениеИмпортаОценокСостоянияООИ()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("последовательность выполнение Импорта оценок состояния ООИ", ((string[])(null)));
#line 10
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 12
testRunner.When("пользователь проводит Ипорт ДПКР (Москва)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 13
testRunner.Then("после завершения импорта он обязани провести Импорта оценок состояния ООИ (Москва" +
                    ")", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 14
testRunner.When("Ипорт ДПКР (Москва) ранее не был проведен", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Если ");
#line 15
testRunner.And("пользователь проводит Импорта оценок состояния ООИ (Москва)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 16
testRunner.Then("оценки состояний ООИ не сядут и в логе будет соответствующая запись с наличием ош" +
                    "ибок", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("проверка формата импортируемого файла")]
        public virtual void ПроверкаФорматаИмпортируемогоФайла()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("проверка формата импортируемого файла", ((string[])(null)));
#line 19
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 20
testRunner.Given("файл для импорта данных", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 21
testRunner.When("пользователь импортирует файл", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 22
testRunner.Then("система проверяет файл на соответствие формату по наличию значения обязательного " +
                    "аттрибута \"UID\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 23
testRunner.When("в файле не указано значение по аттрибуту \"UID\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Если ");
#line 24
testRunner.Then("файл не грузится и в лог записывается ошибка и причина ошибки загрузки файла, кол" +
                    "ичество загруженных записей, количество незагруженных записей, прочая информация" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 25
testRunner.When("в импортируемом файле нет столбца с аттрибутом \"UID\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Если ");
#line 26
testRunner.Then("файл не грузится и в лог записывается ошибка и причина ошибки загрузки файла", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("проверка формата импортируемого файла на наличие других аттрибутов")]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O01 MZI_ES_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O02 MZI_CO_cherdak_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O02 MZI_CO_tech_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O02 MZI_CO_etaj_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O03 MZI_GS_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O04 MZI_HVS_etaj_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O04 MZI_HVS_pojar_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O04 MZI_HVS_tech_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O05 MZI_GVS_cherdak_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O05 MZI_GVS_tech_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O05 MZI_GVS_etaj_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O06 MZI_Kanal_tech_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O06 MZI_Kanal_etaj_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O07 MZI_Mys_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O09 MZI_SB_PPADY_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG3O01 MZI_Fasad_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG3O01 MZI_Fasad_styki_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG3O02 MZI_Kon_el_Balk_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG3O04 MZI_Kon_el_Vodootvod_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG4O06 MZI_Podval_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG5O01 MZI_Krov_Ocenka_krov", null)]
        public virtual void ПроверкаФорматаИмпортируемогоФайлаНаНаличиеДругихАттрибутов(string аттрибут, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("проверка формата импортируемого файла на наличие других аттрибутов", exampleTags);
#line 29
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 30
testRunner.Given("файл для импорта данных", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 31
testRunner.When("пользователь импортирует файл", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 32
testRunner.Then(string.Format("система проверяет файл на соответствие формату по наличию аттрибутов в файле {0}", аттрибут), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 33
testRunner.When(string.Format("в файле не указано значение хотя бы по одному из аттрибутов {0}", аттрибут), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Если ");
#line 34
testRunner.Then("файл загружается", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 35
testRunner.And("и в лог записывается количество загруженных записей, количество незагруженных зап" +
                    "исей, прочая информация", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 36
testRunner.When(string.Format("в файле отсутствует хотя бы один из аттрибутов {0}", аттрибут), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Если ");
#line 37
testRunner.Then("файл не грузится и в лог записывается ошибка и причина ошибки загрузки файла", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("распределение оценок состоянии ООИ")]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O01 MZI_ES_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O02 MZI_CO_cherdak_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O02 MZI_CO_tech_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O02 MZI_CO_etaj_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O03 MZI_GS_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O04 MZI_HVS_etaj_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O04 MZI_HVS_pojar_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O04 MZI_HVS_tech_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O05 MZI_GVS_cherdak_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O05 MZI_GVS_tech_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O05 MZI_GVS_etaj_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O06 MZI_Kanal_tech_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O06 MZI_Kanal_etaj_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O07 MZI_Mys_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG1O09 MZI_SB_PPADY_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG3O01 MZI_Fasad_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG3O01 MZI_Fasad_styki_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG3O02 MZI_Kon_el_Balk_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG3O04 MZI_Kon_el_Vodootvod_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG4O06 MZI_Podval_Ocenka", null)]
        [NUnit.Framework.TestCaseAttribute("MKDOG5O01 MZI_Krov_Ocenka_krov", null)]
        public virtual void РаспределениеОценокСостоянииООИ(string аттрибут, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("распределение оценок состоянии ООИ", exampleTags);
#line 65
this.ScenarioSetup(scenarioInfo);
#line 5
this.FeatureBackground();
#line 66
testRunner.Given("файл для импорта данных", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 67
testRunner.When("пользователь импортирует файл", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 68
testRunner.And(string.Format("данные из аттрибута {0} загружаются без ошибок", аттрибут), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 69
testRunner.Then("система находит дома по соотнесению аттрибута \"uid\" из файла с аттрибутом \"uid\", " +
                    "который уже есть в нашей системе после Импорта дпкр", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
