// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.3.0
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlowTestScenarios
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.3.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("доработки в карточке жилого дома")]
    public partial class ДоработкиВКарточкеЖилогоДомаFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "rf.register_houses_card.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "доработки в карточке жилого дома", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ограничение на выбор даты в разделе жилого дома \"Протоколы и решения собственнико" +
            "в\"")]
        [NUnit.Framework.TestCaseAttribute("Протокол о формировании фонда капитального ремонта", "Дата протокола не может быть больше текущей даты", null)]
        [NUnit.Framework.TestCaseAttribute("Протокол о выборе управляющей организации", "Дата протокола не может быть больше текущей даты", null)]
        [NUnit.Framework.TestCaseAttribute("Постановление Исполкома МО", "Дата протокола не может быть больше текущей даты", null)]
        public virtual void ОграничениеНаВыборДатыВРазделеЖилогоДомаПротоколыИРешенияСобственников(string тип_Протокола, string сообщение, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ограничение на выбор даты в разделе жилого дома \"Протоколы и решения собственнико" +
                    "в\"", exampleTags);
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
testRunner.Given("открыт раздел \"Протоколы и решения собственников\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 6
testRunner.Given("открыта форма добавления новой записи в гриде \"Протjколы\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 7
testRunner.Given(string.Format("в поле \"Тип протокола\" значение {0}", тип_Протокола), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 8
testRunner.Given("заполнено поле \"Номер\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 9
testRunner.Given("заполнено поле \"Файл\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 10
testRunner.Given("заполнено поле \"Количество голосов (кв.м.):\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 11
testRunner.Given("заполнено поле \"Общее количество голосов (кв.м.):\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 12
testRunner.Given("заполнено поле \"Доля принявших участие (%):\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 13
testRunner.When("я заполняю поле \"Дата\" датой больше текущей", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 14
testRunner.Then(string.Format("выводится форма с информацией {0}", сообщение), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 15
testRunner.And("запись не сохраняется", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Контроль ввода площадей в карточке жилого дома, раздел \"Общие сведения\" (ХМАО)")]
        [NUnit.Framework.TestCaseAttribute("Площадь частной собственности", "<=", "Общая площадь жилых и нежилых помещений", "Площадь частной собственности должна быть меньше или равна Общей площади жилых и " +
            "нежилых помещений", null)]
        [NUnit.Framework.TestCaseAttribute("Площадь муниципальной собственности", "<=", "Общая площадь жилых и нежилых помещений", "Площадь муниципальной собственности должна быть меньше или равна Общей площади жи" +
            "лых и нежилых помещений", null)]
        [NUnit.Framework.TestCaseAttribute("Площадь государственной собственности", "<=", "Общая площадь жилых и нежилых помещений", "Площадь государственной собственности должна быть меньше или равна Общей площади " +
            "жилых и нежилых помещений", null)]
        [NUnit.Framework.TestCaseAttribute("Площадь государственной собственности", "=", "в т.ч. жилых всего + в т.ч. нежилых помещений, функционального назначения", "Общая площадь жилых и нежилых помещений должна быть равна сумме двух показателей " +
            "«В т.ч. жилых всего» и «В т.ч. нежилых помещений, функционального назначения", null)]
        [NUnit.Framework.TestCaseAttribute("Общая площадь жилых и нежилых помещений", "=", "Площадь частной собственности + Площадь муниципальной собственности + Площадь гос" +
            "ударственной собственности", "Общая площадь жилых и нежилых помещений должна быть равна сумме трех показателей:" +
            " «Площадь частной собственности», «Площадь муниципальной собственности» и «Площа" +
            "дь государственной собственности", null)]
        [NUnit.Framework.TestCaseAttribute("В т.ч. жилых всего", "<=", "Общая площадь жилых и нежилых помещений", "Показатель «В т.ч. жилых всего» должен быть меньше или равен общей площади жилых " +
            "и нежилых помещений", null)]
        [NUnit.Framework.TestCaseAttribute("В т.ч. нежилых помещений, функционального назначения", "<", "Общая площадь жилых и нежилых помещений", "Показатель «В т.ч. нежилых помещений, функционального назначения» должен быть мен" +
            "ьше общей площади жилых и нежилых помещений", null)]
        [NUnit.Framework.TestCaseAttribute("Общая площадь жилых и нежилых помещений", ">=", "Сумма всех площадей помещений на вкладке «Сведения о помещениях»", "Общая площадь жилых и нежилых помещений» должна быть больше или равна сумме всех " +
            "площадей помещений", null)]
        public virtual void КонтрольВводаПлощадейВКарточкеЖилогоДомаРазделОбщиеСведенияХМАО(string показатель1, string правило, string показатель2, string сообщение, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Контроль ввода площадей в карточке жилого дома, раздел \"Общие сведения\" (ХМАО)", exampleTags);
#line 24
this.ScenarioSetup(scenarioInfo);
#line 25
testRunner.Given("Пользователь с ролью администратора, логин \"admin\", пароль \"admin\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 26
testRunner.Given("тестируемая система \"http://gkh-test.bars-open.ru/dev-hmao/\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 27
testRunner.Given("открыт раздел \"Общие сведения\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 28
testRunner.When("сохраняю раздел \"Общие сведения\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 29
testRunner.And(string.Format("заполнены поля {0} и {1}", показатель1, показатель2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 30
testRunner.And(string.Format("их значения соответствуют правилу {0}", правило), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 31
testRunner.Then(string.Format("выходит {0}", сообщение), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 32
testRunner.And("введенные значения не сохраняются", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 33
testRunner.When("захожу в раздел", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 34
testRunner.When(string.Format("поля {0} или {1} не заполнены (в поле пусто)", показатель1, показатель2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Если ");
#line 35
testRunner.Then(string.Format("ошибка {0} не выводится", сообщение), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 36
testRunner.And("информация сохраняется", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 37
testRunner.When(string.Format("поля или одно из полей {0} или {1} заполнены значением \"0\"", показатель1, показатель2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Если ");
#line 38
testRunner.Then("поля считаются заполненными", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 39
testRunner.And("происходит котроль ввода площадей", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("новое поле \"Всего баллов\" в разделе \"Конструктивные характеристики\" (Москва)")]
        [NUnit.Framework.TestCaseAttribute("Всего баллов", "Просмотр", null)]
        [NUnit.Framework.TestCaseAttribute("Всего баллов", "Изменение", null)]
        public virtual void НовоеПолеВсегоБалловВРазделеКонструктивныеХарактеристикиМосква(string поле, string права, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("новое поле \"Всего баллов\" в разделе \"Конструктивные характеристики\" (Москва)", exampleTags);
#line 54
this.ScenarioSetup(scenarioInfo);
#line 55
testRunner.Given("Пользователь с ролью администратора, логин \"admin\", пароль \"admin\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 56
testRunner.Given("тестируемая система \"http://gkh-test.bars-open.ru/dev-msk/\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 57
testRunner.Given("открыт раздел \"Конструктивные характеристики\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 58
testRunner.When("захожу в в Администрировании/Настройка прав доступа/Настройка ограничений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 59
testRunner.And("выбираю роль = Администратор", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 60
testRunner.And("перехожу в дереве Модуль ЖКХ - Жилые дома - Поля", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 61
testRunner.Then(string.Format("в списке есть нужное нам поле {0} с правами {1}", поле, права), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 62
testRunner.When(string.Format("проставляю галочки для поля {0} на правах {1}", поле, права), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 63
testRunner.And("возвращаюсь в раздел жилого дома \"Конструктивные характеристики\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 64
testRunner.And("перехожу на подвкладку \"Конструктивные элементы дома\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 65
testRunner.Then("вижу поле \"Всего баллов\" над гридом конструктивных элементов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 66
testRunner.When("редактирую вручную с клавиатуры поле \"Всего баллов\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 67
testRunner.Then("система разрешает ввод только положительного целого значения", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 68
testRunner.And("сохраняет введенное вручную значение", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 69
testRunner.When("захожу в в Администрировании/Настройка прав доступа/Настройка ограничений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 70
testRunner.And("выбираю роль = Администратор", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 71
testRunner.And("перехожу в дереве Модуль ЖКХ - Жилые дома - Поля", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 72
testRunner.Then(string.Format("в списке есть нужное нам поле {0} с правами {1}", поле, права), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 73
testRunner.When(string.Format("снимаю галочки для поля {0} на правах {1}", поле, права), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 74
testRunner.And("возвращаюсь в раздел жилого дома \"Конструктивные характеристики\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 75
testRunner.And("перехожу на подвкладку \"Конструктивные элементы дома\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 76
testRunner.Then("не вижу поля \"Всего баллов\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("новое поле \"Состояние\" в разделе \"Конструктивные характеристики\" на форме КЭ (Мос" +
            "ква)")]
        [NUnit.Framework.TestCaseAttribute("Состояние", "Просмотр", null)]
        [NUnit.Framework.TestCaseAttribute("Состояние", "Изменение", null)]
        public virtual void НовоеПолеСостояниеВРазделеКонструктивныеХарактеристикиНаФормеКЭМосква(string поле, string права, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("новое поле \"Состояние\" в разделе \"Конструктивные характеристики\" на форме КЭ (Мос" +
                    "ква)", exampleTags);
#line 85
this.ScenarioSetup(scenarioInfo);
#line 86
testRunner.Given("Пользователь с ролью администратора, логин \"admin\", пароль \"admin\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 87
testRunner.Given("тестируемая система \"http://gkh-test.bars-open.ru/dev-msk/\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 88
testRunner.Given("открыт раздел \"Конструктивные характеристики\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 89
testRunner.When("захожу в в Администрировании/Настройка прав доступа/Настройка ограничений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 90
testRunner.And("выбираю роль = Администратор", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 91
testRunner.And("перехожу в дереве Модуль ЖКХ - Жилые дома - Поля", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 92
testRunner.Then(string.Format("в списке есть нужное нам поле {0} с правами {1}", поле, права), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 93
testRunner.When(string.Format("проставляю галочки для поля {0} на правах {1}", поле, права), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 94
testRunner.And("возвращаюсь в раздел жилого дома \"Конструктивные характеристики\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 95
testRunner.And("открываю на редактирование любой конструктивный элемент", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 96
testRunner.Then("вижу на форме редактирования КЭ поле \"Состояние\" с выпадающим списком значений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 97
testRunner.When("прехожу к заполнению поля", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 98
testRunner.Then("в выпадающем списке жестко привязаны значения <значение>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 99
testRunner.When("пытаюсь ввести данные с клавиатуры", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 100
testRunner.Then("система не дает ввобд значений с клавиатуры", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 101
testRunner.And("выбор возможен только из имеющихся значений <значение>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 102
testRunner.When("захожу в в Администрировании/Настройка прав доступа/Настройка ограничений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 103
testRunner.And("выбираю роль = Администратор", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 104
testRunner.And("перехожу в дереве Модуль ЖКХ - Жилые дома - Поля", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 105
testRunner.Then(string.Format("в списке есть нужное нам поле {0} с правами {1}", поле, права), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 106
testRunner.When(string.Format("снимаю галочки для поля {0} на правах {1}", поле, права), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 107
testRunner.And("возвращаюсь в раздел жилого дома \"Конструктивные характеристики\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 108
testRunner.And("перехожу на подвкладку \"Конструктивные элементы дома\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 109
testRunner.And("открываю на редактирование любой конструктивный элемент", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 110
testRunner.Then("не вижу поля \"Состояние\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("проверка историчности поля \"Классификация дома\"")]
        [NUnit.Framework.TestCaseAttribute("Наименование параметра", null)]
        [NUnit.Framework.TestCaseAttribute("Описание измененного атрибута", null)]
        [NUnit.Framework.TestCaseAttribute("Значение", null)]
        [NUnit.Framework.TestCaseAttribute("Дата начала действия значения", null)]
        [NUnit.Framework.TestCaseAttribute("Дата установки значения", null)]
        [NUnit.Framework.TestCaseAttribute("Пользователь", null)]
        public virtual void ПроверкаИсторичностиПоляКлассификацияДома(string аттрибуты, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("проверка историчности поля \"Классификация дома\"", exampleTags);
#line 131
this.ScenarioSetup(scenarioInfo);
#line 132
testRunner.Given("Пользователь логин \"admin_tat\", пароль \"supergkhtat\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 133
testRunner.And("тестируемая система \"http://gkh-test.bars-open.ru/dev-rt\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 134
testRunner.When("пользователь просматривает данные по классификации дома", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 135
testRunner.Then("ему доступен просмотр истории изменений по этому полю", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 136
testRunner.And(string.Format("в истории изменений пользователь видит информацию измененных значений по аттрибут" +
                        "ам {0}", аттрибуты), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("переименование поля \"Общая площадь МКД\" в \"Общая площадь\"")]
        public virtual void ПереименованиеПоляОбщаяПлощадьМКДВОбщаяПлощадь()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("переименование поля \"Общая площадь МКД\" в \"Общая площадь\"", ((string[])(null)));
#line 148
 this.ScenarioSetup(scenarioInfo);
#line 149
 testRunner.When("пользователь заходит в общии сведения по дому", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 150
 testRunner.Then("в списке полей есть поле с названием \"Общая площадь\" и нет поля с названием \"Обща" +
                    "я площадь МКД\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
