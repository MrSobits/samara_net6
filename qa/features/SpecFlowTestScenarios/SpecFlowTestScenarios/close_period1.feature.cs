// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.3.0
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlowTestScenarios
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.3.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Закрытие периода начислений")]
    public partial class ЗакрытиеПериодаНачисленийFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "close_period.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "Закрытие периода начислений", "описание функционала закрытия периода", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("наполнение реестра жилых домов перед проведением закрытия периода")]
        [NUnit.Framework.TestCaseAttribute("Татарстан Респ, Пестречинский р-н, с. Пестрецы", "Вишневая ул", "72", "Многоквартирный", null)]
        public virtual void НаполнениеРеестраЖилыхДомовПередПроведениемЗакрытияПериода(string населённыйПункт, string улица, string номерДома, string видДома, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("наполнение реестра жилых домов перед проведением закрытия периода", exampleTags);
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
testRunner.When("пользователь добавляет дом в Реестр жилых домов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 9
testRunner.And(string.Format("у этого дома устанавливает поле Населённый пункт \"{0}\"", населённыйПункт), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 10
testRunner.And(string.Format("у этого дома устанавливает поле Улица \"{0}\"", улица), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 11
testRunner.And(string.Format("у этого дома устанавливает поле Номер Дома \"{0}\"", номерДома), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 12
testRunner.And(string.Format("у этого дома устанавливает поле Вид дома \"{0}\"", видДома), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 13
testRunner.And("сохраняет этот дом", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 14
testRunner.Then("запись по новому дому добавляется в реестр жилых домов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("наполнение реестра лс данными через импорт абонентов")]
        public virtual void НаполнениеРеестраЛсДаннымиЧерезИмпортАбонентов()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("наполнение реестра лс данными через импорт абонентов", ((string[])(null)));
#line 21
this.ScenarioSetup(scenarioInfo);
#line 22
testRunner.When("пользователь в Импорте абонентов прикрепил файл импорта \"имя\" \"с заменой\" существ" +
                    "ующих сведений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 23
testRunner.Then("в Логах загрузок появляется запись с типом \"Импорт абонентов\" текущей датой и вре" +
                    "менем импорта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 24
testRunner.When("по импорту абонентов количество ошибок = \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Если ");
#line 25
testRunner.Then("в реестре лицевых счетов добавлены новые записи из файла импорта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 26
testRunner.When("по по импорту абонентов количество ошибок < \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Если ");
#line 27
testRunner.Then("пользователь скачивает лог импорта", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("наполнение реестра лс данными через реестр абонентов")]
        public virtual void НаполнениеРеестраЛсДаннымиЧерезРеестрАбонентов()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("наполнение реестра лс данными через реестр абонентов", ((string[])(null)));
#line 30
this.ScenarioSetup(scenarioInfo);
#line 31
testRunner.When("пользователь в доме по адресу = \"ул. Совхозная, д. 111\" добавляет помещение, где " +
                    "номер квартиры = \"900\", общая площадь = \"51\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 32
testRunner.Then("в карточке дома в сведениях о помещениях появляется новая строка", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 33
testRunner.When("пользователь в реестре абонентов добавляет нового абонента и заполняет имя = \"т\"," +
                    " фамилию = \"т\", отчество = \"т\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 34
testRunner.Then("в реестре абонентов появляется новая строка", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 35
testRunner.And("у абонента \"т т т\" количество лс = \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 36
testRunner.When("пользователь по абоненту \"т т т\" добавляет жилой дом \"ул. Совхозная, д. 111\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 37
testRunner.And("выбирает квартиру = \"900\" и выбирает у квартиры долю собственности = \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 38
testRunner.Then("у абонента \"т т т\" количество лс = \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 39
testRunner.And("в реестре лс появляется новая запись", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("создание первичного периода начислений")]
        public virtual void СозданиеПервичногоПериодаНачислений()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("создание первичного периода начислений", ((string[])(null)));
#line 42
this.ScenarioSetup(scenarioInfo);
#line 43
testRunner.When("пользователь заходит в периоды начислений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 44
testRunner.And("ни одного периода еще нет", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 45
testRunner.Then("Период автоматически создается", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("добавление к дому протокола решений собственников жилых помещений и привязка к сч" +
            "ету регопа")]
        [NUnit.Framework.TestCaseAttribute("1", "01.01.2015", "01.01.2015", "ОАО \"Россельхозбанк\"", "Счет регионального оператора", null)]
        public virtual void ДобавлениеКДомуПротоколаРешенийСобственниковЖилыхПомещенийИПривязкаКСчетуРегопа(string номер, string датаПротокола, string датаВступленияВСилу, string кредитнаяОрганизация, string способФормированияФонда, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("добавление к дому протокола решений собственников жилых помещений и привязка к сч" +
                    "ету регопа", exampleTags);
#line 48
this.ScenarioSetup(scenarioInfo);
#line 49
testRunner.Given("пользователь выбирает дом = \"л. Совхозная, д. 111\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 50
testRunner.And("добавлячет к нему протокол типа = \"Протокол решения собственников жилых помещений" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 51
testRunner.And(string.Format("заполняет у протокола поля Номер {0}", номер), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 52
testRunner.And(string.Format("заполняет у протокола поля Дата протокола {0}", датаПротокола), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 53
testRunner.And(string.Format("заполняет у протокола поля Дата вступления в силу {0}", датаВступленияВСилу), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 54
testRunner.And(string.Format("заполняет у протокола поля Кредитная организация {0}", кредитнаяОрганизация), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 55
testRunner.And(string.Format("заполняет у протокола поля способ формирования фонда {0}", способФормированияФонда), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 56
testRunner.And("формирует уведомление с номером = \"1\" и номером счета = \"112\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 57
testRunner.When("пользователь переводит протокол в статус = \"Утверждено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 58
testRunner.Then("в счете регоператора дом доступен для прикрепления к счету и пользователь прикреп" +
                    "ляет дом к счету регопа", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("добавление к дому протокола решений собственников жилых помещений и привязка к сц" +
            "ец счету")]
        [NUnit.Framework.TestCaseAttribute("1", "01.01.2015", "01.01.2015", "ОАО \"Россельхозбанк\"", "Счет регионального оператора", "Региональный оператор", null)]
        public virtual void ДобавлениеКДомуПротоколаРешенийСобственниковЖилыхПомещенийИПривязкаКСцецСчету(string номер, string датаПротокола, string датаВступленияВСилу, string кредитнаяОрганизация, string способФормированияФонда, string владелецСпециальногоСчета, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("добавление к дому протокола решений собственников жилых помещений и привязка к сц" +
                    "ец счету", exampleTags);
#line 65
this.ScenarioSetup(scenarioInfo);
#line 66
testRunner.Given("пользователь выбирает дом = \"ул. Совхозная, д. 111\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 67
testRunner.And("добавлячет к нему протокол типа = \"Протокол решения собственников жилых помещений" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 68
testRunner.And(string.Format("заполняет у протокола поля Номер {0}", номер), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 69
testRunner.And(string.Format("заполняет у протокола поля Дата протокола {0}", датаПротокола), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 70
testRunner.And(string.Format("заполняет у протокола поля Дата вступления в силу {0}", датаВступленияВСилу), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 71
testRunner.And(string.Format("заполняет у протокола поля Кредитная организация {0}", кредитнаяОрганизация), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 72
testRunner.And(string.Format("заполняет у протокола поля способ формирования фонда {0}", способФормированияФонда), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 73
testRunner.And(string.Format("заполняет у протокола поля Владелец специального счета {0}", владелецСпециальногоСчета), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 74
testRunner.And("формирует уведомление с номером = \"2\" и номером счета = \"113\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 75
testRunner.When("пользователь переводит протокол в статус = \"Утверждено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 76
testRunner.Then("в спец счете регоператора дом доступен для прикрепления к счету и пользователь пр" +
                    "икрепляет дом к счету регопа", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("добавление к дому протокола решения органа государственной власти и привязка к сч" +
            "ету регопа")]
        [NUnit.Framework.TestCaseAttribute("1", "01.01.2015", "01.01.2015", "ОАО \"Россельхозбанк\"", "true", null)]
        public virtual void ДобавлениеКДомуПротоколаРешенияОрганаГосударственнойВластиИПривязкаКСчетуРегопа(string номер, string датаПротокола, string датаВступленияВСилу, string кредитнаяОрганизация, string способФормированияФондаНаСчетуРегиональногоОператора, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("добавление к дому протокола решения органа государственной власти и привязка к сч" +
                    "ету регопа", exampleTags);
#line 83
this.ScenarioSetup(scenarioInfo);
#line 84
testRunner.Given("пользователь выбирает дом = \"ул. Совхозная, д. 111\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 85
testRunner.And("добавлячет к нему протокол типа = \"Протокол решения органа государственной власти" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 86
testRunner.And(string.Format("заполняет у протокола поля Номер {0}", номер), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 87
testRunner.And(string.Format("заполняет у протокола поля Дата протокола {0}", датаПротокола), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 88
testRunner.And(string.Format("заполняет у протокола поля Дата вступления в силу {0}", датаВступленияВСилу), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 89
testRunner.And(string.Format("заполняет у протокола поля Кредитная организация {0}", кредитнаяОрганизация), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 90
testRunner.And(string.Format("заполняет у протокола поля Способ формирования фонда на счету регионального опера" +
                        "тора {0}", способФормированияФондаНаСчетуРегиональногоОператора), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 91
testRunner.When("пользователь переводит протокол в статус = \"Утверждено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 92
testRunner.Then("в счете регоператора дом доступен для прикрепления к счету и пользователь прикреп" +
                    "ляет дом к счету регопа", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("добавление к дому протокола решения органа государственной власти и привязка к сп" +
            "ец счету")]
        [NUnit.Framework.TestCaseAttribute("1", "01.01.2015", "01.01.2015", "ОАО \"Россельхозбанк\"", "false", null)]
        public virtual void ДобавлениеКДомуПротоколаРешенияОрганаГосударственнойВластиИПривязкаКСпецСчету(string номер, string датаПротокола, string датаВступленияВСилу, string кредитнаяОрганизация, string способФормированияФондаНаСчетуРегиональногоОператора, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("добавление к дому протокола решения органа государственной власти и привязка к сп" +
                    "ец счету", exampleTags);
#line 99
this.ScenarioSetup(scenarioInfo);
#line 100
testRunner.Given("пользователь выбирает дом = \"ул. Совхозная, д. 111\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 101
testRunner.And("добавлячет к нему протокол типа = \"Протокол решения органа государственной власти" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 102
testRunner.And(string.Format("заполняет у протокола поля Номер {0}", номер), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 103
testRunner.And(string.Format("заполняет у протокола поля Дата протокола {0}", датаПротокола), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 104
testRunner.And(string.Format("заполняет у протокола поля Дата вступления в силу {0}", датаВступленияВСилу), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 105
testRunner.And(string.Format("заполняет у протокола поля Кредитная организация {0}", кредитнаяОрганизация), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 106
testRunner.And(string.Format("заполняет у протокола поля Способ формирования фонда на счету регионального опера" +
                        "тора {0}", способФормированияФондаНаСчетуРегиональногоОператора), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 107
testRunner.When("пользователь переводит протокол в статус = \"Утверждено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 108
testRunner.Then("дома нет в списке домов на счете регопа и нет в списке домов у спец счета", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("заполнение размеров взносов на КР")]
        [NUnit.Framework.TestCaseAttribute("с", "по", null)]
        [NUnit.Framework.TestCaseAttribute("01.01.2015", "31.12.2015", null)]
        public virtual void ЗаполнениеРазмеровВзносовНаКР(string аттрибут, string значение, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("заполнение размеров взносов на КР", exampleTags);
#line 127
this.ScenarioSetup(scenarioInfo);
#line 128
testRunner.When("пользователь добавляет запись в Размеры взносов на КР", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 129
testRunner.And(string.Format("заполняет аттрибуты {0} значениеми {1}", аттрибут, значение), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 130
testRunner.Then("в появляется новая запись в Размерах взносов на КР", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("подтверждение начислений после расчета")]
        public virtual void ПодтверждениеНачисленийПослеРасчета()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("подтверждение начислений после расчета", ((string[])(null)));
#line 138
this.ScenarioSetup(scenarioInfo);
#line 139
testRunner.Given("лицевые счета есть в реестре лицевых счетов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 140
testRunner.Given("на домах есть протоколы расчета в статусе \"Утверждено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 141
testRunner.When("пользователь вызывает операцию расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 142
testRunner.Then("в Реестре неподтвержденных начислений появляется запись с количеством ЛС, которые" +
                    " попадают в условия расчета лс", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 143
testRunner.When("начисления не подтверждены", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Если ");
#line 144
testRunner.And("пользователь заврывает период", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 145
testRunner.Then("период не закрывается и падает ошибка с предупреждением о необходимости подтвержд" +
                    "ения начислений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 146
testRunner.When("пользователь подтверждает начисления в реестре неподтвержденных начислений", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 147
testRunner.Then("у записи по выбранным начислениям в неподтвержденных начислениях меняется статус " +
                    "с \"Ожидание\" на \"Подтверждено\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Тогда ");
#line 148
testRunner.And("создается протокол расчета по каждому лс за текущий период", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("операция закрытие периода")]
        public virtual void ОперацияЗакрытиеПериода()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("операция закрытие периода", ((string[])(null)));
#line 151
this.ScenarioSetup(scenarioInfo);
#line 152
testRunner.Given("лицевые счета есть в реестре лицевых счетов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 153
testRunner.Given("на домах есть протоколы расчета в статусе \"Утверждено\" и с привязкой к счету рего" +
                    "па или к спец счету", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 154
testRunner.Given("на счете регопа или спец счета привязаны дома", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 155
testRunner.Given("произведен расчет начислений и подтверждены начисления", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 156
testRunner.When("пользователь закрывает текущий период", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 157
testRunner.Then("на ЛС, по которым был произведен расчет, появляются начисления по закрывающемуся " +
                    "периоду", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line 158
testRunner.And("на домах, которые привязаны к ЛС в счете начислений появляются начисления по закр" +
                    "ывающемуся периоду", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 159
testRunner.And("рассчитывается исходящее сальдо по закрывающемуся периоду", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 160
testRunner.And("обновляется баланс счета (на доме, и в ЛС)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 161
testRunner.And("статус текущего периода = \"Закрыт\" и дата закрытия = текущей дате", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 162
testRunner.And("в периодах появляется новая запись с новым периодом, у которой статус = \"Открыт\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 163
testRunner.And("в счете дома и в карточке ЛС появляется новая запись по новому периоду", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 164
testRunner.And("входящее сальдо нового периода равно исходящему сальдо прошлого периода", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("сбой закрытия периода")]
        public virtual void СбойЗакрытияПериода()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("сбой закрытия периода", ((string[])(null)));
#line 167
this.ScenarioSetup(scenarioInfo);
#line 168
testRunner.Given("лицевые счета есть в реестре лицевых счетов", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 169
testRunner.Given("на домах есть протоколы расчета в статусе \"Утверждено\" и с привязкой к счету рего" +
                    "па или к спец счету", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 170
testRunner.Given("на счете регопа или спец счета привязаны дома", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 171
testRunner.Given("произведен расчет начислений и подтверждены начисления", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 172
testRunner.Given("пользователь запустил закрытие периода", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 173
testRunner.Given("на ЛС, по которым был произведен расчет, появляются начисления по закрывающемуся " +
                    "периоду", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Дано ");
#line 174
testRunner.When("произошел сбой в системе/выключили свет/упал сервак", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Когда ");
#line 175
testRunner.And("пользователь повторно запустил закрытие периода", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "И ");
#line 176
testRunner.Then("начисления, произведенные не до конца при первом закрытии периода, откатываюсь и " +
                    "задвоений по суммам нет", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "То ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
